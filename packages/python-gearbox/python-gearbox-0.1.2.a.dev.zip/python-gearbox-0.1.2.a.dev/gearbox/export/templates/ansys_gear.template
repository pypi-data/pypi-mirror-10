//ag.gui.NewFile();
ag.m.ClearAllErrors();
//ag.m.NewSession (true);
ag.gui.setUnits(ag.c.UnitMillimeter, ag.c.UnitDegree, ag.c.No);

function planeSketchesOnly (p)
{

//Plane
p.Plane  = agb.GetActivePlane();
p.Origin = p.Plane.GetOrigin();
p.XAxis  = p.Plane.GetXAxis();
p.YAxis  = p.Plane.GetYAxis();

//Sketch
p.Sk1 = p.Plane.NewSketch();
p.Sk1.Name = "Gear";

//Edges
with (p.Sk1)
{
  p.Sp1 = SplineBegin();
  with(p.Sp1)
  {
    SplineFlexibility = agc.Yes;
    {% for coord in gear.formcoords -%}
        SplineXY({{ coord[0] }}, {{ coord[1] }});
    {% endfor %}
    SplineFitPtEnd();
  }
  p.Ln2 = Line({{gear.formcoords[0][0]}}, {{gear.formcoords[0][1]}}, {{gear.shaftcoords[1][0]}},{{gear.shaftcoords[1][1]}});

  p.Ln3 = Line({{gear.shaftcoords[0][0]}}, {{ gear.shaftcoords[0][1] }}, {{gear.formcoords[-1][0]}}, {{gear.formcoords[-1][1]}});
  p.Cr4 = ArcCtrEdge(
              0, 0,
              {{gear.shaftcoords[0][0]}}, {{gear.shaftcoords[0][1]}},
              {{gear.shaftcoords[-1][0]}}, {{gear.shaftcoords[-1][1]}});
}

ag.selectedFeature = ag.gui.TreeviewFeature(p.Sk1.Name, 0);
var SSk1=ag.gui.CreateSurfSk();  // IAnsFSurfSk
SSk1.Name="GearSurf";
SSk1.Operation=ag.c.Frozen;
SSk1.WithPlaneNormal=ag.c.Yes;

//Dimensions and/or constraints
with (p.Plane)
{
  //Constraints
}

p.Plane.EvalDimCons(); //Final evaluate of all dimensions and constraints in plane

return p;
} //End Plane JScript function: planeSketchesOnly

//Call Plane JScript function
var ps1 = planeSketchesOnly (new Object());

//Finish
agb.Regen(); //To insure model validity
//End DM JScript
