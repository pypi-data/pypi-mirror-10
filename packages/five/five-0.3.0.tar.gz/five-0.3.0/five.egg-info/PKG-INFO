Metadata-Version: 1.1
Name: five
Version: 0.3.0
Summary: Gives you five. A library to overcomplicate `5`
Home-page: http://github.com/lord63/five.py
Author: lord63
Author-email: lord63.j@gmail.com
License: MIT
Description: Five.py
        =======
        
        |Latest Version| |Build Status| |Coverage Status|
        
        A library to overcomplicate 5. It's a python port of the javascript
        `five <https://github.com/jackdcrawford/five>`__.
        
        Install
        -------
        
        ::
        
            $ pip install five
        
        Usage
        -----
        
        .. code:: python
        
            from five import Five
            five = Five()
        
        Basic 5
        ~~~~~~~
        
        .. code:: python
        
            five()  # 5
            five() + five()  # 10
            five() * five()  # 25
            five() / five()  # 1
            five() - five()  # 0
            five.pow(3)      # 125
            five.sqrt()      # 2.23606797749979
        
        Counting is simple
        ~~~~~~~~~~~~~~~~~~
        
        .. code:: python
        
            five() + five()  # 10
            five() + five() - five() / five()  # 9
            five() + (five() + five() + five()) / five()  # 8
            five() + (five() + five()) / five()  # 7
            five() + five() / five()  # 6
            five()  # 5
            five() - five() / five()  # 4
            five() - (five() + five()) / five()  # 3
            (five() + five()) / five()  # 2
            five() / five()  # 1
        
        Math
        ~~~~
        
        .. code:: python
        
            five.fibonacci()  # 5
            five.factorial()  # 120
        
        Different sorts of 5
        ~~~~~~~~~~~~~~~~~~~~
        
        .. code:: python
        
            five.up_high()  # ‚Åµ
            five.down_low()  # ‚ÇÖ
            five.too_slow()  # 5, with a 555-millisecond delay
            five.roman()  # V
            five.morse_code()  # di-di-di-di-dah
            five.negative()  # -5
            five.loud()  # FIVE
            five.loud('piglatin')  # IVEFAY
            five.smooth()  # S
            five.figlet()  #   _____
                              | ____|
                              | |__
                              |___ \
                               ___) |
                              |____/
            five.stars()  # *****
            five.bool()   # True
            five.elements()  # ["Metal", "Wood", "Water", "Fire", "Earth"]
            five.senses()  # ["Sight", "Hearing", "Taste", "Smell", "Touch"]
        
        5 goes multilingual
        ~~~~~~~~~~~~~~~~~~~
        
        .. code:: python
        
            five.afrikaans()  # vyf
            five.arabic()  # ÿÆŸÖÿ≥ÿ©
            five.azerbaijani()  # be≈ü
            five.basque()  # bost
            five.belarusian  # –ø—è—Ü—å
            five.bosnian()  # pet
            five.bulgarian()  # –ø–µ—Ç
            five.canadian()  # five eh
            five.catalan()  # cinc
            five.chinese()  # ‰∫î
            five.choctaw()  # tahlapi
            five.croatian()  # pet
            five.czech()  # pƒõt
            five.danish()  # fem
            five.dovah()  # hen
            five.dutch()  # vijf
            five.elvish()  # lempe
            five.english()  # Five
            five.estonian()  # viis
            five.finnish()  # viisi
            five.french()  # cinq
            five.german()  # f√ºnf
            five.greek()  # œÄŒ≠ŒΩœÑŒµ
            five.hebrew()  # ◊ó◊û◊©
            five.hindi()  # ‡§™‡§æ‡§Ç‡§ö
            five.hungarian()  # √∂t
            five.icelandic()  # fimm
            five.indonesian()  # lima
            five.irish()  # c√∫ig
            five.italian()  # cinque
            five.japanese()  # ‰∫î
            five.kannada()  # ‡≤ê‡≤¶‡≥Å
            five.klingon()  # vagh
            five.korean()  # Ïò§
            five.latin()  # quinque
            five.latvian()  # pieci
            five.lithuanian()  # penki
            five.lojban()  # mu
            five.manx()  # queig
            five.mongolian()  # —Ç–∞–≤–∞–Ω
            five.norwegian()  # fem
            five.persian()  # ŸæŸÜÿ¨
            five.piglatin()  # ivefay
            five.polish()  # piƒôƒá
            five.portuguese()  # cinco
            five.punjabi()  # ‡®™‡©∞‡®ú
            five.romanian()  # cinci
            five.russian()  # –ø—è—Ç—å
            five.serbian()  # pet
            five.slovakian()  # p√§≈•
            five.slovenian()  # pet
            five.spanish()  # cinco
            five.swedish()  # fem
            five.tagalog()  # lima
            five.tamil()  # ‡Æê‡Æ®‡Øç‡Æ§‡ØÅ
            five.telugu()  # ‡∞ê‡∞¶‡±Å
            five.thai()  # ‡∏´‡πâ‡∏≤
            five.turkish()  # be≈ü
            five.xhosa()  # zintlanu
            five.ukrainian()  # –ø‚Äô—è—Ç—å
            five.urdu()  # ŸæÿßŸÜ⁄Ü
            five.vietnamese()  # nƒÉm
            five.welsh()  # pump
        
        Different radices
        ~~~~~~~~~~~~~~~~~
        
        .. code:: python
        
            five.binary()  # 101
            five.octal()  # 5
            five.hex()  # 5
        
        Map and Reduce
        ~~~~~~~~~~~~~~
        
        .. code:: python
        
            five.map([1, 2, 3])  # [5, 5, 5]
            five.reduce([1, 2, 3])  # 5
        
        Novelty
        ~~~~~~~
        
        .. code:: python
        
            five.fab()  # ['Juwan Howard','Ray Jackson','Jimmy King','Jalen Rose','Chris Webber']
            five.jackson()  # ['Jackie','Tito','Jermaine','Marlon','Michael']
            five.famous_five()  # ['Julian', 'Dick', 'Anne', 'George', 'Timmy']
        
        Rotation
        ~~~~~~~~
        
        .. code:: python
        
            five.rotate("five.py")  #knaj.ud
        
        Unicode
        ~~~~~~~
        
        .. code:: python
        
            five.oclock()  # 'üïî'
        
        Development
        -----------
        
        run the tests:
        
        ::
        
            $ pip install -r dev-requirements.txt
            $ make test
        
        Credits
        -------
        
        All the glories should belong to
        `@jackdcrawford <https://github.com/jackdcrawford>`__, I just port it to
        python :)
        
        License
        -------
        
        MIT.
        
        .. |Latest Version| image:: http://img.shields.io/pypi/v/five.svg
           :target: https://pypi.python.org/pypi/five
        .. |Build Status| image:: https://travis-ci.org/lord63/five.py.svg
           :target: https://travis-ci.org/lord63/five.py
        .. |Coverage Status| image:: https://coveralls.io/repos/lord63/five.py/badge.svg
           :target: https://coveralls.io/r/lord63/five.py
        
Keywords: five fun
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: Linux
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
