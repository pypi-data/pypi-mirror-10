#vim: set syntax=python

__author__ = "Johannes KÃ¶ster"
__email__ = "koester@jimmy.harvard.edu"
__license__ = "MIT"

"""
A CRISPR/Cas9 analysis workflow using MAGeCK and VISPR.
"""


configfile: "config.yaml"


import yaml
from vispr.workflow import postprocess_config, experiments


postprocess_config(config)


rule all:
    input:
        expand("results/{experiment}.vispr.yaml", experiment=config["experiments"])


rule fastqc:
    input:
        lambda wildcards: config["samples"][wildcards.sample]
    output:
        "results/qc/{sample}"
    log:
        "logs/fastqc/{sample}.log"
    shell:
        "mkdir -p {output}; rm -rf {output}/*; "
        "fastqc -f fastq --extract -o {output} {input} 2> {log}"


rule mageck_count:
    input:
        fastq=config["samples"].values(),
        library=config["library"]
    output:
        "results/count/all.count.txt",
        "results/count/all.count.median_normalized.txt",
        "results/count/all.countsummary.txt"
    params:
        labels=",".join(config["samples"].keys()),
        fastqs=" ".join(",".join(replicates) for replicates in config["samples"].values()),
        prefix="results/count/all"
    log:
        "logs/mageck/count/all.log"
    shell:
        "mageck count --output-prefix {params.prefix} "
        "--list-seq {input.library} "
        "--fastq {params.fastqs} --sample-label {params.labels} "
        "--trim-5 {config[sgrnas][trim-5]} --sgrna-len {config[sgrnas][len]} 2> {log}"


rule mageck_test:
    input:
        "results/count/all.count.txt"
    output:
        "results/test/{experiment}.gene_summary.txt",
        "results/test/{experiment}.sgrna_summary.txt"
    params:
        prefix="results/test/{experiment}",
        treatment=lambda wildcards: ",".join(config["experiments"][wildcards.experiment]["treatment"]),
        control=lambda wildcards: ",".join(config["experiments"][wildcards.experiment]["control"])
    log:
        "logs/mageck/test/{experiment}.log"
    shell:
        "mageck test --output-prefix {params.prefix} "
        "--count-table {input} --treatment-id {params.treatment} "
        "--control-id {params.control} 2> {log}"


rule mageck_mle:
    input:
        counts="results/count/all.count.median_normalized.txt",
        designmatrix=lambda wildcards: config["experiments"][wildcards.experiment]["designmatrix"]
    output:
        "results/test/{experiment}.gene_summary.txt",
        "results/test/{experiment}.sgrna_summary.txt"
    params:
        prefix="results/test/{experiment}"
    log:
        "logs/mageck/test/{experiment}.log"
    shell:
        "mageck mle --output-prefix {params.prefix} "
        "--count-table {input.counts} "
        "--design-matrix {input.designmatrix} 2> {log}"


ruleorder: vispr > vispr_nosamples


rule vispr:
    input:
        results="results/test/{experiment}.gene_summary.txt",
        counts="results/count/all.count.median_normalized.txt",
        mapstats="results/count/all.countsummary.txt",
        fastqc=expand("results/qc/{sample}", sample=config["samples"])
    output:
        "results/{experiment}.vispr.yaml"
    run:
        vispr_config(input, output, wildcards, config)


rule vispr_nosamples:
    input:
        results="results/test/{experiment}.gene_summary.txt",
        counts="results/count/all.count.median_normalized.txt"
    output:
        "results/{experiment}.vispr.yaml"
    run:
        vispr_config(input, output, wildcards, config)
