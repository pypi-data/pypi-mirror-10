
# newclasscalc/calc_Calc_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '7C0F22E20EF70F54154B1CC01EA36310'
    
_lr_action_items = {'TIMES':([1,5,6,7,8,9,16,17,18,19,20,21,22,],[-10,10,-11,-11,-8,10,-9,-5,-6,10,-7,10,10,]),'LPAREN':([0,3,4,10,11,12,13,14,15,],[4,4,4,4,4,4,4,4,4,]),'NUMBER':([0,3,4,10,11,12,13,14,15,],[1,1,1,1,1,1,1,1,1,]),'DIVIDE':([1,5,6,7,8,9,16,17,18,19,20,21,22,],[-10,11,-11,-11,-8,11,-9,-5,-6,11,-7,11,11,]),'RPAREN':([1,7,8,9,16,17,18,19,20,21,],[-10,-11,-8,16,-9,-5,-6,-3,-7,-4,]),'PLUS':([1,5,6,7,8,9,16,17,18,19,20,21,22,],[-10,12,-11,-11,-8,12,-9,-5,-6,-3,-7,-4,12,]),'EXP':([1,5,6,7,8,9,16,17,18,19,20,21,22,],[-10,13,-11,-11,-8,13,-9,13,13,13,-7,13,13,]),'MINUS':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[3,-10,3,3,14,-11,-11,-8,14,3,3,3,3,3,3,-9,-5,-6,-3,-7,-4,14,]),'$end':([1,2,5,6,7,8,16,17,18,19,20,21,22,],[-10,0,-2,-11,-11,-8,-9,-5,-6,-3,-7,-4,-1,]),'EQUALS':([6,],[15,]),'NAME':([0,3,4,10,11,12,13,14,15,],[6,7,7,7,7,7,7,7,7,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[2,]),'expression':([0,3,4,10,11,12,13,14,15,],[5,8,9,17,18,19,20,21,22,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',110),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',114),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',119),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',120),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',121),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',122),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','calc.py',123),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',133),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',141),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',145),
]
