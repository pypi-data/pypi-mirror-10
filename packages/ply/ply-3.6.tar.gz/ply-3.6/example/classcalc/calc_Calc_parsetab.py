
# classcalc/calc_Calc_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '7C0F22E20EF70F54154B1CC01EA36310'
    
_lr_action_items = {'LPAREN':([0,1,3,9,10,11,12,13,15,],[1,1,1,1,1,1,1,1,1,]),'$end':([2,4,5,6,8,14,16,17,18,19,20,21,22,],[-2,0,-10,-11,-11,-8,-9,-5,-6,-3,-7,-4,-1,]),'RPAREN':([5,7,8,14,16,17,18,19,20,21,],[-10,16,-11,-8,-9,-5,-6,-3,-7,-4,]),'EQUALS':([6,],[15,]),'PLUS':([2,5,6,7,8,14,16,17,18,19,20,21,22,],[11,-10,-11,11,-11,-8,-9,-5,-6,-3,-7,-4,11,]),'NUMBER':([0,1,3,9,10,11,12,13,15,],[5,5,5,5,5,5,5,5,5,]),'TIMES':([2,5,6,7,8,14,16,17,18,19,20,21,22,],[9,-10,-11,9,-11,-8,-9,-5,-6,9,-7,9,9,]),'EXP':([2,5,6,7,8,14,16,17,18,19,20,21,22,],[12,-10,-11,12,-11,-8,-9,12,12,12,-7,12,12,]),'DIVIDE':([2,5,6,7,8,14,16,17,18,19,20,21,22,],[10,-10,-11,10,-11,-8,-9,-5,-6,10,-7,10,10,]),'MINUS':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[3,3,13,3,-10,-11,13,-11,3,3,3,3,3,-8,3,-9,-5,-6,-3,-7,-4,13,]),'NAME':([0,1,3,9,10,11,12,13,15,],[6,8,8,8,8,8,8,8,8,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[4,]),'expression':([0,1,3,9,10,11,12,13,15,],[2,7,14,17,18,19,20,21,22,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',107),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',111),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',116),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',117),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',118),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',119),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','calc.py',120),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',130),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',134),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',138),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',142),
]
