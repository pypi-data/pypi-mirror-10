
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '9195A5F7E05E627AC0F404F95AEB41BA'
    
_lr_action_items = {'+':([2,5,6,7,8,13,15,16,17,18,19,20,],[9,-9,-10,-7,-10,9,-3,-6,-4,-5,-8,9,]),'*':([2,5,6,7,8,13,15,16,17,18,19,20,],[12,-9,-10,-7,-10,12,12,-6,12,-5,-8,12,]),'-':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[1,1,11,1,-9,-10,-7,-10,1,1,1,1,11,1,-3,-6,-4,-5,-8,11,]),'(':([0,1,3,9,10,11,12,14,],[3,3,3,3,3,3,3,3,]),'/':([2,5,6,7,8,13,15,16,17,18,19,20,],[10,-9,-10,-7,-10,10,10,-6,10,-5,-8,10,]),'=':([6,],[14,]),')':([5,7,8,13,15,16,17,18,19,],[-9,-7,-10,19,-3,-6,-4,-5,-8,]),'NUMBER':([0,1,3,9,10,11,12,14,],[5,5,5,5,5,5,5,5,]),'$end':([2,4,5,6,7,8,15,16,17,18,19,20,],[-2,0,-9,-10,-7,-10,-3,-6,-4,-5,-8,-1,]),'NAME':([0,1,3,9,10,11,12,14,],[6,8,8,8,8,8,8,8,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,3,9,10,11,12,14,],[2,7,13,15,16,17,18,20,]),'statement':([0,],[4,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','calc.py',55),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',59),
  ('expression -> expression + expression','expression',3,'p_expression_binop','calc.py',63),
  ('expression -> expression - expression','expression',3,'p_expression_binop','calc.py',64),
  ('expression -> expression * expression','expression',3,'p_expression_binop','calc.py',65),
  ('expression -> expression / expression','expression',3,'p_expression_binop','calc.py',66),
  ('expression -> - expression','expression',2,'p_expression_uminus','calc.py',73),
  ('expression -> ( expression )','expression',3,'p_expression_group','calc.py',77),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',81),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',85),
]
