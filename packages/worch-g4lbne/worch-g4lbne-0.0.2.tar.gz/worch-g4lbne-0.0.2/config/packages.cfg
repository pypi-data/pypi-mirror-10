# FIXME: remove explicit DYLD_LIBRARY_PATH settings when worch adds them implicitly for Mac

[package cmake] 
version = 3.2.2
features = tarball prepare makemake modulesfile
source_url = http://www.cmake.org/files/v{version_2digit}/{source_archive_file}
unpacked_target = bootstrap
prepare_cmd = ../../{source_dir}/{source_unpacked}/bootstrap
prepare_cmd_options = --prefix={install_dir}
prepare_target = cmake_install.cmake
build_target = bin/cmake
install_target = bin/cmake
export_PATH = prepend:{install_dir}/bin
userenv_PATH = prepend:{install_dir}/bin

[package modules]
version = 3.2.10
features = tarball, autoconf, makemake, modulesfile
source_url = http://prdownloads.sourceforge.net/{package}/{source_archive_file}
unpacked_target = configure
prepare_cmd_options = --without-x
build_target = modulecmd
install_target = Modules/{version}/bin/modulecmd
# Modules will self-manage version
install_dir = {PREFIX}

[package python]
version = 2.7.9
features = tarball, autoconf, makemake, modulesfile
source_unpacked = Python-{version}
source_archive_file = {source_unpacked}.tgz
source_url = http://www.python.org/ftp/{package}/{version}/{source_archive_file}
#source_url = https://legacy.python.org/ftp/{package}/{version}/{source_archive_file}
unpacked_target = README
prepare_cmd_options = --prefix={install_dir} --enable-shared
build_target = python
install_target = bin/python
export_PATH = prepend:{install_dir}/bin
export_PYTHONHOME = set:{install_dir}
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_PATH = prepend:{install_dir}/bin
userenv_PYTHONHOME = set:{install_dir}
userenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib

[package ipython]
version = 3.1
features = tarball, pypackage, modulesfile
install_dir = {python_install_dir}
environment = package:python
depends = unpack:python_install
source_url = http://archive.ipython.org/release/{version}/{source_archive_file}
unpacked_target = setup.py
build_target = build/lib/IPython/__init__.py
install_target = bin/ipython

[package xrootd]
features = tarball, cmake, makemake, modulesfile
depends = prepare:cmake_install
version = 3.3.6
source_url = http://xrootd.org/download/v{version}/{source_archive_file}
source_url_checksum = md5:8c2a2d66a684a8f4395c02ae249f5706
source_archive_file = {source_unpacked}.tar.gz
unpacked_target = README
build_target = src/xrdcp
install_target = bin/xrdcp
export_XRDSYS = {install_dir}
userenv_PATH = prepend:{install_dir}/bin

[package root]
version = 5.34.30
environment = group:buildtools, package:cmake, package:python, package:geant
#, package:xrootd
features = tarball, cmake, makemake, modulesfile
source_url = ftp://root.cern.ch/{package}/{source_archive_file}
depends = prepare:python_install, prepare:geant_install
#, prepare:xrootd_install
source_archive_file = {package}_v{version}.source.tar.gz
source_unpacked = {package}
unpacked_target = CMakeLists.txt
prepare_cmd_options = -Dmysql=OFF -Dgdml=ON -Dxml=ON -Dxrootd=OFF -Dpythia6=OFF -Dminuit2=ON -Dpython=ON -DPYTHON_LIBRARY={python_install_dir}/lib/libpython2.7.{soext} -DPYTHON_INCLUDE_DIR={python_install_dir}/include/python2.7
build_cmd = make
# warning: root doesn't always "like" being built with "make -jN"
build_cmd_options = 
build_target = bin/root.exe
install_target = bin/root.exe
buildenv_VERBOSE = set:1
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib
export_PATH = prepend:{install_dir}/bin
export_ROOTSYS = set:{install_dir}
export_PYTHONPATH = prepend:{install_dir}/lib
export_CMAKE_MODULE_PATH = prepend:{install_dir}/etc/cmake:{install_dir}/cmake/modules

userenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_PATH = prepend:{install_dir}/bin
userenv_ROOTSYS = set:{install_dir}
userenv_PYTHONPATH = prepend:{install_dir}/lib

[package xercesc]
version = 3.1.2
features = tarball, autoconf, makemake, modulesfile
source_unpacked=xerces-c-{version}
source_archive_file = {source_unpacked}.tar.gz
source_url = http://mirror.metrocast.net/apache/xerces/c/3/sources/{source_archive_file}
unpacked_target = README
build_target = src/libxerces-c.la
install_target = lib/libxerces-c.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib

userenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib

[package clhep]
version = 2.2.0.4
features = tarball, cmake, makemake, modulesfile
# you just gotta be different, don't you, CLHEP?
source_unpacked = {version}/CLHEP
source_archive_file = {package}-{version}.tgz
source_url = http://proj-clhep.web.cern.ch/proj-clhep/DISTRIBUTION/tarFiles/{source_archive_file}
unpacked_target = CMakeLists.txt
build_target = lib/libCLHEP-{version}.a
install_target = lib/libCLHEP-{version}.a
export_PATH = prepend:{install_dir}/bin
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib

userenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib


[package geant]
version = 4.9.6.p03
#version = 4.10.00.p02
#stupid_version = Geant4-10.0.2
stupid_version = Geant4-9.6.3
features = tarball, cmake, makemake, modulesfile
source_archive_file = {source_unpacked}.tar.gz
source_url = http://geant4.cern.ch/support/source/{source_archive_file}
source_unpacked = {package}{version}
unpacked_target = CMakeLists.txt
# fixme: hardcode compiler name
depends = prepare:xercesc_install
prepare_cmd_options = -DGEANT4_INSTALL_DATA=ON -DGEANT4_USE_QT=ON -DGEANT4_USE_RAYTRACER_X11=ON -DBUILD_STATIC_LIBS=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_GDML=ON -DXERCESC_ROOT_DIR:STRING={xercesc_install_dir} 
build_cmd_options = -j{NCPUS}
build_target = outputs/library/{kernelname}-g++/libG4track.so
install_target = include/Geant4/G4Track.hh
data_dir = {install_dir}/share/{stupid_version}/data
userenv_G4NEUTRONHPDATA={data_dir}/G4NDL4.4
userenv_G4LEDATA={data_dir}/G4EMLOW6.35
userenv_G4LEVELGAMMADATA={data_dir}/PhotonEvaporation3.0
userenv_G4RADIOACTIVEDATA={data_dir}/RadioactiveDecay4.0
userenv_G4NEUTRONXSDATA={data_dir}/G4NEUTRONXS1.4
userenv_G4PIIDATA={data_dir}/G4PII1.3
userenv_G4REALSURFACEDATA={data_dir}/RealSurface1.0
userenv_G4SAIDXSDATA={data_dir}/G4SAIDDATA1.1
userenv_G4ABLADATA={data_dir}/G4ABLA3.0

userenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib


[package dk2nu]
#version = 74
version = 99
features = vcs, cmake, makemake, modulesfile
# fixme: need to be able to specify FS location for this file
# patch_url = ../lbne-beamsim-worch/patches/{package}-{version}.patch
# patch_cmd_options = -p0
depends = prepare:root_install, prepare:cmake_install
source_url = http://cdcvs.fnal.gov/subversion/dk2nu/trunk/dk2nu
source_unpacked = {package}
vcs_flavor = svn
vcs_tag = {version}
unpacked_target = CMakeLists.txt
prepare_cmd_options = -DROOT_DIR:string={root_install_dir} -DWITH_GENIE=OFF
build_target = lib/libdk2nuTree.{soext}
install_target = lib/libdk2nuTree.{soext}
#buildenv_VERBOSE = 1
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib

userenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_DYLD_LIBRARY_PATH = prepend:{install_dir}/lib

[package g4lbne]
#version = HEAD
version = v3r3p8
# version = v3r0p12
features = vcs, patch, cmake, makemake, modulesfile
depends = prepare:root_install, prepare:geant_install, prepare:dk2nu_install
source_url = http://cdcvs.fnal.gov/projects/lbne-beamsim/g4lbne.git
vcs_flavor = git
vcs_tag = {version}
unpacked_target = CMakeLists.txt
patch_url = patches/g4lbne.patch
patch_cmd_options = -p0
prepare_cmd_options = -DROOT_DIR:string={root_install_dir} -DGEANT4_DIR:string={geant_install_dir} -DDK2NU_DIR:string={dk2nu_install_dir} -DXERCESC_DIR:string={xercesc_install_dir} -DCLHEP_DIR:string={clhep_install_dir} 
build_target = g4lbne
install_target = bin/{build_target}
buildenv_VERBOSE = set:1
userenv_PATH = prepend:{install_dir}/bin
