#!/bin/bash
#
# FILE:        ec2ssh
# DESCRIPTION: SSH into EC2 instances by public IP/DNS
# AUTHOR:      Amber Jain
# EMAIL:       i.amber.jain {at} gmail

# TODO:
# 1. Handle non-existing instance name supplied to -c

set -e

SELF_NAME=$(basename $0)

help(){
  cat<<EOF
Usage:
  $SELF_NAME [options]
Options:
  -h <host_ip_or_dns> EC2 host (Public/Elastic IP or public DNS of EC2 instance to connect with)
  -i <identity_file>  File from which the identity (private key) for public key authentication is read
  -l <login_name>     Specifies the username to log in as on the EC2 host
  -p <ssh_port>       Port to connect to on the remote host
  -v                  Turn on verbose output for SSH command
EOF
exit 0
}

# Print usage message if no arguments are given
test $# -eq 0 && { help; }

CMD="ssh"
while getopts "h:i:l:p:v" opt; do
  case $opt in
    h)
      EC2_HOST=$OPTARG ;;
      #CMD="$CMD $OPTARG" ;;
    i)
      KEY_FILE_LOCATION=$OPTARG
      CMD="$CMD -i $OPTARG" ;;
    l)
      SSH_USER=$OPTARG
      CMD="$CMD -l $OPTARG" ;;
    p)
      SSH_PORT=$OPTARG
      CMD="$CMD -p $OPTARG" ;;
    v)
      #SSH_VERBOSE="-vvv"
      CMD="$CMD -vvv" ;;
    \?)
      #echo "Invalid option: -$OPTARG" >&2
      help
      exit 1
      ;;
  esac
done

INSTANCE_STATE=`aws ec2 describe-instances --filters "Name=tag:Name,Values=$EC2_HOST" --query 'Reservations[].Instances[].[State.Name]'`

if [[ $INSTANCE_STATE == "stopped" ]] ; then
  echo "EC2 instance '$EC2_HOST' is NOT running. If you want to connect, ask your superadmin to boot this EC2 instance first."
  exit 2
elif [[ $INSTANCE_STATE == "running" ]]; then
  echo "EC2 instance '$EC2_HOST' is running; Trying to SSH now..."
else
  echo "EC2 instance '$EC2_HOST' does NOT exists. Please check output of 'ec2list' to see running EC2 instances."
  exit 3
  #MESSAGE="Detected public DNS name of '$OPTARG' as '$INSTANCE_PUBLIC_DNS_NAME'" ; green_echo
fi

INSTANCE_PUBLIC_DNS_NAME=`aws ec2 describe-instances --filters "Name=tag:Name,Values=$EC2_HOST" --query 'Reservations[].Instances[].[PublicDnsName]'`
CMD="$CMD $INSTANCE_PUBLIC_DNS_NAME"

if [[ -z "$SSH_USER" ]] ; then
  echo "You didnt specify login username. Trying to SSH with amazon's default username 'ubuntu'..."
  CMD="$CMD -l ubuntu"
fi

$CMD