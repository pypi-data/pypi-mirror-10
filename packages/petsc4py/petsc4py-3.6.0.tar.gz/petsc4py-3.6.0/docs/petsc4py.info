This is petsc4py.info, produced by makeinfo version 5.1 from
petsc4py.texi.

     PETSc for Python 3.6.0, July 05, 2015

     Lisandro Dalcin

     Copyright © 2015, Lisandro Dalcin

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* petsc4py: (petsc4py.info). PETSc for Python.
END-INFO-DIR-ENTRY


   Generated by Sphinx 1.1.3.


File: petsc4py.info,  Node: Top,  Next: Contents,  Up: (dir)

PETSc for Python
****************

     PETSc for Python 3.6.0, July 05, 2015

     Lisandro Dalcin

     Copyright © 2015, Lisandro Dalcin

     Authors: Lisandro Dalcin

     Contact: <dalcinl@gmail.com>

     Organization: CIMEC(1)

     Address: CCT CONICET, 3000 Santa Fe, Argentina

     Web Site: ‘https://bitbucket.org/petsc/petsc4py’

     Date: July 05, 2015

Abstract
========

This document describes petsc4py(2), a Python(3) port to the PETSc(4)
libraries.

  PETSc(5) (the Portable, Extensible Toolkit for Scientific Computation)
is a suite of data structures and routines for the scalable (parallel)
solution of scientific applications modeled by partial differential
equations.  It employs the MPI(6) standard for all message-passing
communication.

  This package provides an important subset of PETSc functionalities and
uses NumPy(7) to efficiently manage input and output of array data.

  A _good friend_ of petsc4py is:

        * mpi4py(8): Python bindings for MPI(9), the _Message Passing
          Interface_.

  Other projects depends on petsc4py:

        * slepc4py(10): Python bindings for SLEPc(11), the _Scalable
          Library for Eigenvalue Problem Computations_.

* Menu:

* Contents:: 
* Index:: 

 — The Detailed Node Listing —

Contents

* Overview:: 
* Installation:: 
* Tutorial:: 
* Citations:: 

Overview

* Components:: 

Installation

* Using pip or easy_install:: 
* Using distutils:: 

Using distutils

* Requirements:: 
* Downloading:: 
* Building:: 
* Installing:: 


   ---------- Footnotes ----------

   (1) http://www.cimec.org.ar

   (2) http://bitbucket.org/petsc/petsc4py

   (3) http://www.python.org

   (4) http://www.mcs.anl.gov/petsc/

   (5) http://www.mcs.anl.gov/petsc/

   (6) http://www.mpi-forum.org

   (7) http://www.numpy.org

   (8) http://bitbucket.org/mpi4py/mpi4py

   (9) http://www.mpi-forum.org

   (10) http://bitbucket.org/slepc/slepc4py

   (11) http://slepc.upv.es


File: petsc4py.info,  Node: Contents,  Next: Index,  Prev: Top,  Up: Top

1 Contents
**********

* Menu:

* Overview:: 
* Installation:: 
* Tutorial:: 
* Citations:: 

Overview

* Components:: 

Installation

* Using pip or easy_install:: 
* Using distutils:: 

Using distutils

* Requirements:: 
* Downloading:: 
* Building:: 
* Installing:: 


File: petsc4py.info,  Node: Overview,  Next: Installation,  Up: Contents

1.1 Overview
============

PETSc(1) is a suite of data structures and routines for the scalable
(parallel) solution of scientific applications modeled by partial
differential equations.  It employs the MPI(2) standard for all
message-passing communication.

  PETSc is intended for use in large-scale application projects *note
[petsc-efficient]: 5, and several ongoing computational science projects
are built around the PETSc libraries.  With strict attention to
component interoperability, PETSc facilitates the integration of
independently developed application modules, which often most naturally
employ different coding styles and data structures.

  PETSc is easy to use for beginners *note [petsc-user-ref]: 6.
Moreover, its careful design allows advanced users to have detailed
control over the solution process.  PETSc includes an expanding suite of
parallel linear and nonlinear equation solvers that are easily used in
application codes written in C, C++, and Fortran.  PETSc provides many
of the mechanisms needed within parallel application codes, such as
simple parallel matrix and vector assembly routines that allow the
overlap of communication and computation.  (petsc-user-ref) Satish
Balay, Kris Buschelman, Victor Eijkhout, William D. Gropp, Dinesh
Kaushik, Matthew G. Knepley, Lois Curfman McInnes, Barry F. Smith and
Hong Zhang.  PETSc Users Manual.  ANL-95/11 - Revision 2.1.5.  Argonne
National Laboratory.  2004 (petsc-efficient) Satish Balay, Victor
Eijkhout, William D. Gropp, Lois Curfman McInnes and Barry F. Smith.
Efficient Management of Parallelism in Object Oriented Numerical
Software Libraries.  Modern Software Tools in Scientific Computing.  E.
Arge, A. M. Bruaset and H. P. Langtangen, editors.  163–202.  Birkhauser
Press.  1997.

* Menu:

* Components:: 

   ---------- Footnotes ----------

   (1) http://www.mcs.anl.gov/petsc/

   (2) http://www.mpi-forum.org


File: petsc4py.info,  Node: Components,  Up: Overview

1.1.1 Components
----------------

PETSc is designed with an object-oriented style.  Almost all
user-visible types are abstract interfaces with implementations that may
be chosen at runtime.  Those objects are managed through handles to
opaque data structures which are created, accessed and destroyed by
calling appropriate library routines.

  PETSc consists of a variety of components.  Each component manipulates
a particular family of objects and the operations one would like to
perform on these objects.  These components provide the functionality
required for many parallel solutions of PDEs.

     Vec: Provides the vector operations required for setting up and
     solving large-scale linear and nonlinear problems.  Includes
     easy-to-use parallel scatter and gather operations, as well as
     special-purpose code for handling ghost points for regular data
     structures.

     Mat: A large suite of data structures and code for the manipulation
     of parallel sparse matrices.  Includes four different parallel
     matrix data structures, each appropriate for a different class of
     problems.

     PC: A collection of sequential and parallel preconditioners,
     including (sequential) ILU(k), LU, and (both sequential and
     parallel) block Jacobi, overlapping additive Schwarz methods and
     (through BlockSolve95) ILU(0) and ICC(0).

     KSP: Parallel implementations of many popular Krylov subspace
     iterative methods, including GMRES, CG, CGS, Bi-CG-Stab, two
     variants of TFQMR, CR, and LSQR. All are coded so that they are
     immediately usable with any preconditioners and any matrix data
     structures, including matrix-free methods.

     SNES: Data-structure-neutral implementations of Newton-like methods
     for nonlinear systems.  Includes both line search and trust region
     techniques with a single interface.  Employs by default the above
     data structures and linear solvers.  Users can set custom
     monitoring routines, convergence criteria, etc.

     TS: Code for the time evolution of solutions of PDEs.  In addition,
     provides pseudo-transient continuation techniques for computing
     steady-state solutions.


File: petsc4py.info,  Node: Installation,  Next: Tutorial,  Prev: Overview,  Up: Contents

1.2 Installation
================

* Menu:

* Using pip or easy_install:: 
* Using distutils:: 


File: petsc4py.info,  Node: Using pip or easy_install,  Next: Using distutils,  Up: Installation

1.2.1 Using *pip* or *easy_install*
-----------------------------------

You can use *pip* to install ‘petsc4py’ and its dependencies (‘mpi4py’
is optional but highly recommended):

     $ pip install [--user] numpy mpi4py
     $ pip install [--user] petsc petsc4py

  Alternatively, you can use *easy_install* (deprecated):

     $ easy_install petsc4py

  If you already have a working PETSc installation, set environment
variables ‘PETSC_DIR’ and ‘PETSC_ARCH’ to appropriate values and next
use *pip*:

     $ export PETSC_DIR=/path/to/petsc
     $ export PETSC_ARCH=arch-linux2-c-opt
     $ pip install petsc4py


File: petsc4py.info,  Node: Using distutils,  Prev: Using pip or easy_install,  Up: Installation

1.2.2 Using *distutils*
-----------------------

* Menu:

* Requirements:: 
* Downloading:: 
* Building:: 
* Installing:: 


File: petsc4py.info,  Node: Requirements,  Next: Downloading,  Up: Using distutils

1.2.2.1 Requirements
....................

You need to have the following software properly installed in order to
build _PETSc for Python_:

   * Any MPI(1) implementation (2) (e.g., MPICH(3) or Open MPI(4)),
     built with shared libraries.

   * A matching version of PETSc(5) built with shared libraries.

   * NumPy(6) package.

   ---------- Footnotes ----------

   (1) http://www.mpi-forum.org

   (2) Unless you have appropiatelly configured and built PETSc without
MPI (configure option ‘--with-mpi=0’).

   (3) http://www.mpich.org/

   (4) http://www.open-mpi.org

   (5) http://www.mcs.anl.gov/petsc/

   (6) http://www.numpy.org


File: petsc4py.info,  Node: Downloading,  Next: Building,  Prev: Requirements,  Up: Using distutils

1.2.2.2 Downloading
...................

The _PETSc for Python_ package is available for download at the project
website generously hosted by Bitbucket.  You can use *curl* or *wget* to
get a release tarball.

   * Using *curl*:

          $ curl -O https://bitbucket.org/petsc/petsc4py/petsc4py-X.Y.tar.gz

   * Using *wget*:

          $ wget https://bitbucket.org/petsc/petsc4py/petsc4py-X.Y.tar.gz


File: petsc4py.info,  Node: Building,  Next: Installing,  Prev: Downloading,  Up: Using distutils

1.2.2.3 Building
................

After unpacking the release tarball:

     $ tar -zxf petsc4py-X.Y.tar.gz
     $ cd petsc4py-X.Y

  the distribution is ready for building.

     Note: *Mac OS X* users employing a Python distribution built with
     *universal binaries* may need to set the environment variables
     ‘MACOSX_DEPLOYMENT_TARGET’, ‘SDKROOT’, and ‘ARCHFLAGS’ to
     appropriate values.  As an example, assume your Mac is running
     *Snow Leopard* on a *64-bit Intel* processor and you want to
     override the hard-wired cross-development SDK in Python
     configuration, your environment should be modified like this:

          $ export MACOSX_DEPLOYMENT_TARGET=10.6
          $ export SDKROOT=/
          $ export ARCHFLAGS='-arch x86_64'

  Some environment configuration is needed to inform the location of
PETSc.  You can set (using *setenv*, *export* or what applies to you
shell or system) the environment variables ‘PETSC_DIR’, and ‘PETSC_ARCH’
indicating where you have built/installed PETSc:

     $ export PETSC_DIR=/usr/local/petsc
     $ export PETSC_ARCH=arch-linux2-c-opt

  Alternatively, you can edit the file ‘setup.cfg’ and provide the
required information below the ‘[config]’ section:

     [config]
     petsc_dir  = /usr/local/petsc
     petsc_arch = arch-linux2-c-opt
     ...

  Finally, you can build the distribution by typing:

     $ python setup.py build


File: petsc4py.info,  Node: Installing,  Prev: Building,  Up: Using distutils

1.2.2.4 Installing
..................

After building, the distribution is ready for installation.

  If you have root privileges (either by log-in as the root user of by
using *sudo*) and you want to install _PETSc for Python_ in your system
for all users, just do:

     $ python setup.py install

  The previous steps will install the ‘petsc4py’ package at standard
location ‘_prefix_/lib/python_X_._X_/site-packages’.

  If you do not have root privileges or you want to install _PETSc for
Python_ for your private use, just do:

     $ python setup.py install --user


File: petsc4py.info,  Node: Tutorial,  Next: Citations,  Prev: Installation,  Up: Contents

1.3 Tutorial
============

XXX To be written ...  Any contribution welcome!


File: petsc4py.info,  Node: Citations,  Prev: Tutorial,  Up: Contents

1.4 Citations
=============

If PETSc for Python been significant to a project that leads to an
academic publication, please acknowledge that fact by citing the
project.

   * L. Dalcin, P. Kler, R. Paz, and A. Cosimo, _Parallel Distributed
     Computing using Python_, Advances in Water Resources,
     34(9):1124-1139, 2011.
     ‘http://dx.doi.org/10.1016/j.advwatres.2011.04.013’

   * S. Balay, S. Abhyankar, M.F. Adams, J. Brown, P. Brune, K.
     Buschelman, L. Dalcin, V. Eijkhout, W.D. Gropp, D. Kaushik, M.G.
     Knepley, L. Curfman McInnes, K. Rupp, B.F. Smith, S. Zampini, and
     H. Zhang, _PETSc Users Manual_, ANL-95/11 - Revision 3.6, 2015.
     ‘http://www.mcs.anl.gov/petsc/petsc-current/docs/manual.pdf’


File: petsc4py.info,  Node: Index,  Prev: Contents,  Up: Top

Index
*****

 [index ]
* Menu:

* ARCHFLAGS:                             Building.             (line 15)
* environment variable; ARCHFLAGS:       Building.             (line 15)
* environment variable; MACOSX_DEPLOYMENT_TARGET: Building.    (line 14)
* environment variable; PETSC_ARCH:      Using pip or easy_install.
                                                               (line 17)
* environment variable; PETSC_ARCH <1>:  Building.             (line 27)
* environment variable; PETSC_DIR:       Using pip or easy_install.
                                                               (line 17)
* environment variable; PETSC_DIR <1>:   Building.             (line 27)
* environment variable; SDKROOT:         Building.             (line 15)
* MACOSX_DEPLOYMENT_TARGET:              Building.             (line 14)
* PETSC_ARCH:                            Using pip or easy_install.
                                                               (line 17)
* PETSC_ARCH <1>:                        Building.             (line 27)
* PETSC_DIR:                             Using pip or easy_install.
                                                               (line 17)
* PETSC_DIR <1>:                         Building.             (line 27)
* SDKROOT:                               Building.             (line 15)



Tag Table:
Node: Top335
Ref: index doc541
Ref: 0541
Ref: Top-Footnote-11962
Ref: Top-Footnote-21994
Ref: Top-Footnote-32038
Ref: Top-Footnote-42068
Ref: Top-Footnote-52106
Ref: Top-Footnote-62144
Ref: Top-Footnote-72177
Ref: Top-Footnote-82206
Ref: Top-Footnote-92249
Ref: Top-Footnote-102282
Ref: Top-Footnote-112327
Node: Contents2356
Ref: index contents2432
Ref: 12432
Ref: index petsc-for-python2432
Ref: 22432
Node: Overview2703
Ref: overview overview2779
Ref: 32779
Ref: overview doc2779
Ref: 42779
Ref: overview petsc-user-ref3957
Ref: 63957
Ref: overview petsc-efficient4216
Ref: 54216
Ref: Overview-Footnote-14614
Ref: Overview-Footnote-24652
Node: Components4685
Ref: overview cimec4742
Ref: 74742
Ref: overview components4742
Ref: 84742
Node: Installation6936
Ref: install installation7029
Ref: 97029
Ref: install doc7029
Ref: a7029
Node: Using pip or easy_install7126
Ref: install using-pip-or-easy-install7226
Ref: b7226
Node: Using distutils7859
Ref: install using-distutils7959
Ref: c7959
Node: Requirements8083
Ref: install requirements8169
Ref: d8169
Ref: Requirements-Footnote-18539
Ref: Requirements-Footnote-28572
Ref: Requirements-Footnote-38688
Ref: Requirements-Footnote-48718
Ref: Requirements-Footnote-58750
Ref: Requirements-Footnote-68788
Node: Downloading8817
Ref: install cimec8920
Ref: e8920
Ref: install downloading8920
Ref: f8920
Node: Building9323
Ref: install building9424
Ref: 109424
Node: Installing10860
Ref: install installing10941
Ref: 1110941
Node: Tutorial11522
Ref: tutorial doc11616
Ref: 1211616
Ref: tutorial tutorial11616
Ref: 1311616
Node: Citations11693
Ref: citing citations11766
Ref: 1411766
Ref: citing doc11766
Ref: 1511766
Node: Index12501

End Tag Table


Local Variables:
coding: utf-8
End:
