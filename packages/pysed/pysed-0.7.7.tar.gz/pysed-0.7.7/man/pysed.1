.\"                                      -*- nroff -*-
.\" Copyright (C) 2014-2015 Dimitris Zlatanidis
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.TH pysed "10" "4 2015" "pysed"
.SH NAME
pysed is utility that parses and transforms text
.SH SYNOPSIS
Usage: pysed [-h] [-v]
             [[-r] [-f] [-s] [-m] [-l] [-g] [-s] --write]
.SH DESCRIPTION
Pysed is a stream editor, is used to perform basic text transformations 
from a file or from pipeline. It reads text, line by line, from a file 
and replace, insert or print all text or specific area.

.SH EXAMPLES
Usage: pysed [OPTION] {pattern} {repl} {lines/max/flag} [input-file]

pysed is utility that parses and transforms text

optional arguments:
  -h, --help       Print this help message and exit
  -v, --version    Print program version and exit
  -r, --replace    Search and replace text
  -f, --findall    Find all from pattern in text
  -s, --search     Search for the first matching
  -m, --match      Pattern matching in the beginning
  -l, --lines      Search pattern and print lines
  -g, --highlight  Highlight and print text
  -t, --stat       Print text statistics
      --write      Write changes to file

.SH GLOBAL OPTIONS
.SS
\fB\-v\fP, \fB\-\-version\fP
Print the version of program and exit.

.SS -r, --replace, search and replace text
\fBpysed\fP \fB-r\fP \fB"pattern"\fP \fB"replace"\fP \fBlines/max/flag\fP \fBinput-file\fP
.PP
Replace part text throughout the text or the text in specific lines and quantities and 
if necessary use a flag.
Example:
$ printf "This is my cat,\\n whose name is Betty.\\nThis is my dog,\\n whose name is Frank.\\n" | pysed -r "nAme" "surname" 4/0/I
This will replace the word 'name' in 'surname' in line 4 and ignore uppercase.

.SS -f, --findall, find all from pattern in text
\fBpysed\fP \fB-f\fP \fB"pattern"\fP \fB""\fP \fBlines/0/flags\fP \fBinput-file\fP
.PP
Scan through string looking for the all location where the regular expression 
pattern produces a match, and print text. 
Example:
$ printf "This is my cat,\\n whose name is Betty.\\nThis is my dog,\\n whose name is Frank.\\n" | pysed -f "is" "" 3
This should print two words 'is is' from line 3.

.SS -s, --search, search for the first matching
\fBpysed\fP \fB-s\fP \fB"pattern"\fP \fB""\fP \fBlines/group/flag\fP \fBinput-file\fP
.PP
Scan through string looking for the first location where the regular expression 
pattern produces a match, and print text. 
Example:
$ printf "This is my cat,\\n whose name is Betty.\\nThis is my dog,\\n whose name is Frank.\\n" | pysed -s "is" "" 3
This should print word 'is' from line 3.

.SS -m, --match, pattern matching in the beginning
\fBpysed\fP \fB-m\fP \fB"pattern"\fP \fB""\fP \fBlines/group/flag\fP \fBinput-file\fP
.PP
Match text at the beginning of the string.
Example:
$ printf "This is my cat,\\n whose name is Betty.\\nThis is my dog,\\n whose name is Frank.\\n" | pysed -m "This" "" 3

This should print word 'This' from line 3.

.SS -l, --lines, search pattern and print lines
\fBpysed\fP \fB-l\fP \fB"pattern"\fP \fBinput-file\fP
.PP
Same argument as the '--search' except that facing the file line by line and prints
the line found in pattern.

.SS -g, --highlight, highlight and print text
\fBpysed\fP \fB-g\fP \fB"pattern"\fP \fB"color"\fP \fBinput-file\fP 
.PP
Print a file with an highlight on the pattern.

.SS -s, --stat, print text statistics
\fBpysed\fP \fB-s\fP \fBinput-file\fP
.PP
Print text statistics split in lines, words, chars, blanks.

.SS --write, write changes to file
.PP
Add this argument last to write the changes to the file.

.SH HELP OPTION
Specifying the help option displays help for pysed itself, or a
command.
.br
For example:
  \fBpysed \-\-help\fP - display help for pysed

.SH COLORS
 black, red, green, yellow, blue, magenta, cyan
.PP
.SH REGEX FLAGS
 I or IGNORECASE
 M or MULTILINE
 S or DOTALL
 U or UNICODE
 L or LOCALE
 X or VERBOSE

.SH AUTHOR
Dimitris Zlatanidis <d.zlatanidis@gmail.com>
.SH HOMEPAGE
https://github.com/dslackw/pysed
.SH COPYRIGHT
Copyright \(co 2014-2015 Dimitris Zlatanidis

.SH SEE ALSO
sed(1)
