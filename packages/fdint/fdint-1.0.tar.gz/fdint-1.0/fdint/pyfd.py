#
#   Copyright (c) 2015, Scott J. Maddox
#
#   This file is part of Fermi-Dirac Integrals (FDINT).
#
#   FDINT is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published
#   by the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   FDINT is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with FDINT.  If not, see <http://www.gnu.org/licenses/>.
#
#############################################################################
'''
Fermi-Dirac integrals
    
[1] T. Fukushima, "Precise and fast computation of Fermi-Dirac integral
    of integer and half integer order by piecewise minimax rational
    approximation," Applied Mathematics and Computation, vol. 259,
    pp. 708-729, May 2015.
'''

import numpy
from numpy import exp, sqrt

def fdm9h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=-9/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = -2e0/7e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(0.270088205852269109e0 \
        -ex*(98457.373700674016e0 \
        +t*(7895.1716828987114e0 \
        +t*(1170.39154599810719e0 \
        +t*(84.347808600628057e0 \
        +t*(1.94779771326323869e0 \
        +t*0.00062804476066590963e0 \
        )))))/(32220.8981607867840e0 \
        +t*(20608.4545396913128e0 \
        +t*(5234.8569367171782e0 \
        +t*(658.75071261067250e0 \
        +t*(40.9380138615149699e0 \
        +t))))))
    elif(x < 0e0):
        s=-0.5e0*x
        fd=(-1.8432713155273516e0 \
        +s*(-7.2420131297087391e0 \
        +s*(-2.2155513134917048e0 \
        +s*(0.04304761419364448e0 \
        +s*(-0.16668060134499780e0 \
        +s*(0.10403025949642735e0 \
        +s*(0.016505424797869711e0 \
        +s*(-0.0063406328104926592e0 \
        +s*(-0.0009078668865214013e0 \
        +s*0.00024692958093140298e0 \
        )))))))))/(129.8291336259148e0 \
        +s*(-1.9134679779378e0 \
        +s*(249.6123960853833e0 \
        +s*(-3.3454980273582e0 \
        +s*(190.7566926415911e0 \
        +s*(-2.2190711173347e0 \
        +s*(72.29929273955658e0 \
        +s*(-0.66382343556531e0 \
        +s*(13.551723146833901e0 \
        +s*(-0.0757657170023758e0 \
        +s))))))))))*(x+1.82715356570827096e0)	# care for zero point
    elif(x < 2e0):
        t=0.5e0*x
        fd=(27.9376225634323064e0 \
        +t*(17.6954702922794847e0 \
        +t*(-18.2160790482833106e0 \
        +t*(-2.57045608672749918e0 \
        +t*(2.20866272949862340e0 \
        +t*(-0.104202929779896185e0 \
        +t*(-0.177712759450918142e0 \
        +t*(0.055743070525419128e0 \
        -t*0.0059642251814009821e0 \
        ))))))))/(599.97601432112870e0 \
        +t*(-64.538219224509587e0 \
        +t*(1048.07497435809354e0 \
        +t*(-104.535376308139931e0 \
        +t*(694.31701140352634e0 \
        +t*(-61.402988847817226e0 \
        +t*(207.271703307329581e0 \
        +t*(-14.7241003912299059e0 \
        +t*(23.5639226214135345e0 \
        -t)))))))))*(x-0.557104412737456300e0)	# care for zero point
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=-(0.105736863491337914e0 \
        +t*(0.182686468618144972e0 \
        +t*(-0.0830333880807117100e0 \
        +t*(0.0123471104343183151e0 \
        +t*(0.0213438566082710205e0 \
        +t*(-0.0431206240183745280e0 \
        +t*(0.0311190249582737067e0 \
        +t*(-0.0115670162945002128e0 \
        +t*(0.00222720333535487902e0 \
        -t*0.000179769912955733772e0 \
        )))))))))/(11.4369029896970731e0 \
        +t*(29.5790675947434036e0 \
        +t*(55.2958932613908644e0 \
        +t*(59.7192644653455683e0 \
        +t*(51.8646589384828875e0 \
        +t*(26.5061101661226671e0 \
        +t*(11.1515306816966566e0 \
        +t*(-0.140562900980389991e0 \
        +t*(-0.566848363630388431e0 \
        -t)))))))))*(x-3.79898975457237574e0)	# care for zero point
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=-(0.0131615741211877996e0 \
        +t*(0.0630819955070757629e0 \
        +t*(0.0347025335431948214e0 \
        +t*(0.00659613983600166143e0 \
        +t*(0.0239129779624141424e0 \
        +t*(0.000528952248906432005e0 \
        +t*(0.00411353218448862483e0 \
        +t*(-0.00119448333536781374e0 \
        +t*(0.000497581590580634773e0 \
        +t*(-0.0000934288845342437109e0 \
        +t*7.29489294899966855e-6 \
        ))))))))))/(12.2828253912160684e0 \
        +t*(63.2143680817101004e0 \
        +t*(155.880993448869246e0 \
        +t*(239.067686638304706e0 \
        +t*(254.656949674257383e0 \
        +t*(200.134181826630681e0 \
        +t*(120.784221710133443e0 \
        +t*(56.5037249583191013e0 \
        +t*(20.2196452284175417e0 \
        +t*(5.22412387722958575e0 \
        +t))))))))))
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=-(0.000243271785585373458e0 \
        +t*(0.000534699823019827761e0 \
        +t*(0.000824373965146324914e0 \
        +t*(0.00106321349769688454e0 \
        +t*(0.000488890808530810197e0 \
        +t*(0.000510404811590977338e0 \
        +t*(0.0000543711407291589868e0 \
        +t*(0.0000597066095966549458e0 \
        +t*(-9.52409541937957252e-6 \
        +t*(1.26499979908255436e-6 \
        -t*8.23879904655758674e-8 \
        ))))))))))/(1.89001039755418574e0 \
        +t*(12.0291520111708943e0 \
        +t*(36.3016148236874403e0 \
        +t*(69.0194326307265861e0 \
        +t*(92.5327210822279397e0 \
        +t*(92.3443444983825834e0 \
        +t*(70.3437819943334403e0 \
        +t*(41.0546070181362401e0 \
        +t*(17.9813587502434782e0 \
        +t*(5.52467389311001165e0 \
        +t))))))))))
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=-(5.76414987722574846e-6 \
        +t*(0.0000175838621123388022e0 \
        +t*(0.0000306497936833891724e0 \
        +t*(0.0000245465851262614617e0 \
        +t*(9.68986921084327441e-6 \
        +t*(-9.60429091051474115e-6 \
        +t*(-2.71258276002580026e-6 \
        +t*(2.14306002093744082e-7 \
        +t*(-2.02878733208210684e-8 \
        +t*1.11972866705178940e-9 \
        )))))))))/(0.672666709110930353e0 \
        +t*(4.51114986457223474e0 \
        +t*(14.2130577502093159e0 \
        +t*(27.0924755033205922e0 \
        +t*(33.3161322251216687e0 \
        +t*(25.3582658290231325e0 \
        +t*(8.61719049364763904e0 \
        +t*(-2.98613950390747585e0 \
        +t*(-3.72974082078125757e0 \
        -t)))))))))
    else:
        w=1e0/(x*x)
        s=1e0-1600e0*w
        fd=factor/(sqrt(x)*x*x*x)*(1e0 \
        +w*(20360.4093941608469e0 \
        +s*(48690.0157659639679e0 \
        +s*(56148.8553220593957e0 \
        +s*(16506.5714937251887e0 \
        +s*(1066.30280063583769e0 \
        +s*3.73715435019239458e0 \
        )))))/(765.319028032818290e0 \
        +s*(1851.12566867527470e0 \
        +s*(2160.21729234460541e0 \
        +s*(677.261952266814024e0 \
        +s*(56.0179124057448609e0 \
        +s))))))
    return fd
def fdm7h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=-7/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = -2e0/5e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(-0.945308720482941881e0 \
        +ex*(22521.6817696480830e0 \
        +t*(3006.50943115266211e0 \
        +t*(223.777970320362539e0 \
        +t*(7.1096231598119406e0 \
        -t*0.00186000064211079826e0 \
        ))))/(4211.64894546505314e0 \
        +t*(2132.92301652550982e0 \
        +t*(400.935813755588393e0 \
        +t*(33.0304914363496116e0 \
        +t)))))
    elif(x < 0e0):
        s=-0.5e0*x
        fd=(5.49736264373955718e0 \
        +s*(3.93868182790099018e0 \
        +s*(0.00680535603918657089e0 \
        +s*(-0.0610218211998865281e0 \
        +s*(-0.195616572333524455e0 \
        +s*(0.0172573301744899007e0 \
        +s*(0.0148839062617757320e0 \
        +s*(-0.00259857880173559174e0 \
        +s*0.0000170523346905109458e0 \
        ))))))))/(48.4238197836838959e0 \
        +s*(8.18206322265668686e0 \
        +s*(73.9370055146725832e0 \
        +s*(10.7170918787834126e0 \
        +s*(42.0907078084017798e0 \
        +s*(4.72976153773643018e0 \
        +s*(10.5965223842451046e0 \
        +s*(0.704336166377684061e0 \
        +s))))))))*(x+0.731435761340666539e0)	# care for zero point
    elif(x < 2e0):
        t=0.5e0*x
        fd=(143.837264704139569e0 \
        +t*(322.683997310438763e0 \
        +t*(-209.374575032955500e0 \
        +t*(-54.681932464048843e0 \
        +t*(-30.3617985514093593e0 \
        +t*(-5.7605448223972412e0 \
        +t*(3.65745825030136209e0 \
        +t*(0.145440718467921945e0 \
        +t*(-0.340001125998911237e0 \
        +t*0.0446577756904410773e0 \
        )))))))))/(1732.20737492411446e0 \
        +t*(97.952930820143076e0 \
        +t*(2660.50150777614871e0 \
        +t*(115.730278615026183e0 \
        +t*(1524.22026694958607e0 \
        +t*(40.4116469657132500e0 \
        +t*(385.907052068138736e0 \
        +t*(1.45068964456455148e0 \
        +t*(36.4544527882983039e0 \
        -t)))))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=-(66.1873851488861175e0 \
        +t*(57.9197865216898287e0 \
        +t*(-10.6658833177171402e0 \
        +t*(10.2066946495410176e0 \
        +t*(1.19595124198914370e0 \
        +t*(-1.81286879962085966e0 \
        +t*(1.52800227451442796e0 \
        +t*(-0.546498161708704000e0 \
        +t*(0.0988077919447287808e0 \
        -t*0.00745279173673929794e0 \
        )))))))))/(1525.13818882033488e0 \
        +t*(3966.07893650424194e0 \
        +t*(6837.27734004268945e0 \
        +t*(7086.45653543153192e0 \
        +t*(5612.71274301484627e0 \
        +t*(2928.56588821761611e0 \
        +t*(1256.17847516062581e0 \
        +t*(310.558929999645079e0 \
        +t*(89.3091775022809646e0 \
        -t)))))))))*(x-2.59355543171509487e0)	# care for zero point
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=-(0.184179377827614791e0 \
        +t*(0.516542442597467614e0 \
        +t*(0.292799259677321999e0 \
        +t*(0.166303092691678597e0 \
        +t*(0.258615034442190300e0 \
        +t*(-0.0303157249245734253e0 \
        +t*(0.0373447714795897992e0 \
        +t*(-0.00332926057033243781e0 \
        +t*(0.000563408857595472728e0 \
        -t*0.0000334037183021934960e0 \
        )))))))))/(18.2615126816087432e0 \
        +t*(85.1686926876657081e0 \
        +t*(181.378990080239764e0 \
        +t*(232.528454347497368e0 \
        +t*(200.564064511137621e0 \
        +t*(125.206874911765040e0 \
        +t*(58.6883968744415564e0 \
        +t*(20.6768210567814309e0 \
        +t*(5.02620698086580395e0 \
        +t)))))))))
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=-(0.00521027824483942692e0 \
        +t*(0.0159223834333424812e0 \
        +t*(0.0290786393625134859e0 \
        +t*(0.0350554456604475612e0 \
        +t*(0.0276022017688728517e0 \
        +t*(0.0190056432579866130e0 \
        +t*(0.00725681379911524042e0 \
        +t*(0.00278845414163336780e0 \
        +t*(0.000285395695659601419e0 \
        +t*(-9.95541819385254380e-6 \
        +t*2.96666654254966665e-7 \
        ))))))))))/(3.40047012308625195e0 \
        +t*(20.3896764592442369e0 \
        +t*(58.0983301256082527e0 \
        +t*(104.466101980605120e0 \
        +t*(132.574327309248600e0 \
        +t*(125.279491711147983e0 \
        +t*(90.3637198347191251e0 \
        +t*(49.8942487159252830e0 \
        +t*(20.6309250519127594e0 \
        +t*(5.96507377885482873e0 \
        +t))))))))))
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=-(0.000222755850099679261e0 \
        +t*(0.00115329637370955141e0 \
        +t*(0.00290802444182764526e0 \
        +t*(0.00445062601336644735e0 \
        +t*(0.00436605816073874863e0 \
        +t*(0.00260703930450196953e0 \
        +t*(0.000708204675930321953e0 \
        +t*(0.0000387281377930932522e0 \
        +t*(-1.07635110532534644e-6 \
        +t*3.45876932703497152e-8 \
        )))))))))/(0.958823449511661332e0 \
        +t*(7.43981964725756497e0 \
        +t*(27.2010614567095770e0 \
        +t*(61.4593095996041459e0 \
        +t*(94.2239246717949674e0 \
        +t*(100.959076669111257e0 \
        +t*(74.4305466149867624e0 \
        +t*(35.3635458846636560e0 \
        +t*(9.43423871492993288e0 \
        +t)))))))))
    else:
        w=1e0/(x*x)
        s=1e0-1600e0*w
        fd=factor/(sqrt(x)*x*x)*(1e0 \
        +w*(114389.966467649306e0 \
        +s*(109888.157408212290e0 \
        +s*(21209.9082486576965e0 \
        +s*(896.625771647944984e0 \
        +s*2.27005555539139462e0 \
        ))))/(7803.86522209355981e0 \
        +s*(7642.62657004470466e0 \
        +s*(1584.72834559231955e0 \
        +s*(86.0988387732258338e0 \
        +s)))))
    return fd
def fdm5h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=-5/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = -2e0/3e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(2.36327180120735470e0 \
        -ex*(55891.891151428516e0 \
        +t*(10900.4507673238614e0 \
        +t*(731.61871282829311e0 \
        +t*(17.3576202287841595e0 \
        +t*0.00111269690244199535e0 \
        ))))/(8361.6144419623308e0 \
        +t*(3709.66537451151168e0 \
        +t*(598.60597628606205e0 \
        +t*(41.1772384480908825e0 \
        +t)))))
    elif(x < 0e0):
        s=-0.5e0*x
        fd=(46.7273884990861909e0 \
        +s*(65.1460094720913271e0 \
        +s*(-23.3560330148569366e0 \
        +s*(16.3832748811699383e0 \
        +s*(-6.19159773777140396e0 \
        +s*(0.799041627235852088e0 \
        +s*(-0.136702158227027886e0 \
        +s*(0.0592594484852497570e0 \
        -s*0.00813537888028213710e0 \
        ))))))))/(166.600811683081505e0 \
        +s*(-14.3475443594245037e0 \
        +s*(207.623210767457661e0 \
        +s*(-16.0651771000195284e0 \
        +s*(91.9265825199149767e0 \
        +s*(-5.91543082309762067e0 \
        +s*(16.6946542439476255e0 \
        +s*(-0.714551880206870314e0 \
        +s))))))))
    elif(x < 2e0):
        t=0.5e0*x
        fd=-(55.096201117757232e0 \
        +t*(14.3294333176185961e0 \
        +t*(8.7057675255700556e0 \
        +t*(2.85717540287481278e0 \
        +t*(0.153440611811510950e0 \
        +t*(0.111339313377987928e0 \
        +t*(0.052394928476702755e0 \
        -t*0.00308189450941126788e0 \
        )))))))/(217.840649625384406e0 \
        +t*(-13.7539547994891024e0 \
        +t*(264.475360271691825e0 \
        +t*(-16.3936568402444332e0 \
        +t*(112.575929318729487e0 \
        +t*(-6.5735021347402422e0 \
        +t*(19.1324946771515682e0 \
        +t*(-0.89572129073702419e0 \
        +t))))))))*(x-1.10894923342229868e0)	# care for zero point
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=-(4.91753613607304828e0 \
        +t*(20.4599278677959969e0 \
        +t*(14.7299603843029675e0 \
        +t*(6.07034924563989291e0 \
        +t*(2.84749597355562421e0 \
        +t*(1.42067667370006629e0 \
        +t*(0.194025010869198784e0 \
        +t*(0.0296942990922311325e0 \
        +t*0.0000687311336894144097e0 \
        ))))))))/(39.1942895728295075e0 \
        +t*(102.720679402185990e0 \
        +t*(163.814228574815100e0 \
        +t*(160.042363559709804e0 \
        +t*(112.736106158227044e0 \
        +t*(53.5881251269350506e0 \
        +t*(19.3013585080264391e0 \
        +t*(4.60099930165203599e0 \
        +t))))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=-(2.27928384600199307e0 \
        +t*(4.20924981693908136e0 \
        +t*(3.71772880855517432e0 \
        +t*(3.45602273475008183e0 \
        +t*(1.35886950179549082e0 \
        +t*(0.536408369715153184e0 \
        +t*(0.133773439887674841e0 \
        +t*(0.0125358162552656152e0 \
        -t*0.000258659892241001720e0 \
        ))))))))/(29.5538409791709387e0 \
        +t*(102.889070328418668e0 \
        +t*(171.483234327128671e0 \
        +t*(174.069526985568413e0 \
        +t*(121.638517061339171e0 \
        +t*(61.2471517251153565e0 \
        +t*(22.6513730231817499e0 \
        +t*(5.63585485331701445e0 \
        +t))))))))
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=-(0.138865047109769882e0 \
        +t*(0.495879942014454703e0 \
        +t*(0.975841030964797014e0 \
        +t*(1.19756546203286062e0 \
        +t*(1.04262591465861665e0 \
        +t*(0.636815947333856586e0 \
        +t*(0.267431185397286764e0 \
        +t*(0.0680541575349993884e0 \
        +t*(0.00339987875007404643e0 \
        -t*0.0000596473600392971721e0 \
        )))))))))/(6.10307238045677639e0 \
        +t*(32.0683844393622288e0 \
        +t*(81.7709446404731603e0 \
        +t*(131.907213444156949e0 \
        +t*(148.807381678792024e0 \
        +t*(122.126271732385001e0 \
        +t*(73.4713378422568434e0 \
        +t*(31.3211204388750577e0 \
        +t*(8.63324324695581677e0 \
        +t)))))))))
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=-(0.294313222065093082e0 \
        +t*(1.31885924825320721e0 \
        +t*(2.84488318326892294e0 \
        +t*(3.47529649317584998e0 \
        +t*(2.44599317338319296e0 \
        +t*(0.711594188260176831e0 \
        +t*(0.0568475228400688404e0 \
        +t*(0.000310240841471278615e0 \
        +t*7.25941094961112814e-6 \
        ))))))))/(38.8567648628867585e0 \
        +t*(233.714122704911173e0 \
        +t*(657.094399788013655e0 \
        +t*(1097.58958431940912e0 \
        +t*(1157.52830939122072e0 \
        +t*(742.054932624983009e0 \
        +t*(251.716945386093114e0 \
        +t*(34.4183681886106367e0 \
        +t))))))))
    else:
        w=1e0/(x*x)
        s=1e0-1600e0*w
        fd=factor/(sqrt(x)*x)*(1e0 \
        +w*(563249.531577994933e0 \
        +s*(348717.634501234702e0 \
        +s*(40765.2886083808789e0 \
        +s*865.059113888543852e0 \
        )))/(90262.6676538587293e0 \
        +s*(56944.6907876652433e0 \
        +s*(7175.67113380361324e0 \
        +s*(207.376531486457753e0 \
        +s)))))
    return fd
def fdm3h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=-3/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = -2e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(-3.54490770181103205e0 \
        +ex*(82737.595643818605e0 \
        +t*(18481.5553495836940e0 \
        +t*(1272.73919064487495e0 \
        +t*(26.3420403338352574e0 \
        -t*0.00110648970639283347e0 \
        ))))/(16503.7625405383183e0 \
        +t*(6422.0552658801394e0 \
        +t*(890.85389683932154e0 \
        +t*(51.251447078851450e0 \
        +t)))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=-(946.638483706348559e0 \
        +t*(76.3328330396778450e0 \
        +t*(62.7809183134124193e0 \
        +t*(83.8442376534073219e0 \
        +t*(23.2285755924515097e0 \
        +t*(3.21516808559640925e0 \
        +t*(1.58754232369392539e0 \
        +t*(0.687397326417193593e0 \
        +t*0.111510355441975495e0 \
        ))))))))/(889.4123665319664e0 \
        +s*(126.7054690302768e0 \
        +s*(881.4713137175090e0 \
        +s*(108.2557767973694e0 \
        +s*(289.38131234794585e0 \
        +s*(27.75902071820822e0 \
        +s*(34.252606975067480e0 \
        +s*(1.9592981990370705e0 \
        +s))))))))
    elif(x < 2e0):
        t=0.5e0*x
        fd=-(754.61690882095729e0 \
        +t*(565.56180911009650e0 \
        +t*(494.901267018948095e0 \
        +t*(267.922900418996927e0 \
        +t*(110.418683240337860e0 \
        +t*(39.4050164908951420e0 \
        +t*(10.8654460206463482e0 \
        +t*(2.11194887477009033e0 \
        +t*0.246843599687496060e0 \
        ))))))))/(560.03894899770103e0 \
        +t*(70.007586553114572e0 \
        +t*(582.42052644718871e0 \
        +t*(56.181678606544951e0 \
        +t*(205.248662395572799e0 \
        +t*(12.5169006932790528e0 \
        +t*(27.2916998671096202e0 \
        +t*(0.53299717876883183e0 \
        +t))))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=-(526.022770226139287e0 \
        +t*(631.116211478274904e0 \
        +t*(516.367876532501329e0 \
        +t*(267.894697896892166e0 \
        +t*(91.3331816844847913e0 \
        +t*(17.5723541971644845e0 \
        +t*(1.46434478819185576e0 \
        +t*(1.29615441010250662e0 \
        +t*0.223495452221465265e0 \
        ))))))))/(354.867400305615304e0 \
        +t*(560.931137013002977e0 \
        +t*(666.070260050472570e0 \
        +t*(363.745894096653220e0 \
        +t*(172.272943258816724e0 \
        +t*(23.7751062504377332e0 \
        +t*(12.5916012142616255e0 \
        +t*(-0.888604976123420661e0 \
        +t))))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=-(18.0110784494455205e0 \
        +t*(36.1225408181257913e0 \
        +t*(38.4464752521373310e0 \
        +t*(24.1477896166966673e0 \
        +t*(9.27772356782901602e0 \
        +t*(2.49074754470533706e0 \
        +t*(0.163824586249464178e0 \
        -t*0.00329391807590771789e0 \
        )))))))/(18.8976860386360201e0 \
        +t*(49.3696375710309920e0 \
        +t*(60.9273314194720251e0 \
        +t*(43.6334649971575003e0 \
        +t*(20.6568810936423065e0 \
        +t*(6.11094689399482273e0 \
        +t))))))
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=-(4.10698092142661427e0 \
        +t*(17.1412152818912658e0 \
        +t*(32.6347877674122945e0 \
        +t*(36.6653101837618939e0 \
        +t*(25.9424894559624544e0 \
        +t*(11.2179995003884922e0 \
        +t*(2.30099511642112478e0 \
        +t*(0.0928307248942099967e0 \
        -t*0.00146397877054988411e0 \
        ))))))))/(6.40341731836622598e0 \
        +t*(30.1333068545276116e0 \
        +t*(64.0494725642004179e0 \
        +t*(80.5635003792282196e0 \
        +t*(64.9297873014508805e0 \
        +t*(33.3013900893183129e0 \
        +t*(9.61549304470339929e0 \
        +t)))))))
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=-(95.2141371910496454e0 \
        +t*(420.050572604265456e0 \
        +t*(797.778374374075796e0 \
        +t*(750.378359146985564e0 \
        +t*(324.818150247463736e0 \
        +t*(50.3115388695905757e0 \
        +t*(0.372431961605507103e0 \
        +t*(-0.103162211894757911e0 \
        +t*0.00191752611445211151e0 \
        ))))))))/(212.232981736099697e0 \
        +t*(1043.79079070035083e0 \
        +t*(2224.50099218470684e0 \
        +t*(2464.84669868672670e0 \
        +t*(1392.55318009810070e0 \
        +t*(346.597189642259199e0 \
        +t*(22.7314613168652593e0 \
        -t)))))))
    else:
        w=1e0/(x*x)
        s=1e0-1600e0*w
        fd=factor/sqrt(x)*(1e0 \
        +w*(12264.3569103180524e0 \
        +s*(3204.34872454052352e0 \
        +s*(140.119604748253961e0 \
        +s*0.523918919699235590e0 \
        )))/(9877.87829948067200e0 \
        +s*(2644.71979353906092e0 \
        +s*(128.863768007644572e0 \
        +s))))
    return fd
def fdm1h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=-1/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(1.77245385090551603e0 \
        -ex*(40641.4537510284430e0 \
        +t*(9395.7080940846442e0 \
        +t*(649.96168315267301e0 \
        +t*(12.7972295804758967e0 \
        +t*0.00153864350767585460e0 \
        ))))/(32427.1884765292940e0 \
        +t*(11079.9205661274782e0 \
        +t*(1322.96627001478859e0 \
        +t*(63.738361029333467e0 \
        +t)))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(272.770092131932696e0 \
        +t*(30.8845653844682850e0 \
        +t*(-6.43537632380366113e0 \
        +t*(14.8747473098217879e0 \
        +t*(4.86928862842142635e0 \
        +t*(-1.53265834550673654e0 \
        +t*(-1.02698898315597491e0 \
        +t*(-0.177686820928605932e0 \
        -t*0.00377141325509246441e0 \
        ))))))))/(293.075378187667857e0 \
        +s*(305.818162686270816e0 \
        +s*(299.962395449297620e0 \
        +s*(207.640834087494249e0 \
        +s*(92.0384803181851755e0 \
        +s*(37.0164914112791209e0 \
        +s*(7.88500950271420583e0 \
        +s)))))))
    elif(x < 2e0):
        t=0.5e0*x
        fd=(3531.50360568243046e0 \
        +t*(6077.5339658420037e0 \
        +t*(6199.7700433981326e0 \
        +t*(4412.78701919567594e0 \
        +t*(2252.27343092810898e0 \
        +t*(811.84098649224085e0 \
        +t*(191.836401053637121e0 \
        +t*23.2881838959183802e0 \
        )))))))/(3293.83702584796268e0 \
        +t*(1528.97474029789098e0 \
        +t*(2568.48562814986046e0 \
        +t*(925.64264653555825e0 \
        +t*(574.23248354035988e0 \
        +t*(132.803859320667262e0 \
        +t*(29.8447166552102115e0 \
        +t)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=(4060.70753404118265e0 \
        +t*(10812.7291333052766e0 \
        +t*(13897.5649482242583e0 \
        +t*(10628.4749852740029e0 \
        +t*(5107.70670190679021e0 \
        +t*(1540.84330126003381e0 \
        +t*(284.452720112970331e0 \
        +t*29.5214417358484151e0 \
        )))))))/(1564.58195612633534e0 \
        +t*(2825.75172277850406e0 \
        +t*(3189.16066169981562e0 \
        +t*(1955.03979069032571e0 \
        +t*(828.000333691814748e0 \
        +t*(181.498111089518376e0 \
        +t*(32.0352857794803750e0 \
        +t)))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=(1198.41719029557508e0 \
        +t*(3263.51454554908654e0 \
        +t*(3874.97588471376487e0 \
        +t*(2623.13060317199813e0 \
        +t*(1100.41355637121217e0 \
        +t*(267.469532490503605e0 \
        +t*(25.4207671812718340e0 \
        +t*0.389887754234555773e0 \
        )))))))/(273.407957792556998e0 \
        +t*(595.918318952058643e0 \
        +t*(605.202452261660849e0 \
        +t*(343.183302735619981e0 \
        +t*(122.187622015695729e0 \
        +t*(20.9016359079855933e0 \
        +t))))))
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=(9446.00169435237637e0 \
        +t*(36843.4448474028632e0 \
        +t*(63710.1115419926191e0 \
        +t*(62985.2197361074768e0 \
        +t*(37634.5231395700921e0 \
        +t*(12810.9898627807754e0 \
        +t*(1981.56896138920963e0 \
        +t*81.4930171897667580e0 \
        )))))))/(1500.04697810133666e0 \
        +t*(5086.91381052794059e0 \
        +t*(7730.01593747621895e0 \
        +t*(6640.83376239360596e0 \
        +t*(3338.99590300826393e0 \
        +t*(860.499043886802984e0 \
        +t*(78.8565824186926692e0 \
        +t)))))))
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=(22977.9657855367223e0 \
        +t*(123416.616813887781e0 \
        +t*(261153.765172355107e0 \
        +t*(274618.894514095795e0 \
        +t*(149710.718389924860e0 \
        +t*(40129.3371700184546e0 \
        +t*(4470.46495881415076e0 \
        +t*132.684346831002976e0 \
        )))))))/(2571.68842525335676e0 \
        +t*(12521.4982290775358e0 \
        +t*(23268.1574325055341e0 \
        +t*(20477.2320119758141e0 \
        +t*(8726.52577962268114e0 \
        +t*(1647.42896896769909e0 \
        +t*(106.475275142076623e0 \
        +t)))))))
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=sqrt(x)*factor*(1e0 \
        -w*(0.411233516712009968e0 \
        +t*(0.00110980410034088951e0 \
        +t*(0.0000113689298990173683e0 \
        +t*(2.56931790679436797e-7 \
        +t*(9.97897786755446178e-9 \
        +t*8.67667698791108582e-10))))))
    return fd
def fd0h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=0
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(1e0 \
        -ex*(22696.2126132366633e0 \
        +t*(5222.0667923565138e0 \
        +t*(357.623326425354522e0 \
        +t*(6.9167792879948140e0 \
        +t*0.00200096064827815813e0 \
        ))))/(45392.4252264733267e0 \
        +t*(14539.5980679273792e0 \
        +t*(1611.36476693109675e0 \
        +t*(71.072178562726798e0 \
        +t)))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(159.601717762460980e0 \
        +t*(23.7193942338278703e0 \
        +t*(0.377783268730614356e0 \
        +t*(10.5181677709577503e0 \
        +t*(3.78181326142271599e0 \
        +t*(-0.441998676614933572e0 \
        +t*(-0.450072959113928254e0 \
        +t*(-0.0734798777056723512e0 \
        +t*0.000915454570009894267e0 \
        ))))))))/(284.26032127745967e0 \
        +s*(315.2592651624449e0 \
        +s*(310.2713981221035e0 \
        +s*(206.21640678892182e0 \
        +s*(96.77898293084927e0 \
        +s*(35.456591489081173e0 \
        +s*(8.1762315442738975e0 \
        +s)))))))
    if(y > 0e0):
        fd=fd+y
    return fd
def fd1h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=1/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/3e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(0.886226925452758014e0 \
        -ex*(19894.4553386951666e0 \
        +t*(4509.64329955948557e0 \
        +t*(303.461789035142376e0 \
        +t*(5.7574879114754736e0 \
        +t*0.00275088986849762610e0 \
        ))))/(63493.915041308052e0 \
        +t*(19070.1178243603945e0 \
        +t*(1962.19362141235102e0 \
        +t*(79.250704958640158e0 \
        +t)))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(149.462587768865243e0 \
        +t*(22.8125889885050154e0 \
        +t*(-0.629256395534285422e0 \
        +t*(9.08120441515995244e0 \
        +t*(3.35357478401835299e0 \
        +t*(-0.473677696915555805e0 \
        +t*(-0.467190913556185953e0 \
        +t*(-0.0880610317272330793e0 \
        -t*0.00262208080491572673e0 \
        ))))))))/(269.94660938022644e0 \
        +s*(343.6419926336247e0 \
        +s*(323.9049470901941e0 \
        +s*(218.89170769294024e0 \
        +s*(102.31331350098315e0 \
        +s*(36.319337289702664e0 \
        +s*(8.3317401231389461e0 \
        +s)))))))
    elif(x < 2e0):
        t=0.5e0*x
        fd=(71652.717119215557e0 \
        +t*(134954.734070223743e0 \
        +t*(153693.833350315645e0 \
        +t*(123247.280745703400e0 \
        +t*(72886.293647930726e0 \
        +t*(32081.2499422362952e0 \
        +t*(10210.9967337762918e0 \
        +t*(2152.71110381320778e0 \
        +t*232.906588165205042e0 \
        ))))))))/(105667.839854298798e0 \
        +t*(31946.0752989314444e0 \
        +t*(71158.788776422211e0 \
        +t*(15650.8990138187414e0 \
        +t*(13521.8033657783433e0 \
        +t*(1646.98258283527892e0 \
        +t*(618.90691969249409e0 \
        +t*(-3.36319591755394735e0 \
        +t))))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=(23744.8706993314289e0 \
        +t*(68257.8589855623002e0 \
        +t*(89327.4467683334597e0 \
        +t*(62766.3415600442563e0 \
        +t*(20093.6622609901994e0 \
        +t*(-2213.89084119777949e0 \
        +t*(-3901.66057267577389e0 \
        -t*948.642895944858861e0 \
        )))))))/(9488.61972919565851e0 \
        +t*(12514.8125526953073e0 \
        +t*(9903.44088207450946e0 \
        +t*(2138.15420910334305e0 \
        +t*(-528.394863730838233e0 \
        +t*(-661.033633995449691e0 \
        +t*(-51.4481470250962337e0 \
        +t)))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=(311337.452661582536e0 \
        +t*(1.11267074416648198e6 \
        +t*(1.75638628895671735e6 \
        +t*(1.59630855803772449e6 \
        +t*(910818.935456183774e0 \
        +t*(326492.733550701245e0 \
        +t*(65507.2624972852908e0 \
        +t*4809.45649527286889e0 \
        )))))))/(39721.6641625089685e0 \
        +t*(86424.7529107662431e0 \
        +t*(88163.7255252151780e0 \
        +t*(50615.7363511157353e0 \
        +t*(17334.9774805008209e0 \
        +t*(2712.13170809042550e0 \
        +t*(82.2205828354629102e0 \
        -t)))))))*0.999999999999999877e0
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=(7.26870063003059784e6 \
        +t*(2.79049734854776025e7 \
        +t*(4.42791767759742390e7 \
        +t*(3.63735017512363365e7 \
        +t*(1.55766342463679795e7 \
        +t*(2.97469357085299505e6 \
        +t*154516.447031598403e0 \
        ))))))/(340542.544360209743e0 \
        +t*(805021.468647620047e0 \
        +t*(759088.235455002605e0 \
        +t*(304686.671371640343e0 \
        +t*(39289.4061400542309e0 \
        +t*(582.426138126398363e0 \
        +t*(11.2728194581586028e0 \
        -t)))))))
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=(4.81449797541963104e6 \
        +t*(1.85162850713127602e7 \
        +t*(2.77630967522574435e7 \
        +t*(2.03275937688070624e7 \
        +t*(7.41578871589369361e6 \
        +t*(1.21193113596189034e6 \
        +t*63211.9545144644852e0 \
        ))))))/(80492.7765975237449e0 \
        +t*(189328.678152654840e0 \
        +t*(151155.890651482570e0 \
        +t*(48146.3242253837259e0 \
        +t*(5407.08878394180588e0 \
        +t*(112.195044410775577e0 \
        -t))))))
    else:
        w=1e0/(x*x)
        s=1e0-1600e0*w
        fd=x*sqrt(x)*factor*(1e0+w \
        *(8109.79390744477921e0 \
        +s*(342.069867454704106e0 \
        +s*1.07141702293504595e0)) \
        /(6569.98472532829094e0 \
        +s*(280.706465851683809e0 \
        +s)))
    return fd
def fd2h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=1
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(1e0 \
        -ex*(22189.1070807945062e0 \
        +t*(4915.92700908746777e0 \
        +t*(322.901386168881348e0 \
        +t*(5.9897442965804548e0 \
        +t*0.00397641173774375092e0 \
        ))))/(88756.428323178025e0 \
        +t*(25002.3197546553836e0 \
        +t*(2389.06277237306633e0 \
        +t*(88.376214553692756e0 \
        +t)))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(145.488167182330098e0 \
        +t*(251.392824471576922e0 \
        +t*(56.6537141912783024e0 \
        +t*(17.9918985363509694e0 \
        +t*(20.1369115558099802e0 \
        +t*(7.09659390228556164e0 \
        +t*(0.199701180197912643e0 \
        +t*(-0.403173132925886253e0 \
        -t*0.0792966701498222697e0 \
        ))))))))/(606.0757707716040e0 \
        +s*(374.1806357435014e0 \
        +s*(252.1367051536344e0 \
        +s*(27.2746245830016e0 \
        +s*(-61.57766112137513e0 \
        +s*(-53.72117554363975e0 \
        +s*(-25.678454878692950e0 \
        +s*(-7.1995819520154718e0 \
        -s))))))))
    if(y > 0e0):
        fd=-fd+1.64493406684822644e0 \
        +0.5e0*y*y
    return fd
def fd3h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=3/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/5e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(1.32934038817913702e0 \
        -ex*(1346.14119046566636e0 \
        +t*(199.946876779712712e0 \
        +t*(6.5210149677288048e0 \
        +t*0.0108588591982722183e0 \
        )))/(5728.3481201778541e0 \
        +t*(1132.17837281710987e0 \
        +t*(64.805243148002602e0 \
        +t))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(631.667081787115831e0 \
        +t*(504.131655805666135e0 \
        +t*(113.449065431934917e0 \
        +t*(56.0939647772947784e0 \
        +t*(43.3374223200846752e0 \
        +t*(12.8047010597109577e0 \
        +t*(0.219164386586949410e0 \
        +t*(-0.678659552658390139e0 \
        -t*0.126533769309899232e0 \
        ))))))))/(1180.5112183558028e0 \
        +s*(1101.0159189871135e0 \
        +s*(864.4448234404281e0 \
        +s*(392.2018227840790e0 \
        +s*(89.58093202779063e0 \
        +s*(-9.95066218572899e0 \
        +s*(-17.312068771997626e0 \
        +s*(-6.4116162917822773e0 \
        -s))))))))
    elif(x < 2e0):
        t=0.5e0*x
        fd=(90122.488639370400e0 \
        +t*(157095.208147064037e0 \
        +t*(166879.962599668589e0 \
        +t*(125708.597728045460e0 \
        +t*(69968.278213181390e0 \
        +t*(29035.3292989055404e0 \
        +t*(8736.4439472398517e0 \
        +t*(1747.16784760309227e0 \
        +t*180.132410666734053e0 \
        ))))))))/(78176.777123671727e0 \
        +t*(-1681.44633240543085e0 \
        +t*(38665.7913035496031e0 \
        +t*(-2527.29685826087874e0 \
        +t*(5062.6683078100048e0 \
        +t*(-553.21165462054589e0 \
        +t*(165.395637981775430e0 \
        +t*(- 18.0295465153725544e0 \
        +t))))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=(912944.432058014054e0 \
        +t*(3.28217091334054338e6 \
        +t*(5.59250227196369585e6 \
        +t*(5.76136129685687470e6 \
        +t*(3.84331519034749983e6 \
        +t*(1.65284168824947710e6 \
        +t*(423452.676670436605e0 \
        +t*49835.4127241373113e0 \
        )))))))/(164873.145721762182e0 \
        +t*(257442.511191094986e0 \
        +t*(225604.160532840884e0 \
        +t*(99932.1955662320024e0 \
        +t*(24761.0878784286761e0 \
        +t*(1398.26392212830777e0 \
        +t*(-36.4450237523474167e0 \
        +t)))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=(1.88412548327216052e6 \
        +t*(8.08838896259910792e6 \
        +t*(1.56869793001790529e7 \
        +t*(1.79109792599373447e7 \
        +t*(1.31345142328147214e7 \
        +t*(6.29500412046744325e6 \
        +t*(1.89326213154091054e6 \
        +t*(312372.643127575407e0 \
        +t*18814.7420442630170e0 \
        ))))))))/(67768.3347951202583e0 \
        +t*(147635.914444221358e0 \
        +t*(151908.303165069423e0 \
        +t*(86671.1222110642970e0 \
        +t*(27855.9481608626219e0 \
        +t*(3833.22697473114940e0 \
        +t*(98.3384567064269554e0 \
        -t)))))))*0.999999999999999876e0	# correction to remove bias
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=(1.59656593348660977e9 \
        +t*(7.32769737561517060e9 \
        +t*(1.42662658588280191e10 \
        +t*(1.51238422045169918e10 \
        +t*(9.27233604548095476e9 \
        +t*(3.18834513406577423e9 \
        +t*(5.36061988605886123e8 \
        +t*3.03619219668246382e7 \
        )))))))/(1.18906980815759995e7 \
        +t*(2.62209219322122975e7 \
        +t*(2.28143701746618729e7 \
        +t*(8.57156701742181874e6 \
        +t*(1.13860063870524239e6 \
        +t*(27091.7884208687379e0 \
        +t*(-275.664733379090447e0 \
        +t)))))))*0.999999999999999829e0	# correction to remove bias
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=(2.60437581212904589e8 \
        +t*(1.08771546307370080e9 \
        +t*(1.81531350939088943e9 \
        +t*(1.52833764636304939e9 \
        +t*(6.70684451492750149e8 \
        +t*(1.40870639531414149e8 \
        +t*1.04957900377463854e7 \
        ))))))/(358448.871166784200e0 \
        +t*(611808.419702466190e0 \
        +t*(326307.561591723775e0 \
        +t*(58407.9904827573816e0 \
        +t*(2049.50040323021794e0 \
        +t*(-39.8767861209088081e0 \
        +t))))))*0.999999999999999828e0
    else:
        w=1e0/(x*x)
        s=1e0-1600e0*w
        fd=x*x*sqrt(x)*factor*(1e0 \
        +w*(6.16739021212286242e0 \
        +s*(0.00111530123694574981e0 \
        +s*(-2.79156524536560815e-6 \
        +s*(2.95571462110856359e-8 \
        -s*6.70917556862133933e-10)))))
    return fd
def fd4h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(2e0 \
        -ex*(1914.06748184935743e0 \
        +t*(273.085756700981399e0 \
        +t*(8.5861610217850095e0 \
        +t*0.0161890243763741414e0 \
        )))/(7656.2699273974454e0 \
        +t*(1399.35442210906621e0 \
        +t*(72.929152915475392e0 \
        +t))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(2711.49678259128843e0 \
        +t*(1299.85460914884154e0 \
        +t*(222.606134197895041e0 \
        +t*(172.881855215582924e0 \
        +t*(112.951038040682055e0 \
        +t*(24.0376482128898634e0 \
        +t*(-2.68393549333878715e0 \
        +t*(-2.14077421411719935e0 \
        -t*0.326188299771397236e0 \
        ))))))))/(2517.1726659917047e0 \
        +s*(3038.7689794575778e0 \
        +s*(2541.7823512372631e0 \
        +s*(1428.0589853413436e0 \
        +s*(531.62378035996132e0 \
        +s*(122.54595216479181e0 \
        +s*(8.395768655115050e0 \
        +s*(-3.9142702096919080e0 \
        -s))))))))
    if(y > 0e0):
        fd=fd+y*(3.28986813369645287e0 \
        +0.333333333333333333e0*y*y)
    return fd
def fd5h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=5/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/7e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(3.32335097044784255e0 \
        -ex*(3004.41138112148735e0 \
        +t*(409.582975848055860e0 \
        +t*(12.3422465543050559e0 \
        +t*0.0252600128832787650e0 \
        )))/(10227.9400759349389e0 \
        +t*(1729.21912667445507e0 \
        +t*(82.075224736463695e0 \
        +t))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(3273.17630052701392e0 \
        +t*(1698.67676090446982e0 \
        +t*(498.075924016264615e0 \
        +t*(286.399893838802205e0 \
        +t*(153.449411299292925e0 \
        +t*(46.3172989461474687e0 \
        +t*(7.47269262560340991e0 \
        +t*0.512665223813025153e0 \
        )))))))/(1934.7654167995427e0 \
        +s*(2174.8582387970533e0 \
        +s*(1803.7716559637348e0 \
        +s*(970.4325125469826e0 \
        +s*(368.29988963760778e0 \
        +s*(94.85059993048974e0 \
        +s*(14.845914179579222e0 \
        +s)))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(46746.0667679244140e0 \
        +t*(67556.152887188131e0 \
        +t*(58097.414724032516e0 \
        +t*(35613.1718933770642e0 \
        +t*(15859.9235610267359e0 \
        +t*(5040.9166211327297e0 \
        +t*(1064.44778209849372e0 \
        +t*117.741363279815688e0 \
        )))))))/(13126.266942469915e0 \
        +s*(-1313.6945396119670e0 \
        +s*(2636.3767383046264e0 \
        +s*(453.2433336267639e0 \
        +s*(201.68980019364685e0 \
        +s*(50.35944043583614e0 \
        +s*(9.319958361334161e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=(2.96446396463084245e6 \
        +t*(1.13985063437515144e7 \
        +t*(2.03551842990364919e7 \
        +t*(2.18469168036723457e7 \
        +t*(1.52194204967854489e7 \
        +t*(6.89564335059367232e6 \
        +t*(1.88985082880325956e6 \
        +t*243639.263893338434e0 \
        )))))))/(169113.644493386066e0 \
        +t*(249598.556346488591e0 \
        +t*(162470.264413303189e0 \
        +t*(48830.6689634566512e0 \
        +t*(4080.41491690869679e0 \
        +t*(-227.369223251313984e0 \
        +t*(19.1547319985914212e0 \
        -t)))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=(5.98759698946959779e7 \
        +t*(2.87159410448355925e8 \
        +t*(5.99247230055005978e8 \
        +t*(7.05261579500244084e8 \
        +t*(5.04521860843522470e8 \
        +t*(2.18416589668256432e8 \
        +t*(5.25509373690209805e7 \
        +t*5.33490422476777307e6 \
        )))))))/(469653.962099017877e0 \
        +t*(972160.483958338969e0 \
        +t*(696829.387839904810e0 \
        +t*(200021.997093042021e0 \
        +t*(12604.5784254924892e0 \
        +t*(-464.256227099766735e0 \
        +t*(26.4866799762414562e0 \
        -t)))))))*0.999999999999999786e0	# correction to remove bias
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=(1.11471644837527339e9 \
        +t*(5.74225610798369390e9 \
        +t*(1.26551657157853213e10 \
        +t*(1.53960861052359422e10 \
        +t*(1.10946777927365321e10 \
        +t*(4.68865671930554474e9 \
        +t*(1.05763202432846973e9 \
        +t*9.49124183370767767e7 \
        )))))))/(1.07734938834750844e6 \
        +t*(2.05459707311873616e6 \
        +t*(1.39824422108531691e6 \
        +t*(347716.997197363113e0 \
        +t*(17894.5194245484999e0 \
        +t*(-553.162195184268593e0 \
        +t*(28.1090136251865326e0 \
        -t)))))))*0.999999999999999759e0	# correction to remove bias
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=(8.02670881104191218e9 \
        +t*(3.67306963017003546e10 \
        +t*(6.83085243661572356e10 \
        +t*(6.55107149365528043e10 \
        +t*(3.37406319128317264e10 \
        +t*(8.67814222875818408e9 \
        +t*8.43844503352450216e8 \
        ))))))/(757905.984443885971e0 \
        +t*(868424.806294231233e0 \
        +t*(260670.917865642513e0 \
        +t*(14550.0472712579662e0 \
        +t*(-476.120164041067762e0 \
        +t*(25.8288614974100332e0 \
        -t))))))*0.999999999999999820e0	# correction to remove bias
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*sqrt(x)*factor*(1e0 \
        +w*(14.3931730849220041e0 \
        +t*(0.00776862867834285253e0 \
        +t*(3.78966458769690333e-6 \
        +t*(2.09248095155530095e-8 \
        +t*3.52097438532254351e-10)))))
    return fd
def fd6h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=3
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(6e0 \
        -ex*(5121.6401850302408e0 \
        +t*(664.28706260743472e0 \
        +t*(19.0856927562699544e0 \
        +t*0.0410982603688952131e0 \
        )))/(13657.7071600806539e0 \
        +t*(2136.54222460571183e0 \
        +t*(92.376788603062645e0 \
        +t))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(7881.24597452900838e0 \
        +t*(4323.07526636309661e0 \
        +t*(1260.13125873282465e0 \
        +t*(653.359212389160499e0 \
        +t*(354.630774329461644e0 \
        +t*(113.373708671587772e0 \
        +t*(19.9559488532742796e0 \
        +t*1.59407954898394322e0 \
        )))))))/(2570.7250703533430e0 \
        +s*(2972.7443644211129e0 \
        +s*(2393.9995533270879e0 \
        +s*(1259.0724833462608e0 \
        +s*(459.86413596901097e0 \
        +s*(112.60906419590854e0 \
        +s*(16.468882811659000e0 \
        +s)))))))
    if(y > 0e0):
        y2=y*y
        fd=-fd+11.3643939539669510e0 \
        +y2*(4.93480220054467931e0 \
        +y2*0.25e0)
    return fd
def fd7h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=7/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/9e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(11.6317283965674489e0 \
        -ex*(9371.8868848378853e0 \
        +t*(1152.33581795824468e0 \
        +t*(31.4225568934398918e0 \
        +t*0.069508514261022902e0 \
        )))/(18231.3053891121107e0 \
        +t*(2639.60073595942887e0 \
        +t*(103.985056337236794e0 \
        +t))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(12412.9547163940264e0 \
        +t*(6557.39898920194282e0 \
        +t*(1745.01251050433134e0 \
        +t*(883.903030170203178e0 \
        +t*(485.680209936338180e0 \
        +t*(150.395267497504100e0 \
        +t*(23.6841796284116177e0 \
        +t*(1.07158463967401877e0 \
        -t*0.157435982722068683e0 \
        ))))))))/(1990.3886647182248e0 \
        +s*(2450.5836860178091e0 \
        +s*(1959.3508463399357e0 \
        +s*(1039.6469110978007e0 \
        +s*(381.70374149314543e0 \
        +s*(94.69566180593596e0 \
        +s*(14.401931782580504e0 \
        +s)))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(138724.961458493789e0 \
        +t*(169546.564556791848e0 \
        +t*(125336.240767414531e0 \
        +t*(68469.193938175092e0 \
        +t*(27692.3811560029092e0 \
        +t*(8054.8076265209314e0 \
        +t*(1569.98144698357220e0 \
        +t*162.669853437143155e0 \
        )))))))/(7624.675802050973e0 \
        +s*(2096.5891309081106e0 \
        +s*(1735.7563869500611e0 \
        +s*(662.0787128606726e0 \
        +s*(218.91333929478294e0 \
        +s*(55.27329667089387e0 \
        +s*(9.904579892966869e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=(2.20638302461716245e7 \
        +t*(7.19733683266519997e7 \
        +t*(1.11705692645922359e8 \
        +t*(1.06328515554623708e8 \
        +t*(6.68969329369869135e7 \
        +t*(2.78374130823093789e7 \
        +t*(7.11915156250133512e6 \
        +t*870011.051674696596e0 \
        )))))))/(311792.108500755594e0 \
        +t*(206109.613235058227e0 \
        +t*(81814.2443130826819e0 \
        +t*(3513.24062956494342e0 \
        +t*(368.155702298381570e0 \
        +t*(-106.091905490453452e0 \
        +t*(15.0961925962965432e0 \
        -t)))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=(3.0709767203984838e9 \
        +t*(1.3145330402583295e10 \
        +t*(2.5004908399964440e10 \
        +t*(2.7299220224056906e10 \
        +t*(1.8396311263825673e10 \
        +t*(7.6098692716640943e9 \
        +t*(1.7746200575457532e9 \
        +t*1.7740961200347283e8 \
        )))))))/(4.46811391083410494e6 \
        +t*(4.62189039302323844e6 \
        +t*(1.60932873023944955e6 \
        +t*(113458.965071032695e0 \
        +t*(-4751.36769214919833e0 \
        +t*(351.424157693641750e0 \
        +t*(-24.0392624870048634e0 \
        +t)))))))*0.999999999999999779e0	# correction to remove bias
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=(4.91615192873221833e9 \
        +t*(2.30941143669878184e10 \
        +t*(4.52380364776557202e10 \
        +t*(4.68413409944225048e10 \
        +t*(2.65134543816397678e10 \
        +t*(7.35961621586797944e9 \
        +t*(5.52546586238663078e8 \
        -t*7.67154234216335832e7 \
        )))))))/(550749.688306094769e0 \
        +t*(352810.964448809157e0 \
        +t*(12162.0407442978353e0 \
        +t*(-4414.91208383702609e0 \
        +t*(288.821012224214490e0 \
        +t*(-21.7191096434783647e0 \
        +t))))))*0.999999999999999647e0	# correction to remove bias
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=(1.23356074447405045e12 \
        +t*(6.8241092859415704e12 \
        +t*(1.5939237639946117e13 \
        +t*(2.0277830436278028e13 \
        +t*(1.5074920317497838e13 \
        +t*(6.4878414656043323e12 \
        +t*(1.4761927839220043e12 \
        +t*1.3410778049868313e11 \
        )))))))/(7.2811112110966361e6 \
        +t*(8.4187326609915276e6 \
        +t*(2.59806064027658564e6 \
        +t*(153974.958146639672e0 \
        +t*(-5666.5977917092119e0 \
        +t*(387.205694265311079e0 \
        +t*(-25.1500172248070365e0 \
        +t)))))))*0.999999999999999750e0	# correction to remove bias
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*x*sqrt(x)*factor*(1e0 \
        +w*(25.9077115528595532e0 \
        +t*(0.0699176581158797143e0 \
        +t*(-0.0000113689722343055157e0 \
        +t*(-2.69205155161558844e-8 \
        -t*2.81838487282327867e-10)))))
    return fd
def fd8h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=4
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(24e0 \
        -ex*(18247.2542465629199e0 \
        +t*(2120.56302902849207e0 \
        +t*(54.659507299984584e0 \
        +t*0.121876197098273914e0 \
        )))/(24329.6723287505678e0 \
        +t*(3261.01909656925521e0 \
        +t*(117.071576489684022e0 \
        +t))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(33093.9102025608137e0 \
        +t*(19031.4783357798975e0 \
        +t*(5431.08357152245897e0 \
        +t*(2393.94262931609398e0 \
        +t*(1268.40017257978070e0 \
        +t*(418.662172475927160e0 \
        +t*(77.4108960876508190e0 \
        +t*6.67374311450268357e0 \
        )))))))/(2645.4885670047153e0 \
        +s*(3236.2237702166948e0 \
        +s*(2500.5977847175497e0 \
        +s*(1278.0109577275445e0 \
        +s*(448.99020896813485e0 \
        +s*(105.86020755838874e0 \
        +s*(15.216887271751039e0 \
        +s)))))))
    if(y > 0e0):
        y2=y*y
        fd=fd+y*(45.4575758158678040e0 \
        +y2*(6.57973626739290575e0 \
        +y2*0.2e0))
    return fd
def fd9h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=9/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/11e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(52.3427777845535202e0 \
        -ex*(37544.8291647986266e0 \
        +t*(4113.48125371067712e0 \
        +t*(99.866490020209337e0 \
        +t*0.221035794126711913e0 \
        )))/(32460.7344732907336e0 \
        +t*(4028.81223496037193e0 \
        +t*(131.831032502212893e0 \
        +t))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(69576.0137991453185e0 \
        +t*(40945.8214269928341e0 \
        +t*(11636.1644381151941e0 \
        +t*(4627.86250549447612e0 \
        +t*(2350.13392862571985e0 \
        +t*(772.917515779084181e0 \
        +t*(143.282768049011730e0 \
        +t*12.4161720203166775e0 \
        )))))))/(2535.8419026162019e0 \
        +s*(3176.5677917330904e0 \
        +s*(2403.1400307314004e0 \
        +s*(1205.9132705211921e0 \
        +s*(416.75320914741449e0 \
        +s*(97.44802030226960e0 \
        +s*(14.192502951043942e0 \
        +s)))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(514822.53904173208e0 \
        +t*(522785.81416122782e0 \
        +t*(325144.232801546845e0 \
        +t*(158667.557186950475e0 \
        +t*(59144.454873935605e0 \
        +t*(15870.4677825005999e0 \
        +t*(2843.37449801975925e0 \
        +t*272.600692278110437e0 \
        )))))))/(4614.934746888508e0 \
        +s*(2755.8568288489921e0 \
        +s*(1644.4943294235255e0 \
        +s*(712.2181577760027e0 \
        +s*(238.45583147179604e0 \
        +s*(59.96344339125020e0 \
        +s*(10.461476374827578e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=(3.42730803487596668e7 \
        +t*(9.75806658972896811e7 \
        +t*(1.34864192616165924e8 \
        +t*(1.16686466196565430e8 \
        +t*(6.80744250678140765e7 \
        +t*(2.67765233037235380e7 \
        +t*(6.59736845425507999e6 \
        +t*792820.676193592762e0 \
        )))))))/(98882.7648048876841e0 \
        +t*(8989.62788188007021e0 \
        +t*(9880.17356654342362e0 \
        +t*(-2706.34081341857522e0 \
        +t*(689.741654284866509e0 \
        +t*(-130.873077409052406e0 \
        +t*(16.2961910923971688e0 \
        -t)))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=(4.89775289337907328e9 \
        +t*(2.18308560190839931e10 \
        +t*(4.37929196886803725e10 \
        +t*(5.12376841913497741e10 \
        +t*(3.77548677711700977e10 \
        +t*(1.75249365659518690e10 \
        +t*(4.74974437725451705e9 \
        +t*5.81264585063986499e8 \
        )))))))/(1.16603582458148748e6 \
        +t*(904387.524377664561e0 \
        +t*(128592.404626994618e0 \
        +t*(-10482.2282242040897e0 \
        +t*(1464.66129358886087e0 \
        +t*(-193.730497094764856e0 \
        +t*(19.0689920747890676e0 \
        -t)))))))*0.999999999999999823e0	# correction to remove bias
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=(2.2676209606423816e13 \
        +t*(1.24113302112340516e14 \
        +t*(2.9428117821474437e14 \
        +t*(3.9045588584587502e14 \
        +t*(3.1161725148614816e14 \
        +t*(1.4855808500445768e14 \
        +t*(3.8726601091729722e13 \
        +t*4.1673615587969372e12 \
        )))))))/(2.72286381952640596e8 \
        +t*(1.76997321474048891e8 \
        +t*(1.58695998922133285e7 \
        +t*(-757839.84310180434e0 \
        +t*(61065.315196529561e0 \
        +t*(-4351.64276565798757e0 \
        +t*(174.373773100542411e0 \
        +t)))))))*0.999999999999999697e0	# correction to remove bias
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=(1.65627579413599954e13 \
        +t*(9.8868092265530109e13 \
        +t*(2.51632614382698224e14 \
        +t*(3.53003554017750602e14 \
        +t*(2.93707971643967604e14 \
        +t*(1.44188847117098389e14 \
        +t*(3.83794461491062424e13 \
        +t*4.22247796386900843e12 \
        )))))))/(5.7640009494074862e6 \
        +t*(3.82118971474499980e6 \
        +t*(375185.320814949919e0 \
        +t*(-21189.7277758964890e0 \
        +t*(2225.13154291024219e0 \
        +t*(-240.494104779578652e0 \
        +t*(20.7062411414387229e0 \
        -t)))))))*0.999999999999999697e0	# correction to remove bias
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*x*x*sqrt(x)*factor*(1e0 \
        +w*(40.7121181544936151e0 \
        +t*(0.256364746421960192e0 \
        +t*(0.000125058641885852090e0 \
        +t*(5.92447825215879480e-8 \
        +t*3.38237202703194112e-10)))))
    return fd
def fd10h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=5
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(120e0 \
        -ex*(81190.938912603315e0 \
        +t*(8368.4990332049831e0 \
        +t*(190.753830813273698e0 \
        +t*0.413800735538960261e0 \
        )))/(43301.8340867217726e0 \
        +t*(4977.68099709243407e0 \
        +t*(148.484432990224213e0 \
        +t))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(159651.547840031111e0 \
        +t*(96307.2005742063042e0 \
        +t*(26923.5693307648389e0 \
        +t*(9274.54751848368696e0 \
        +t*(4445.76333033698006e0 \
        +t*(1461.45267097859337e0 \
        +t*(272.164427980501432e0 \
        +t*23.6526046298891619e0 \
        )))))))/(2522.7839609396783e0 \
        +s*(3244.5527999477567e0 \
        +s*(2403.0532924519756e0 \
        +s*(1176.7202478443275e0 \
        +s*(397.7596246691212e0 \
        +s*(91.84661231161838e0 \
        +s*(13.491911254479298e0 \
        +s)))))))
    if(y > 0e0):
        y2=y*y
        fd=-fd+236.532261911384425e0 \
        +y2*(113.643939539669510e0 \
        +y2*(8.22467033424113218e0 \
        +y2*0.166666666666666667e0))
    return fd
def fd11h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=11/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/13e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(287.885277815044361e0 \
        -ex*(183706.438585548927e0 \
        +t*(17781.2198813711389e0 \
        +t*(379.468701417596835e0 \
        +t*0.79823396490661890e0 \
        )))/(57756.370490854840e0 \
        +t*(6150.6214356632731e0 \
        +t*(167.282750039076672e0 \
        +t))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(399729.728975269086e0 \
        +t*(245048.290430557943e0 \
        +t*(64937.4257386015642e0 \
        +t*(17956.2886271385592e0 \
        +t*(8102.86054746075370e0 \
        +t*(2739.56619011305740e0 \
        +t*(522.197272134368319e0 \
        +t*45.9656786040236010e0 \
        )))))))/(2594.1469579416305e0 \
        +s*(3458.1847294224010e0 \
        +s*(2522.2748339106920e0 \
        +s*(1201.9024264852580e0 \
        +s*(394.94834682669296e0 \
        +s*(89.38046041124415e0 \
        +s*(13.110503750759739e0 \
        +s)))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(2.40644550206125935e6 \
        +t*(2.04903536564989627e6 \
        +t*(1.06804765545666824e6 \
        +t*(478219.980682203232e0 \
        +t*(171969.059741023943e0 \
        +t*(43927.0876916260199e0 \
        +t*(7256.0914773211089e0 \
        +t*626.34457422853533e0 \
        )))))))/(3109.1225672233219e0 \
        +s*(2636.2757909353112e0 \
        +s*(1626.1798939585643e0 \
        +s*(743.1451899485297e0 \
        +s*(255.41213934754826e0 \
        +s*(64.38943570079975e0 \
        +s*(10.994511861529934e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        fd=(7.70852968624936390e8 \
        +t*(2.17991233625412353e9 \
        +t*(3.06662111607913460e9 \
        +t*(2.78373598102826860e9 \
        +t*(1.77557231061500545e9 \
        +t*(8.12988256861068453e8 \
        +t*(2.60886497846886753e8 \
        +t*(5.37757509332685362e7 \
        +t*5.49029147083874521e6 \
        ))))))))/(384975.653810726401e0 \
        +t*(-10859.8352547471390e0 \
        +t*(47234.6496298591730e0 \
        +t*(-15689.8880335197160e0 \
        +t*(4580.68161072037214e0 \
        +t*(-1041.20834072320464e0 \
        +t*(172.979919201040627e0 \
        +t*(-18.7593019718622089e0 \
        +t))))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=(1.71681959469725307e10 \
        +t*(7.11557910478070659e10 \
        +t*(1.35103963154256158e11 \
        +t*(1.52010553996923224e11 \
        +t*(1.09288906897533869e11 \
        +t*(5.01817283608162539e10 \
        +t*(1.36404590384355901e10 \
        +t*1.69961340800732270e9 \
        )))))))/(600169.964027912926e0 \
        +t*(63989.8050690151317e0 \
        +t*(3306.49827047230707e0 \
        +t*(-2248.31637427985521e0 \
        +t*(649.075943625483938e0 \
        +t*(-126.914632653258205e0 \
        +t*(16.0289311039308149e0 \
        -t)))))))*0.999999999999999735e0
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=(1.05700178515928121e12 \
        +t*(6.12117465680051512e12 \
        +t*(1.55582880442596747e13 \
        +t*(2.24736526624247277e13 \
        +t*(1.99069164118763497e13 \
        +t*(1.08056362404911750e13 \
        +t*(3.32622572257609455e12 \
        +t*4.47682895372084249e11 \
        )))))))/(1.27888301811042482e6 \
        +t*(318603.811469994946e0 \
        +t*(-33834.0645458632405e0 \
        +t*(6000.96391500182524e0 \
        +t*(-1070.68701259288375e0 \
        +t*(161.612080255393227e0 \
        +t*(-17.5331213409665917e0 \
        +t)))))))*0.999999999999999653e0
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=(1.06038260567473087e14 \
        +t*(6.8238792169646891e14 \
        +t*(1.88917697801412952e15 \
        +t*(2.91401892625408501e15 \
        +t*(2.70150682400302739e15 \
        +t*(1.50286942831009197e15 \
        +t*(4.63446459437813772e14 \
        +t*6.0885766731916815e13 \
        )))))))/(2.08723140369481691e6 \
        +t*(445823.690247689681e0 \
        +t*(-42239.1125174643989e0 \
        +t*(6891.8137509933955e0 \
        +t*(-1158.79785029794968e0 \
        +t*(168.017431473136672e0 \
        +t*(-17.7743748531881933e0 \
        +t)))))))*0.999999999999999637e0
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*x*x*x*sqrt(x)*factor*(1e0 \
        +w*(58.8063928898240827e0 \
        +t*(0.666548340699108862e0 \
        +t*(0.00162576228417182612e0 \
        +t*(-2.56764926438640722e-7 \
        -t*6.18964665583859548e-10)))))
    return fd
def fd12h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=6
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(720e0 \
        -ex*(433290.557356514403e0 \
        +t*(39323.1678283287030e0 \
        +t*(783.71684376947655e0 \
        +t*1.58412947146158337e0 \
        )))/(77029.432418935897e0 \
        +t*(7600.9245809611507e0 \
        +t*(188.511069473956679e0 \
        +t))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(1.06809887479312876e6 \
        +t*(651074.246191348755e0 \
        +t*(152197.899924352192e0 \
        +t*(27269.0203707062592e0 \
        +t*(11937.9088600476726e0 \
        +t*(4659.76125900467198e0 \
        +t*(964.100791156809939e0 \
        +t*88.5841245838029230e0 \
        )))))))/(2681.3731718905701e0 \
        +s*(3764.9048490469408e0 \
        +s*(2739.9504946219358e0 \
        +s*(1276.0933863294022e0 \
        +s*(406.93880737411049e0 \
        +s*(89.70143752313466e0 \
        +s*(12.997281214703279e0 \
        +s)))))))
    if(y > 0e0):
        y2=y*y
        fd=fd+y*(1419.19357146830655e0 \
        +y2*(227.287879079339020e0 \
        +y2*(9.86960440108935862e0 \
        +y2*0.142857142857142857e0)))
    return fd
def fd13h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=13/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/15e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        s=1e0-t
        fd=ex*(1871.25430579778835e0 \
        -ex*(10.2714824358192133e0 \
        +s*(0.0648393897767320738e0 \
        +s*(0.000971410002224865156e0 \
        +s*(0.0000232470542763426993e0 \
        +s*(7.41058598210549775e-7 \
        +s*3.37424008840868627e-8))))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(2.94504307654357499e6 \
        +t*(1.72142318914178000e6 \
        +t*(302664.670131641659e0 \
        +t*(-4392.91160671565775e0 \
        +t*(1886.14265293074511e0 \
        +t*(5292.33536016064607e0 \
        +t*(1532.39748567462704e0 \
        +t*160.488909859013319e0 \
        )))))))/(2672.0262186872157e0 \
        +s*(4050.0534640335863e0 \
        +s*(2998.5673483066873e0 \
        +s*(1381.1929813352472e0 \
        +s*(429.69401904358381e0 \
        +s*(92.16501861997658e0 \
        +s*(13.091741877025778e0 \
        +s)))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(1.45543624525939873e7 \
        +t*(1.09901378809591560e7 \
        +t*(5.0278309600981774e6 \
        +t*(2.17920053476107569e6 \
        +t*(801203.84933034017e0 \
        +t*(204535.562039585858e0 \
        +t*(32251.6713113453623e0 \
        +t*2520.49966644549104e0 \
        )))))))/(2525.1970865635211e0 \
        +s*(2519.0633694107075e0 \
        +s*(1640.0689226392724e0 \
        +s*(779.5069098915619e0 \
        +s*(273.74080946976357e0 \
        +s*(69.07956623994342e0 \
        +s*(11.541634429054885e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        s=1e0-t
        fd=(1.93509493140212933e9 \
        +t*(4.73031979570464235e9 \
        +t*(5.87850060979944364e9 \
        +t*(4.82135265081185025e9 \
        +t*(2.83819099819062720e9 \
        +t*(1.22325945046779759e9 \
        +t*(3.76487745749965788e8 \
        +t*(7.58303164598034022e7 \
        +t*7.71973955404921694e6 \
        ))))))))/(101717.15224358499e0 \
        +s*(25406.290690742596e0 \
        +s*(11612.352340539603e0 \
        +s*(4174.0221825716411e0 \
        +s*(1281.7558184421595e0 \
        +s*(331.85386698947176e0 \
        +s*(69.634528227703809e0 \
        +s*(10.868655326785347e0 \
        +s))))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        fd=(5.2085062280477356e11 \
        +t*(2.2833424052547072e12 \
        +t*(4.6942573239060036e12 \
        +t*(5.8958834991587034e12 \
        +t*(4.9360061465395771e12 \
        +t*(2.8153080727145281e12 \
        +t*(1.06730054566227826e12 \
        +t*(2.4600629203104023e11 \
        +t*2.6466259504577480e10 \
        ))))))))/(2.42061644583385800e6 \
        +t*(153096.878206723536e0 \
        +t*(38844.6431417054012e0 \
        +t*(-16885.0152281400560e0 \
        +t*(4865.05644899569952e0 \
        +t*(-1067.44742924509046e0 \
        +t*(173.008767319757249e0 \
        +t*(-18.6099093504480426e0 \
        +t))))))))*0.999999999999999770e0	# correction to remove bias
    elif(x < 20e0):
        t=0.1e0*x-1e0
        fd=(7.7494086475291441e13 \
        +t*(5.0061227151520991e14 \
        +t*(1.45146838868293917e15 \
        +t*(2.46379854838342831e15 \
        +t*(2.67523099025981612e15 \
        +t*(1.90126580903196655e15 \
        +t*(8.6325468139568610e14 \
        +t*(2.28901218799706877e14 \
        +t*2.71416555283189345e13 \
        ))))))))/(8.9593891719102305e6 \
        +t*(2.23010123362691961e6 \
        +t*(-239561.734722929070e0 \
        +t*(43938.8978835860601e0 \
        +t*(-8408.3951285804076e0 \
        +t*(1448.44898008864648e0 \
        +t*(-201.658017368512975e0 \
        +t*(19.7129633131788616e0 \
        -t))))))))*0.999999999999999586e0	# correction to remove bias
    elif(x < 40e0):
        t=0.05e0*x-1e0
        fd=(1.22298919425291664e16 \
        +t*(8.9726625177108898e16 \
        +t*(2.89429751278928300e17 \
        +t*(5.3577901105140076e17 \
        +t*(6.2206348573306568e17 \
        +t*(4.63426239396617756e17 \
        +t*(2.16065376561259960e17 \
        +t*(5.7540345485220279e16 \
        +t*6.6835199866465357e15 \
        ))))))))/(1.31871866498468464e7 \
        +t*(2.83885323472743888e6 \
        +t*(-275298.111415499841e0 \
        +t*(47078.0598194149218e0 \
        +t*(-8612.3789225919783e0 \
        +t*(1446.29041011108831e0 \
        +t*(-199.315359842233309e0 \
        +t*(19.5132779151984627e0 \
        -t))))))))*0.999999999999999580e0	# correction to remove bias
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*x*x*x*x*sqrt(x)*factor*(1e0 \
        +w*(80.1905357588510589e0 \
        +t*(1.42831787292433216e0 \
        +t*(0.00812881145350198890e0 \
        +t*(3.85165680520411590e-6 \
        +t*1.83598087001386478e-9)))))
    return fd
def fd14h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=7
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        s=1e0-t
        fd=ex*(5040e0 \
        -ex*(19.5849162780581217e0 \
        +s*(0.101236264600248646e0 \
        +s*(0.00131827373096852460e0 \
        +s*(0.0000283211236200358235e0 \
        +s*(8.27819847443616991e-7 \
        +s*3.46664379401620231e-8))))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(8.05214238081846197e6 \
        +t*(4.23358827341165564e6 \
        +t*(262627.912342619479e0 \
        +t*(-323968.614686001584e0 \
        +t*(-98175.8116505823446e0 \
        +t*(-7562.84276896647246e0 \
        +t*(1252.57372771721279e0 \
        +t*240.247242901336449e0 \
        )))))))/(2413.8835947192718e0 \
        +s*(4139.8252477104615e0 \
        +s*(3204.5076382872745e0 \
        +s*(1486.4720567970787e0 \
        +s*(456.50435752749115e0 \
        +s*(95.80622002968487e0 \
        +s*(13.317952574698873e0 \
        +s)))))))
    if(y > 0e0):
        y2=y*y
        fd=-fd+10042.0286586746908e0 \
        +y2*(4967.17750013907292e0 \
        +y2*(397.753788388843285e0 \
        +y2*(11.5145384679375851e0 \
        +y2*0.125e0)))
    return fd
def fd15h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=15/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/17e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(14034.4072934834126e0 \
        -ex*(171704.258234536602e0 \
        +t*(6049.5894628442878e0 \
        +t*18.1763510883857458e0 \
        ))/(4429.36992795387362e0 \
        +t*(175.155804618692908e0 \
        +t)))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(2.06790092766575034e7 \
        +t*(8.26618273142399596e6 \
        +t*(-2.08115753677480168e6 \
        +t*(-2.17301177649999531e6 \
        +t*(-641552.116750411401e0 \
        +t*(-91807.9577537648588e0 \
        +t*(-5144.12042361256270e0 \
        +t*130.857943513312398e0 \
        )))))))/(1711.2966803109211e0 \
        +s*(3804.4823677048040e0 \
        +s*(3232.4717528599742e0 \
        +s*(1550.7278916841484e0 \
        +s*(478.50436506151174e0 \
        +s*(99.39616883636118e0 \
        +s*(13.585756243903013e0 \
        +s)))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(1.14403769376860621e8 \
        +t*(8.4972567501965974e7 \
        +t*(3.81753609315202610e7 \
        +t*(1.65881819811148351e7 \
        +t*(6.1705051839981204e6 \
        +t*(1.58079386467916017e6 \
        +t*(246507.752966115175e0 \
        +t*18602.2895319461278e0 \
        )))))))/(2572.2942565752562e0 \
        +s*(2659.5730458609857e0 \
        +s*(1732.1057976186518e0 \
        +s*(829.4655494427400e0 \
        +s*(293.34263153462293e0 \
        +s*(73.73539965269387e0 \
        +s*(12.058936149293461e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        s=1e0-t
        fd=(6.26769725573910255e9 \
        +t*(1.32711699403202671e10 \
        +t*(1.45560142717062095e10 \
        +t*(1.07860795716164403e10 \
        +t*(5.86969120046064229e9 \
        +t*(2.38796511791514625e9 \
        +t*(7.07324240427174132e8 \
        +t*(1.39791587840460999e8 \
        +t*1.42694865767192645e7 \
        ))))))))/(30361.411562018280e0 \
        +s*(17707.813587539272e0 \
        +s*(8523.204548822773e0 \
        +s*(3390.1996842891790e0 \
        +s*(1127.1366883800605e0 \
        +s*(309.69425190845478e0 \
        +s*(67.751604120864452e0 \
        +s*(10.834010773474702e0 \
        +s))))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        s=1e0-t
        fd=(5.69341524462926732e11 \
        +t*(2.36489781301030086e12 \
        +t*(4.67723648136547218e12 \
        +t*(5.73677938363737470e12 \
        +t*(4.75966348844286492e12 \
        +t*(2.72977815388509051e12 \
        +t*(1.05619383963810221e12 \
        +t*(2.52484808268258635e11 \
        +t*2.87129101561538399e10 \
        ))))))))/(233403.35536095456e0 \
        +s*(60565.447915936497e0 \
        +s*(18770.529358157892e0 \
        +s*(5494.0347508271098e0 \
        +s*(1458.2356321178129e0 \
        +s*(341.00432855822186e0 \
        +s*(67.360611688552025e0 \
        +s*(10.355894270482783e0 \
        +s))))))))*0.999999999999999687e0	# correction to remove bias
    elif(x < 20e0):
        t=0.1e0*x-1e0
        s=1e0-t
        fd=(6.79824678667324436e13 \
        +t*(4.47889271605157194e14 \
        +t*(1.33539302658610566e15 \
        +t*(2.35081455707368313e15 \
        +t*(2.67105097393954020e15 \
        +t*(2.00614187037046236e15 \
        +t*(9.73640078908216993e14 \
        +t*(2.79804648854039015e14 \
        +t*3.66107518187916541e13 \
        ))))))))/(585167.34458490542e0 \
        +s*(99101.77544747319e0 \
        +s*(23659.896891961921e0 \
        +s*(5847.0608231871316e0 \
        +s*(1394.1981365390388e0 \
        +s*(307.36846956466131e0 \
        +s*(59.734384735038341e0 \
        +s*(9.438593558054937e0 \
        +s))))))))*0.999999999999999620e0	# correction to remove bias
    elif(x < 40e0):
        t=0.05e0*x-1e0
        s=1e0-t
        fd=(1.99221037305471970e16 \
        +t*(1.55301826780028291e17 \
        +t*(5.3562790972794281e17 \
        +t*(1.06787028331863552e18 \
        +t*(1.34677794609411928e18 \
        +t*(1.10118289362700600e18 \
        +t*(5.7076444557408842e17 \
        +t*(1.71793041083229002e17 \
        +t*2.30600690809359773e16 \
        ))))))))/(959281.46439522639e0 \
        +s*(146009.54484661068e0 \
        +s*(31788.065669901676e0 \
        +s*(7257.6052635887384e0 \
        +s*(1618.0190118885021e0 \
        +s*(337.33224463190506e0 \
        +s*(62.698857808593658e0 \
        +s*(9.5893450572160768e0 \
        +s))))))))*0.999999999999999649e0	# correction to remove bias
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*x*x*x*x*x*sqrt(x)*factor*(1e0 \
        +w*(104.864546761574387e0 \
        +t*(2.69793375997248149e0 \
        +t*(0.0276379588953803004e0 \
        +t*(0.0000654786006189425666e0 \
        -t*1.03209499898071117e-8)))))
    return fd
def fd16h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=8
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(40320e0 \
        -ex*(438381.668209835602e0 \
        +t*(14167.5566380822417e0 \
        +t*39.1239843501671193e0 \
        ))/(5566.7513423478282e0 \
        +t*(199.502568378336498e0 \
        +t)))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(2.14460848478648315e8 \
        +t*(1.66513461191585055e8 \
        +t*(5.17491656951190442e7 \
        +t*(6.60393533940475286e6 \
        +t*(-301119.943009454383e0 \
        +t*(-202842.867158865294e0 \
        -t*20669.3789063593406e0 \
        ))))))/(10903.784789014007e0 \
        +s*(14623.305826998018e0 \
        +s*(9179.893497142397e0 \
        +s*(3522.2940212081378e0 \
        +s*(905.1498999681050e0 \
        +s*(159.07578981158691e0 \
        +s*(18.015010064955669e0 \
        +s)))))))
    if(y > 0e0):
        y2=y*y
        fd=fd+y*(80336.2292693975266e0 \
        +y2*(13245.8066670375278e0 \
        +y2*(636.406061422149257e0 \
        +y2*(13.1594725347858115e0 \
        +y2*0.111111111111111111e0))))
    return fd
def fd17h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=17/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/19e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        s=1e0-t
        fd=ex*(119292.461994609007e0 \
        -ex*(164.281538211493590e0 \
        +s*(0.465418918711191171e0 \
        +s*(0.00397356161994318188e0 \
        +s*(0.0000615968461595874662e0 \
        +s*1.50191715167058393e-6)))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(1.43233835112073902e8 \
        +t*(1.39644553704144873e8 \
        +t*(6.13766014358067700e7 \
        +t*(1.56246791599180488e7 \
        +t*(2.43295219093432312e6 \
        +t*(218176.915876999296e0 \
        +t*8461.46979813306275e0 \
        ))))))/(3043.1981753546660e0 \
        +s*(3390.9687009373892e0 \
        +s*(1761.0786885568746e0 \
        +s*(550.68360665579008e0 \
        +s*(112.08528557398394e0 \
        +s*(14.640373761706403e0 \
        +s))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(1.21473360069923149e9 \
        +t*(1.01176690309922349e9 \
        +t*(4.95296056344158641e8 \
        +t*(2.06442737728860908e8 \
        +t*(7.0192333337028334e7 \
        +t*(1.68572449951275985e7 \
        +t*(2.53144559406161612e6 \
        +t*186718.775025914870e0 \
        )))))))/(3455.142635040908e0 \
        +s*(3415.073282258220e0 \
        +s*(2023.9784836523565e0 \
        +s*(903.6597935624893e0 \
        +s*(308.93682588995655e0 \
        +s*(76.49008105409234e0 \
        +s*(12.338920623517048e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        s=1e0-t
        fd=(2.67440099736518804e10 \
        +t*(4.91370104189578919e10 \
        +t*(4.73732500104890339e10 \
        +t*(3.16238224173646457e10 \
        +t*(1.59135818804699047e10 \
        +t*(6.12061461496369111e9 \
        +t*(1.74615616554871192e9 \
        +t*(3.38446352294444219e8 \
        +t*3.46053509281020592e7 \
        ))))))))/(11121.047017722056e0 \
        +s*(9829.804681621007e0 \
        +s*(5748.503365098324e0 \
        +s*(2606.1477102230902e0 \
        +s*(953.9183383047316e0 \
        +s*(281.64461270648236e0 \
        +s*(64.892044676666959e0 \
        +s*(10.720667663673541e0 \
        +s))))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        s=1e0-t
        fd=(1.21689593180741239e12 \
        +t*(4.79662223812667505e12 \
        +t*(9.12838410654446290e12 \
        +t*(1.09342887556403655e13 \
        +t*(8.99572172197880880e12 \
        +t*(5.19592600765981107e12 \
        +t*(2.05751238857523311e12 \
        +t*(5.12310527144160372e11 \
        +t*6.19902241659841813e10 \
        ))))))))/(39255.392055313674e0 \
        +s*(22199.471524635690e0 \
        +s*(9415.210433779872e0 \
        +s*(3354.6940213500329e0 \
        +s*(1027.9861625160893e0 \
        +s*(269.15608801102034e0 \
        +s*(58.326091875891505e0 \
        +s*(9.690839898241749e0 \
        +s))))))))*0.999999999999999611e0
    elif(x < 20e0):
        t=0.1e0*x-1e0
        s=1e0-t
        fd=(8.36136698862497927e13 \
        +t*(5.63471803594835697e14 \
        +t*(1.73344511753855139e15 \
        +t*(3.17713365223451161e15 \
        +t*(3.79488820022826435e15 \
        +t*(3.02846836744419910e15 \
        +t*(1.58129984938571763e15 \
        +t*(4.96500350365744464e14 \
        +t*7.24731492178964020e13 \
        ))))))))/(43633.188864890011e0 \
        +s*(21099.956516665469e0 \
        +s*(8040.798889514530e0 \
        +s*(2678.4837772160305e0 \
        +s*(794.3651890403060e0 \
        +s*(208.01106751201808e0 \
        +s*(46.655407061024955e0 \
        +s*(8.3567416627775934e0 \
        +s))))))))*0.999999999999999524e0
    elif(x < 40e0):
        t=0.05e0*x-1e0
        s=1e0-t
        fd=(2.85846778936881832e16 \
        +t*(2.36061789976170730e17 \
        +t*(8.67582358035872224e17 \
        +t*(1.85563671344211925e18 \
        +t*(2.53068942615802160e18 \
        +t*(2.25901769990104319e18 \
        +t*(1.29359182644194722e18 \
        +t*(4.36848670280351452e17 \
        +t*6.72189933519645798e16 \
        ))))))))/(50522.192743560920e0 \
        +s*(23134.306793549278e0 \
        +s*(8428.128974587599e0 \
        +s*(2708.9200442813342e0 \
        +s*(782.3736655720094e0 \
        +s*(201.43688280680891e0 \
        +s*(44.899007032888684e0 \
        +s*(8.0956175513436493e0 \
        +s))))))))*0.999999999999999478e0
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*x*x*x*x*x*x*sqrt(x)*factor*(1e0 \
        +w*(132.828425897994463e0 \
        +t*(4.66006740357572083e0 \
        +t*(0.0750173171258174240e0 \
        +t*(0.000414697262104018271e0 \
        +t*1.95167395079296505e-7)))))
    return fd
def fd18h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=9
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        fd=ex*(362880e0 \
        -ex*(3.11619728815890900e6 \
        +t*(84459.263086739990e0 \
        +t*194.729051789880448e0 \
        ))/(8793.5020477151129e0 \
        +t*(258.970670923338654e0 \
        +t)))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(5.34284039564434465e8 \
        +t*(5.33773366525970850e8 \
        +t*(2.42092992302655038e8 \
        +t*(6.42814979745526752e7 \
        +t*(1.06272445991848042e7 \
        +t*(1.04623859092301352e6 \
        +t*48187.9003961411735e0 \
        ))))))/(3823.5401164205447e0 \
        +s*(4167.5033491759870e0 \
        +s*(2107.9832247353650e0 \
        +s*(639.46059745678970e0 \
        +s*(125.53444672868253e0 \
        +s*(15.642276104269218e0 \
        +s))))))
    if(y > 0e0):
        y2=y*y
        fd=-fd+725062.913034521571e0 \
        +y2*(361513.031712288870e0 \
        +y2*(29803.0650008344375e0 \
        +y2*(954.609092133223885e0 \
        +y2*(14.8044066016340379e0 \
        +y2*0.1e0))))
    return fd
def fd19h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=19/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/21e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        s=1e0-t
        fd=ex*(1.13327838894878557e6 \
        -ex*(781.077395263087427e0 \
        +s*(1.48017751152694790e0 \
        +s*(0.00952643972760576450e0 \
        +s*(0.000118887473010527875e0 \
        +s*2.40377778104657177e-6)))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(1.98943681340803829e9 \
        +t*(2.02504701261695886e9 \
        +t*(9.40112997876683365e8 \
        +t*(2.57205491041485272e8 \
        +t*(4.42589158347859287e7 \
        +t*(4.61202797242277802e6 \
        +t*232199.034580285755e0 \
        ))))))/(4645.3648503361484e0 \
        +s*(4976.8851201391641e0 \
        +s*(2464.6700288281232e0 \
        +s*(729.19053696862632e0 \
        +s*(138.78343942961328e0 \
        +s*(16.586263194372411e0 \
        +s))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(2.0904667585793652e10 \
        +t*(1.9423314417935927e10 \
        +t*(9.4466078397530459e9 \
        +t*(3.3380904172376415e9 \
        +t*(9.2799283366292994e8 \
        +t*(1.9279930343506925e8 \
        +t*(2.6584305328117208e7 \
        +t*1.8721659680393183e6 \
        )))))))/(6510.453486834102e0 \
        +s*(6583.316420184059e0 \
        +s*(3538.873468101783e0 \
        +s*(1337.9108450581962e0 \
        +s*(388.7430265102922e0 \
        +s*(85.60461680432659e0 \
        +s*(12.861326654789701e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        s=1e0-t
        fd=(1.46863114809614622e11 \
        +t*(2.34916998394298104e11 \
        +t*(1.98120796400802870e11 \
        +t*(1.18887551091630769e11 \
        +t*(5.55928633602927965e10 \
        +t*(2.03490255735994097e10 \
        +t*(5.60239395267172792e9 \
        +t*(1.05980329750305191e9 \
        +t*1.07474670751003016e8 \
        ))))))))/(4912.718774356158e0 \
        +s*(5658.595947000664e0 \
        +s*(3911.882548894156e0 \
        +s*(2003.2886387850459e0 \
        +s*(805.2407096838510e0 \
        +s*(255.52601531171211e0 \
        +s*(62.070351460815245e0 \
        +s*(10.603837914443282e0 \
        +s))))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        s=1e0-t
        fd=(4.12413857105017004e12 \
        +t*(1.53777683873017139e13 \
        +t*(2.80178767823520436e13 \
        +t*(3.25874492182871964e13 \
        +t*(2.64367160554342534e13 \
        +t*(1.53023378021225309e13 \
        +t*(6.17571294140739606e12 \
        +t*(1.59629111145863694e12 \
        +t*2.05057950138673222e11 \
        ))))))))/(9870.066781117703e0 \
        +s*(8442.670237353289e0 \
        +s*(4641.969549915204e0 \
        +s*(1995.0747902033748e0 \
        +s*(707.3070308400987e0 \
        +s*(208.47240484486439e0 \
        +s*(49.869236685972587e0 \
        +s*(9.0113347734666514e0 \
        +s))))))))*0.999999999999999624e0	# correction to remove bias
    elif(x < 20e0):
        t=0.1e0*x-1e0
        s=1e0-t
        fd=(4.83390017425457148e15 \
        +t*(3.49375860214157535e16 \
        +t*(1.17174577652359819e17 \
        +t*(2.38956570804562992e17 \
        +t*(3.26219845844040472e17 \
        +t*(3.09099843298003147e17 \
        +t*(2.03426110846076766e17 \
        +t*(8.98530419590583886e16 \
        +t*(2.42666818156258567e16 \
        +t*3.07539397786247273e15 \
        )))))))))/(207639.00554015383e0 \
        +s*(101594.67784669785e0 \
        +s*(39318.472360728631e0 \
        +s*(13385.302295791795e0 \
        +s*(4099.2485074048775e0 \
        +s*(1128.0104124272086e0 \
        +s*(274.41287517597127e0 \
        +s*(56.961169613859215e0 \
        +s*(9.354997067031336e0 \
        +s)))))))))*0.999999999999999475e0	# correction to remove bias
    elif(x < 40e0):
        t=0.05e0*x-1e0
        s=1e0-t
        fd=(2.81147322924282096e18 \
        +t*(2.55872925207166842e19 \
        +t*(1.05126940075992923e20 \
        +t*(2.56086191531691937e20 \
        +t*(4.08006931722902169e20 \
        +t*(4.41541112498720876e20 \
        +t*(3.25219940350974164e20 \
        +t*(1.57672402355387744e20 \
        +t*(4.58547965512713670e19 \
        +t*6.13678661161381742e18 \
        )))))))))/(253648.48647211156e0 \
        +s*(116226.83914995012e0 \
        +s*(42576.299330336023e0 \
        +s*(13857.868987762036e0 \
        +s*(4097.2448088308021e0 \
        +s*(1099.1091735270184e0 \
        +s*(263.31471897218326e0 \
        +s*(54.436947056837050e0 \
        +s*(9.0281927555123252e0 \
        +s)))))))))*0.999999999999999480e0	# correction to remove bias
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*x*x*x*x*x*x*x*sqrt(x)*factor*(1e0 \
        +w*(164.082173168110588e0 \
        +t*(7.52780119040598426e0 \
        +t*(0.175040406459615661e0 \
        +t*(0.00174172934550196671e0 \
        +t*(4.09368331231164635e-6 \
        -t*6.44677689509362889e-10))))))
    return fd
def fd20h(y):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=10
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    x=-abs(y)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        s=1e0-t
        fd=ex*(3628800e0 \
        -ex*(1769.11836499240874e0 \
        +s*(2.74114748349296929e0 \
        +s*(0.0153129509121134183e0 \
        +s*(0.000171415624076050339e0 \
        +s*3.15741345799313491e-6)))))
    elif(x <= 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(7.23923596166699396e9 \
        +t*(7.46011115766110324e9 \
        +t*(3.51560076972821513e9 \
        +t*(9.79963332403905796e8 \
        +t*(1.72722667850513422e8 \
        +t*(1.85872779338803730e7 \
        +t*980119.027043354796e0 \
        ))))))/(5345.1738990257193e0 \
        +s*(5661.6190861926977e0 \
        +s*(2763.5410988949565e0 \
        +s*(803.48749805350521e0 \
        +s*(149.54574471403198e0 \
        +s*(17.324182954806273e0 \
        +s))))))
    if(y > 0e0):
        y2=y*y
        fd=fd+y*(7.25062913034521571e6 \
        +y2*(1.20504343904096290e6 \
        +y2*(59606.1300016688751e0 \
        +y2*(1363.72727447603412e0 \
        +y2*(16.4493406684822644e0 \
        +y2*0.0909090909090909091e0)))))
    return fd
def fd21h(x):
    # double precision rational minimax approximation of Fermi-Dirac integral of order k=21/2
    # Reference: Fukushima, T. (2014, submitted to App. Math. Comp.) 
    # Author: Fukushima, T. <Toshio.Fukushima@nao.ac.jp>
    factor = 2e0/23e0   # = 1/(k+1)
    if(x < -2e0):
        ex=exp(x)
        t=ex*7.38905609893065023e0
        s=1e0-t
        fd=ex*(1.18994230839622485e7 \
        -ex*(4103.25503466860405e0 \
        +s*(5.19741906649655513e0 \
        +s*(0.0251967194122553158e0 \
        +s*(0.000252954565705636841e0 \
        +s*4.24573915094571073e-6)))))
    elif(x < 0e0):
        s=-0.5e0*x
        t=1e0-s
        fd=(2.57000236613575175e10 \
        +t*(2.66775768017824432e10 \
        +t*(1.26823522594150685e10 \
        +t*(3.57329482988205525e9 \
        +t*(6.38366360660921950e8 \
        +t*(6.99165387034866263e7 \
        +t*3.77747237079641640e6 \
        ))))))/(5829.6137460125218e0 \
        +s*(6133.1261260721688e0 \
        +s*(2967.5333196500928e0 \
        +s*(853.66205862182849e0 \
        +s*(156.68183527916256e0 \
        +s*(17.793529538010685e0 \
        +s))))))
    elif(x < 2e0):
        t=0.5e0*x
        s=1e0-t
        fd=(3.9256463321926022e11 \
        +t*(3.5272008321450459e11 \
        +t*(1.4960338986194452e11 \
        +t*(4.0840964995951679e10 \
        +t*(8.3525752792093004e9 \
        +t*(1.3652900099806473e9 \
        +t*(1.6653931710965140e8 \
        +t*1.13722223824443501e7 \
        )))))))/(10780.778916243366e0 \
        +s*(12211.902429240048e0 \
        +s*(6810.538241268853e0 \
        +s*(2444.9651837399508e0 \
        +s*(622.4594160475152e0 \
        +s*(115.21708456233468e0 \
        +s*(14.653186311439082e0 \
        +s)))))))
    elif(x < 5e0):
        t=0.3333333333333333333e0*(x-2e0)
        s=1e0-t
        fd=(1.02038438555518024e12 \
        +t*(1.44086845004445038e12 \
        +t*(1.06951376053758491e12 \
        +t*(5.83349119667798955e11 \
        +t*(2.59184513055987834e11 \
        +t*(9.22344989320630316e10 \
        +t*(2.46767885435893916e10 \
        +t*(4.50298910194390990e9 \
        +t*4.40533249962065063e8 \
        ))))))))/(2627.6481435132529e0 \
        +s*(3598.485403241250e0 \
        +s*(2816.3184982451496e0 \
        +s*(1591.2052134075520e0 \
        +s*(693.3250333689612e0 \
        +s*(234.74251456309597e0 \
        +s*(59.835610870372227e0 \
        +s*(10.529060212037859e0 \
        +s))))))))
    elif(x < 10e0):
        t=0.2e0*x-1e0
        s=1e0-t
        fd=(1.92539440493876721e13 \
        +t*(6.76427905453399646e13 \
        +t*(1.17204818714740525e14 \
        +t*(1.31312575057612394e14 \
        +t*(1.04191636638567130e14 \
        +t*(5.99784170385635521e13 \
        +t*(2.45015915838649510e13 \
        +t*(6.53409875052899427e12 \
        +t*8.86443190814042498e11 \
        ))))))))/(3208.0283085434934e0 \
        +s*(3638.3347710577402e0 \
        +s*(2454.8591095140763e0 \
        +s*(1237.5705806010665e0 \
        +s*(499.5532233797705e0 \
        +s*(164.10632643205828e0 \
        +s*(43.045792336177945e0 \
        +s*(8.4174363747925276e0 \
        +s))))))))*0.999999999999999649e0	# correction to remove bias
    elif(x < 20e0):
        t=0.1e0*x-1e0
        s=1e0-t
        fd=(1.35032839928658828e16 \
        +t*(9.84341732357224541e16 \
        +t*(3.35732954478237964e17 \
        +t*(7.02136022561204639e17 \
        +t*(9.91445873700748081e17 \
        +t*(9.80394164297009879e17 \
        +t*(6.79928848238746956e17 \
        +t*(3.19982319837818266e17 \
        +t*(9.33078432378309346e16 \
        +t*1.29960135147133318e16 \
        )))))))))/(32616.320007579440e0 \
        +s*(25996.868562405952e0 \
        +s*(13806.569048984017e0 \
        +s*(5938.718527590630e0 \
        +s*(2189.8437434853080e0 \
        +s*(703.2974320942947e0 \
        +s*(195.48717008127781e0 \
        +s*(45.691859712028360e0 \
        +s*(8.3721801701244348e0 \
        +s)))))))))*0.999999999999999529e0	# correction to remove bias
    elif(x < 40e0):
        t=0.05e0*x-1e0
        s=1e0-t
        fd=(1.01458237235662575e19 \
        +t*(9.67883827639700444e19 \
        +t*(4.18744967361252695e20 \
        +t*(1.07961610867931522e21 \
        +t*(1.83106271883557796e21 \
        +t*(2.12354501642149972e21 \
        +t*(1.68956127221959607e21 \
        +t*(8.93514699913180709e20 \
        +t*(2.87036545075886579e20 \
        +t*4.31795348604572483e19 \
        )))))))))/(32461.378904270757e0 \
        +s*(24848.502722479329e0 \
        +s*(12785.219096902698e0 \
        +s*(5373.990729362032e0 \
        +s*(1953.3664643688677e0 \
        +s*(624.0842567143388e0 \
        +s*(174.30734991710066e0 \
        +s*(41.427358351772922e0 \
        +s*(7.8380857354891532e0 \
        +s)))))))))*0.999999999999999445e0	# correction to remove bias
    else:
        w=1e0/(x*x)
        t=1600e0*w
        fd=x*x*x*x*x*x*x*x*x*x*x*sqrt(x)*factor*(1e0 \
        +w*(198.625788571923339e0 \
        +t*(11.5426284919561671e0 \
        +t*(0.365993577138676996e0 \
        +t*(0.00572282501335319477e0 \
        +t*(0.0000313848422097767888e0 \
        +t*1.47431097320479878e-8))))))
    return fd

_fds = {
        -9 : fdm9h,
        -7 : fdm7h,
        -5 : fdm5h,
        -3 : fdm3h,
        -1 : fdm1h,
        0 : fd0h,
        1 : fd1h,
        2 : fd2h,
        3 : fd3h,
        4 : fd4h,
        5 : fd5h,
        6 : fd6h,
        7 : fd7h,
        8 : fd8h,
        9 : fd9h,
        10 : fd10h,
        11 : fd11h,
        12 : fd12h,
        13 : fd13h,
        14 : fd14h,
        15 : fd15h,
        16 : fd16h,
        17 : fd17h,
        18 : fd18h,
        19 : fd19h,
        20 : fd20h,
        21 : fd21h,
        }
def fdk2(k2, x):
    '''
    Double precision rational minimax approximation of the Fermi-Dirac integral
    of order k.

    Parameters
    ----------
    k2 : int
        Twice the order of the Fermi-Dirac integral, i.e. k*2.
    x : float
        Normalized Fermi energy above the band edge, i.e. (Ef-Ec)/kT

    Returns
    -------
    fd : float
        Value of the Fermi-Dirac integral.
    err : int
        Error code: 0 for no error, 1 for not implemented.
    '''
    if k2 in _fds:
        return _fds[k2](x), 0
    else:
        return numpy.nan, 1

def vfdk2(k2, x):
    '''
    Double precision rational minimax approximation of the Fermi-Dirac integral
    of order k.

    Parameters
    ----------
    k2 : int
        Twice the order of the Fermi-Dirac integral, i.e. k*2.
    x : ndarray
        Normalized Fermi energies above the band edge, i.e. (Ef-Ec)/kT.

    Returns
    -------
    fd : ndarray
        Values of the Fermi-Dirac integral.
    err : int
        Error code: 0 for no error, 1 for not implemented.
    '''
    result = numpy.empty_like(x)
    fd, err = fdk2(k2, 0.)
    if err:
        result.fill(numpy.nan)
        return result, err
    for i in xrange(x.size):
        result[i], _ = fdk2(k2, x[i])
    return result, 0

def dfdk2(k2, x, d):
    '''
    Double precision rational minimax approximation of the derivative of the
    Fermi-Dirac integral of order k.

    Parameters
    ----------
    k2 : int
        Twice the order of the Fermi-Dirac integral, i.e. k*2.
    x : float
        Normalized Fermi energy above the band edge, i.e. (Ef-Ec)/kT.

    Returns
    -------
    fd : float
        Value of the Fermi-Dirac integral.
    err : int
        Error code: 0 for no error, 1 for not implemented.
    '''
    k = k2 / 2.
    if d == 1:
        fd, err = fdk2(k2 - 2, x)
        if err:
            return numpy.nan, err
    else:
        fd, err = dfdk2(k2 - 2, x, d - 1)
        if err:
            return numpy.nan, err
    return k * fd, 0

def vdfdk2(k2, x, d):
    '''
    Double precision rational minimax approximation of the derivative of the
    Fermi-Dirac integral of order k.

    Parameters
    ----------
    k2 : int
        Twice the order of the Fermi-Dirac integral, i.e. k*2.
    x : ndarray
        Normalized Fermi energies above the band edge, i.e. (Ef-Ec)/kT.

    Returns
    -------
    fd : ndarray
        Values of the Fermi-Dirac integral.
    err : int
        Error code: 0 for no error, 1 for not implemented.
    '''
    result = numpy.empty_like(x)
    fd, err = dfdk2(k2, 0., d)
    if err:
        result.fill(numpy.nan)
        return result, err
    for i in xrange(x.size):
        result[i], _ = dfdk2(k2, x[i], d)
    return result, 0
