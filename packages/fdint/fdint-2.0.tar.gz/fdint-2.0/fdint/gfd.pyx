'''
First derivatives of the generalized Fermi-Dirac integrals.

This file was generated by `scripts/gen_dgfd_pyx.py`, and should not
be edited directly.
'''
from fdint cimport _fdint
import numpy

def gfdm1h(phi, beta, out=None):
    cdef int num
    if isinstance(phi, numpy.ndarray):
        num = phi.shape[0]
        assert isinstance(beta, numpy.ndarray) and beta.shape[0] == num
        if out is None:
            out = numpy.empty(num)
        else:
            assert isinstance(out, numpy.ndarray) and out.shape[0] == num
        _fdint.vgfdm1h(phi, beta, out)
        return out
    else:
        assert not isinstance(beta, numpy.ndarray)
        return _fdint.gfdm1h(phi, beta)

def gfd1h(phi, beta, out=None):
    cdef int num
    if isinstance(phi, numpy.ndarray):
        num = phi.shape[0]
        assert isinstance(beta, numpy.ndarray) and beta.shape[0] == num
        if out is None:
            out = numpy.empty(num)
        else:
            assert isinstance(out, numpy.ndarray) and out.shape[0] == num
        _fdint.vgfd1h(phi, beta, out)
        return out
    else:
        assert not isinstance(beta, numpy.ndarray)
        return _fdint.gfd1h(phi, beta)

def gfd3h(phi, beta, out=None):
    cdef int num
    if isinstance(phi, numpy.ndarray):
        num = phi.shape[0]
        assert isinstance(beta, numpy.ndarray) and beta.shape[0] == num
        if out is None:
            out = numpy.empty(num)
        else:
            assert isinstance(out, numpy.ndarray) and out.shape[0] == num
        _fdint.vgfd3h(phi, beta, out)
        return out
    else:
        assert not isinstance(beta, numpy.ndarray)
        return _fdint.gfd3h(phi, beta)

def gfd5h(phi, beta, out=None):
    cdef int num
    if isinstance(phi, numpy.ndarray):
        num = phi.shape[0]
        assert isinstance(beta, numpy.ndarray) and beta.shape[0] == num
        if out is None:
            out = numpy.empty(num)
        else:
            assert isinstance(out, numpy.ndarray) and out.shape[0] == num
        _fdint.vgfd5h(phi, beta, out)
        return out
    else:
        assert not isinstance(beta, numpy.ndarray)
        return _fdint.gfd5h(phi, beta)
