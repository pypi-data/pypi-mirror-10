/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Fri Feb 27 07:14:54 2015. */

#ifndef PB_EXTENSIONBUG_PB_H_INCLUDED
#define PB_EXTENSIONBUG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _Message1 {
    uint8_t dummy_field;
} Message1;

typedef struct _Message2 {
    bool has_field2;
    uint32_t field2;
} Message2;

/* Extensions */
extern const pb_extension_type_t Message2_extras; /* field type: Message2 extras; */

/* Default values for struct fields */

/* Initializer values for message structs */
#define Message1_init_default                    {0}
#define Message2_init_default                    {false, 0}
#define Message1_init_zero                       {0}
#define Message2_init_zero                       {false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Message2_field2_tag                      2
#define Message2_extras_tag                      30

/* Struct field encoding specification for nanopb */
extern const pb_field_t Message1_fields[1];
extern const pb_field_t Message2_fields[2];

/* Maximum encoded size of messages (where known) */
#define Message1_size                            0
#define Message2_size                            6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
