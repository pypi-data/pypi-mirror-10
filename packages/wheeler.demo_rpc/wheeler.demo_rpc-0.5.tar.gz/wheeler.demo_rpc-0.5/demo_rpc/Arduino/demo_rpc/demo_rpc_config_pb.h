/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Wed Jul  1 19:30:04 2015. */

#ifndef PB_CONFIG_PB_H_INCLUDED
#define PB_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _Config {
    bool has_serial_number;
    uint32_t serial_number;
    bool has_baud_rate;
    uint32_t baud_rate;
    bool has_i2c_address;
    uint32_t i2c_address;
} Config;

typedef struct _State {
    bool has_float_value;
    float float_value;
    bool has_integer_value;
    int32_t integer_value;
} State;

/* Default values for struct fields */
extern const uint32_t Config_baud_rate_default;
extern const float State_float_value_default;
extern const int32_t State_integer_value_default;

/* Initializer values for message structs */
#define Config_init_default                      {false, 0, false, 115200u, false, 0}
#define State_init_default                       {false, 10.987654, false, 37}
#define Config_init_zero                         {false, 0, false, 0, false, 0}
#define State_init_zero                          {false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Config_serial_number_tag                 1
#define Config_baud_rate_tag                     2
#define Config_i2c_address_tag                   3
#define State_float_value_tag                    1
#define State_integer_value_tag                  2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Config_fields[4];
extern const pb_field_t State_fields[3];

/* Maximum encoded size of messages (where known) */
#define Config_size                              18
#define State_size                               16

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
