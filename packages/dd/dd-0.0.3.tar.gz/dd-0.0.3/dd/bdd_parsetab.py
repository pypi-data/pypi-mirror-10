
# dd/bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xe5\xcd\x98\xb2\x08\x15\xff\x9a\xdc\xabI\x01\xca\xcaC='
    
_lr_action_items = {'AND':([1,2,3,5,8,17,18,19,20,21,22,23,24,25,26,27,29,31,32,],[-2,-4,9,-3,-1,9,-5,-6,9,-12,-11,9,9,9,9,-14,9,9,-13,]),'$end':([1,2,3,5,8,18,19,20,21,22,23,24,25,27,32,],[-2,-4,0,-3,-1,-5,-6,-8,-12,-11,-9,-10,-7,-14,-13,]),'FALSE':([0,6,7,9,10,11,12,13,14,15,16,28,30,],[1,1,1,1,1,1,1,1,1,1,1,1,1,]),'NAME':([0,6,7,9,10,11,12,13,14,15,16,28,30,],[2,2,2,2,2,2,2,2,2,2,2,2,2,]),'NEQUALS':([1,2,3,5,8,17,18,19,20,21,22,23,24,25,26,27,29,31,32,],[-2,-4,11,-3,-1,11,-5,11,11,-12,-11,11,11,11,11,-14,11,11,-13,]),'ITE':([0,6,7,9,10,11,12,13,14,15,16,28,30,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NUMBER':([0,6,7,9,10,11,12,13,14,15,16,28,30,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'EQUALS':([1,2,3,5,8,17,18,19,20,21,22,23,24,25,26,27,29,31,32,],[-2,-4,12,-3,-1,12,-5,12,12,-12,-11,12,12,12,12,-14,12,12,-13,]),'IMP':([1,2,3,5,8,17,18,19,20,21,22,23,24,25,26,27,29,31,32,],[-2,-4,13,-3,-1,13,-5,-6,-8,-12,-11,-9,13,-7,13,-14,13,13,-13,]),'BIMP':([1,2,3,5,8,17,18,19,20,21,22,23,24,25,26,27,29,31,32,],[-2,-4,14,-3,-1,14,-5,-6,-8,-12,-11,-9,-10,-7,14,-14,14,14,-13,]),'LPAREN':([0,4,6,7,9,10,11,12,13,14,15,16,28,30,],[6,16,6,6,6,6,6,6,6,6,6,6,6,6,]),'NOT':([0,6,7,9,10,11,12,13,14,15,16,28,30,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'XOR':([1,2,3,5,8,17,18,19,20,21,22,23,24,25,26,27,29,31,32,],[-2,-4,10,-3,-1,10,-5,-6,-8,-12,-11,10,10,-7,10,-14,10,10,-13,]),'COMMA':([1,2,5,8,18,19,20,21,22,23,24,25,26,27,29,32,],[-2,-4,-3,-1,-5,-6,-8,-12,-11,-9,-10,-7,28,-14,30,-13,]),'TRUE':([0,6,7,9,10,11,12,13,14,15,16,28,30,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'OR':([1,2,3,5,8,17,18,19,20,21,22,23,24,25,26,27,29,31,32,],[-2,-4,15,-3,-1,15,-5,-6,15,-12,-11,15,15,-7,15,-14,15,15,-13,]),'RPAREN':([1,2,5,8,17,18,19,20,21,22,23,24,25,27,31,32,],[-2,-4,-3,-1,27,-5,-6,-8,-12,-11,-9,-10,-7,-14,32,-13,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,6,7,9,10,11,12,13,14,15,16,28,30,],[3,17,18,19,20,21,22,23,24,25,26,29,31,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','/Users/ifilippi/temp/dd/dd/bdd.py',1478),
  ('expr -> FALSE','expr',1,'p_bool','/Users/ifilippi/temp/dd/dd/bdd.py',1479),
  ('expr -> NUMBER','expr',1,'p_number','/Users/ifilippi/temp/dd/dd/bdd.py',1484),
  ('expr -> NAME','expr',1,'p_var','/Users/ifilippi/temp/dd/dd/bdd.py',1488),
  ('expr -> NOT expr','expr',2,'p_unary','/Users/ifilippi/temp/dd/dd/bdd.py',1492),
  ('expr -> expr AND expr','expr',3,'p_binary','/Users/ifilippi/temp/dd/dd/bdd.py',1496),
  ('expr -> expr OR expr','expr',3,'p_binary','/Users/ifilippi/temp/dd/dd/bdd.py',1497),
  ('expr -> expr XOR expr','expr',3,'p_binary','/Users/ifilippi/temp/dd/dd/bdd.py',1498),
  ('expr -> expr IMP expr','expr',3,'p_binary','/Users/ifilippi/temp/dd/dd/bdd.py',1499),
  ('expr -> expr BIMP expr','expr',3,'p_binary','/Users/ifilippi/temp/dd/dd/bdd.py',1500),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','/Users/ifilippi/temp/dd/dd/bdd.py',1501),
  ('expr -> expr NEQUALS expr','expr',3,'p_binary','/Users/ifilippi/temp/dd/dd/bdd.py',1502),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','/Users/ifilippi/temp/dd/dd/bdd.py',1507),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','/Users/ifilippi/temp/dd/dd/bdd.py',1511),
]
