
# dd/bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'AC5BBB9708FF298A6ADE5CC11DF14FE8'
    
_lr_action_items = {'AND':([1,2,6,7,8,9,12,15,26,27,30,31,32,33,34,35,36,37,38,39,41,43,44,46,47,],[-3,-1,-20,-2,-5,16,-4,16,-5,-6,-21,-7,16,-13,-12,16,16,16,16,16,16,16,16,16,-15,]),'OR':([1,2,6,7,8,9,12,15,26,27,30,31,32,33,34,35,36,37,38,39,41,43,44,46,47,],[-3,-1,-20,-2,-5,23,-4,23,-5,-6,-21,-7,23,-13,-12,23,23,23,-8,23,23,23,23,23,-15,]),'FALSE':([0,5,11,16,17,18,19,20,21,22,23,24,28,40,42,45,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'NAME':([0,4,5,6,11,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,40,42,45,],[6,6,6,-20,6,6,-19,6,6,6,6,6,6,6,6,6,6,-19,6,-18,6,6,6,]),'NEQUALS':([1,2,6,7,8,9,12,15,26,27,30,31,32,33,34,35,36,37,38,39,41,43,44,46,47,],[-3,-1,-20,-2,-5,18,-4,18,-5,-6,-21,18,18,-13,-12,18,18,18,18,18,18,18,18,18,-15,]),'ITE':([0,5,11,16,17,18,19,20,21,22,23,24,28,40,42,45,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'QUESTION':([0,5,11,16,17,18,19,20,21,22,23,24,28,40,42,45,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NUMBER':([0,3,5,11,16,17,18,19,20,21,22,23,24,28,40,42,45,],[1,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'EQUALS':([1,2,6,7,8,9,12,15,26,27,30,31,32,33,34,35,36,37,38,39,41,43,44,46,47,],[-3,-1,-20,-2,-5,19,-4,19,-5,-6,-21,19,19,-13,-12,19,19,19,19,19,19,19,19,19,-15,]),'IMP':([1,2,6,7,8,9,12,15,26,27,30,31,32,33,34,35,36,37,38,39,41,43,44,46,47,],[-3,-1,-20,-2,-5,21,-4,21,-5,-6,-21,-7,-9,-13,-12,-14,-10,21,-8,21,21,21,21,21,-15,]),'BIMP':([1,2,6,7,8,9,12,15,26,27,30,31,32,33,34,35,36,37,38,39,41,43,44,46,47,],[-3,-1,-20,-2,-5,22,-4,22,-5,-6,-21,-7,-9,-13,-12,-14,-10,-11,-8,22,22,22,22,22,-15,]),'LPAREN':([0,5,10,11,16,17,18,19,20,21,22,23,24,28,40,42,45,],[5,5,24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NOT':([0,5,11,16,17,18,19,20,21,22,23,24,28,40,42,45,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'XOR':([1,2,6,7,8,9,12,15,26,27,30,31,32,33,34,35,36,37,38,39,41,43,44,46,47,],[-3,-1,-20,-2,-5,17,-4,17,-5,-6,-21,-7,-9,-13,-12,17,17,17,-8,17,17,17,17,17,-15,]),'$end':([1,2,6,7,8,9,12,26,27,30,31,32,33,34,35,36,37,38,41,43,47,],[-3,-1,-20,-2,-5,0,-4,-5,-6,-21,-7,-9,-13,-12,-14,-10,-11,-8,-17,-16,-15,]),'COMMA':([1,2,6,7,8,12,26,27,30,31,32,33,34,35,36,37,38,39,41,43,44,47,],[-3,-1,-20,-2,-5,-4,-5,-6,-21,-7,-9,-13,-12,-14,-10,-11,-8,42,-17,-16,45,-15,]),'TRUE':([0,5,11,16,17,18,19,20,21,22,23,24,28,40,42,45,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MINUS':([0,1,2,5,6,7,8,9,11,12,15,16,17,18,19,20,21,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[3,-3,-1,3,-20,-2,-5,20,3,-4,20,3,3,3,3,3,3,3,3,3,-5,-6,3,-21,-7,-9,-13,-12,-14,20,20,-8,20,3,20,3,20,20,3,20,-15,]),'DOT':([6,13,14,25,26,29,],[-20,28,-19,40,-19,-18,]),'RPAREN':([1,2,6,7,8,12,15,26,27,30,31,32,33,34,35,36,37,38,41,43,46,47,],[-3,-1,-20,-2,-5,-4,30,-5,-6,-21,-7,-9,-13,-12,-14,-10,-11,-8,-17,-16,47,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,5,11,16,17,18,19,20,21,22,23,24,28,40,42,45,],[9,15,27,31,32,33,34,35,36,37,38,39,41,43,44,46,]),'name':([0,4,5,11,13,16,17,18,19,20,21,22,23,24,25,28,40,42,45,],[8,14,8,26,29,8,8,8,8,8,8,8,8,8,29,8,8,8,8,]),'names':([4,11,],[13,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','bdd.py',1700),
  ('expr -> FALSE','expr',1,'p_bool','bdd.py',1701),
  ('expr -> NUMBER','expr',1,'p_number','bdd.py',1706),
  ('expr -> MINUS NUMBER','expr',2,'p_negative_number','bdd.py',1710),
  ('expr -> name','expr',1,'p_var','bdd.py',1715),
  ('expr -> NOT expr','expr',2,'p_unary','bdd.py',1719),
  ('expr -> expr AND expr','expr',3,'p_binary','bdd.py',1723),
  ('expr -> expr OR expr','expr',3,'p_binary','bdd.py',1724),
  ('expr -> expr XOR expr','expr',3,'p_binary','bdd.py',1725),
  ('expr -> expr IMP expr','expr',3,'p_binary','bdd.py',1726),
  ('expr -> expr BIMP expr','expr',3,'p_binary','bdd.py',1727),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','bdd.py',1728),
  ('expr -> expr NEQUALS expr','expr',3,'p_binary','bdd.py',1729),
  ('expr -> expr MINUS expr','expr',3,'p_binary','bdd.py',1730),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','bdd.py',1735),
  ('expr -> NOT names DOT expr','expr',4,'p_quantifier','bdd.py',1739),
  ('expr -> QUESTION names DOT expr','expr',4,'p_quantifier','bdd.py',1740),
  ('names -> names name','names',2,'p_names_iter','bdd.py',1745),
  ('names -> name','names',1,'p_names_end','bdd.py',1751),
  ('name -> NAME','name',1,'p_name','bdd.py',1755),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','bdd.py',1759),
]
