<%!
from xmi2odoo.tools import model, emodel, sel_literals, fnc_name, attr_options
from xmi2odoo.tools import ass_id, ass_options, ass_other_name
from xmi2odoo.tools import parameters, names
from xmi2odoo.tools import view_filter_id, view_form_id, view_tree_id, form_colors
%>\
<%def name="search_field(col)"><field name="${col.name}" string="${col.tag['label']}"
%                    if 'search_groups' in col.tag or 'groups' in col.tag:
                            groups="${','.join([col.tag.get('search_groups',''),col.tag.get('groups','')])}"
%                    endif
                            /></%def>\
<%def name="search_association(ass)"><field name="${ass.name}" string="${ass.tag['label']}"
%                    if 'search_groups' in ass.tag or 'groups' in ass.tag:
                            groups="${','.join([ass.tag.get('search_groups',''),ass.tag.get('groups','')])}"
%                    endif
                            /></%def>\
<%def name="form_field(col)"><field name="${col.name}"
%                    if 'form_select' in col.tag:
                            select="${col.tag['form_select']}"
%                    endif
%                    if 'form_colspan' in col.tag:
                            colspan="${col.tag['form_colspan']}"
%                    endif
%                    if 'form_readonly' in col.tag:
                            readonly="${col.tag['form_readonly']}"
%                    endif
%                    if 'form_required' in col.tag:
                            required="${col.tag['form_required']}"
%                    endif
%                    if 'form_nolabel' in col.tag:
                            nolabel="${col.tag['form_nolabel']}"
%                    endif
%                    if col.is_stereotype('hidden'):
                            invisible="True"
%                    endif
%                    if not col.is_stereotype('hidden') and 'form_invisible' in col.tag:
                            invisible="${col.tag['form_invisible']}"
%                    endif
%                    if 'form_password' in col.tag:
                            password="${col.tag['form_password']}"
%                    endif 
%                    if 'form_string' in col.tag:
                            string="${col.tag['form_string']}"
%                    endif
%                    if 'form_domain' in col.tag:
                            domain="${col.tag['form_domain']}"
%                    endif
%                    if 'form_context' in col.tag:
                            context="${col.tag.get('form_context','')}"
%                    endif
%                    if 'form_widget' in col.tag:
                            widget="${col.tag['form_widget']}"
%                    endif
%                    if 'form_mode' in col.tag:
                            mode="${col.tag['form_mode']}"
%                    endif
%                    if 'form_on_change' in col.tag:
                            on_change="${col.tag['form_on_change']}"
%                    endif
%                    if 'form_attrs' in col.tag:
                            attrs="${col.tag['form_attrs']}"
%                    endif
%                    if 'form_eval' in col.tag:
                            eval="${col.tag['form_eval']}"
%                    endif
%                    if 'form_default_focus' in col.tag:
                            default_focus="${col.tag['form_default_focus']}"
%                    endif
%                    if 'form_groups' in col.tag or 'groups' in col.tag:
                            groups="${','.join([col.tag.get('form_groups',''),col.tag.get('groups','')])}"
%                    endif
                            /></%def>\
<%def name="form_button_box(ass)"><button type="object" name="view_${ass.name}"
                        class="oe_stat_button"
                        icon="${ass.tag.get('icon', 'fa-star')}">
                        <field name="${ass.name}_count"
                            widget="statinfo"
                            string="${ass.tag.get('label', ass.name)}"
                            help="${ass.tag.get('help', '')}"/>
                    </button></%def>\
<%def name="form_association(ass)"><field name="${ass.name}"
%                    if 'form_select' in ass.tag:
                            select="${ass.tag['form_select']}"
%                    endif
%                    if 'form_colspan' in ass.tag:
                            colspan="${ass.tag['form_colspan']}"
%                    endif
%                    if 'form_readonly' in ass.tag:
                            readonly="${ass.tag['form_readonly']}"
%                    endif
%                    if 'form_required' in ass.tag:
                            required="${ass.tag['form_required']}"
%                    endif
%                    if 'form_nolabel' in ass.tag:
                            nolabel="${ass.tag['form_nolabel']}"
%                    endif
%                    if ass.is_stereotype('hidden'):
                            invisible="True"
%                    endif
%                    if not ass.is_stereotype('hidden') and 'form_invisible' in ass.tag:
                            invisible="${ass.tag['form_invisible']}"
%                    endif
%                    if 'form_password' in ass.tag:
                            password="${ass.tag['form_password']}"
%                    endif
%                    if 'form_string' in ass.tag:
                            string="${ass.tag['form_string']}"
%                    endif
%                    if 'form_domain' in ass.tag:
                            domain="${ass.tag['form_domain']}"
%                    endif
%                    if 'form_context' in ass.tag:
                            context="${ass.tag.get('form_context','')}"
%                    endif
%                    if 'form_widget' in ass.tag:
                            widget="${ass.tag['form_widget']}"
%                    endif
%                    if 'form_mode' in ass.tag:
                            mode="${ass.tag['form_mode']}"
%                    endif
%                    if 'form_on_change' in ass.tag:
                            on_change="${ass.tag['form_on_change']}"
%                    endif
%                    if 'form_attrs' in ass.tag:
                            attrs="${ass.tag['form_attrs']}"
%                    endif
%                    if 'form_eval' in ass.tag:
                            eval="${ass.tag['form_eval']}"
%                    endif
%                    if 'form_default_focus' in ass.tag:
                            default_focus="${ass.tag['form_default_focus']}"
%                    endif 
%                    if 'form_groups' in ass.tag or 'groups' in ass.tag:
                            groups="${','.join([ass.tag.get('form_groups',''),ass.tag.get('groups','')])}"
%                    endif
                        /></%def>\
<%def name="tree_field(col)"><field name="${col.name}"
%                    if 'tree_context' in col.tag:
                            context="${col.tag.get('form_context','')}"
%                    endif
%                    if 'tree_widget' in col.tag:
                            widget="${col.tag['tree_widget']}"
%                    endif
%                    if col.is_stereotype('hidden'):
                            invisible="True"
%                    endif
%                    if (not col.is_stereotype('hidden') and 'tree_invisible' in col.tag):
                            invisible="${col.tag['tree_invisible']}"
%                    endif
                        /></%def>\
<%def name="tree_association(ass)"><field name="${ass.name}"
%                    if 'tree_context' in ass.tag:
                            context="${ass.tag.get('tree_context','')}"
%                    endif
%                    if 'tree_widget' in ass.tag:
                            widget="${ass.tag['tree_widget']}"
%                    endif
%                    if ass.is_stereotype('hidden'):
                            invisible="True"
%                    endif
%                    if not ass.is_stereotype('hidden') and 'tree_invisible' in ass.tag:
                            invisible="${ass.tag['tree_invisible']}"
%                    endif
                        /></%def>\
<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>
        <!-- FORMVIEW -->
        <record id="${view_form_id(CLASS)}" model="ir.ui.view">
            <field name="name">${model(CLASS)}.form</field>
            <field name="model">${emodel(CLASS)}</field>
            <field name="arch" type="xml">
                <form string="${CLASS_LABEL}" version="7.0">
                    <group>
%                  for sm in list(CLASS.get_statemachines(no_stereotypes=['extend','prototype']))[:1]:
                        <field name="state" invisible="True"/>
%                  endfor
%                  for col in CLASS.all_attributes(stereotypes=['form']):
                        ${form_field(col)} 
%                  endfor
%                  for ass in CLASS.all_associations(stereotypes=['form'], no_stereotypes=['button_box']):
                        ${form_association(ass)} 
%                  endfor
                    </group>
                    <footer>
%                  for sm in CLASS.get_statemachines(no_stereotypes=['extend','prototype']):
%                    for tri in [ t for t in sm.list_ordered_triggers() ]:
%                      if not [ tra.state_to for tra in tri.sm_transitions(sm) if (not tra.state_from.is_initial() and tra.state_to.is_initial()) or (tra.state_from.is_final() and not tra.state_to.is_final()) ]:
                        <button name="sgn_${tri.name}"
%                      else:
                        <button name="action_wfk_set_${state.name}" type="object"
%                      endif
%                          if 'class' in tri.tag:
                            class="${tri.tag['class']}"
%                          endif
%                          if 'type' in tri.tag:
                            type="${tri.tag['type']}"
%                          endif
                            states="${','.join(sorted([ s.name for s in set(tri.list_states_from(sm)) ]))}"
                            string="${tri.tag['label']}"
%                          if 'groups' in tri.tag:
                            groups="${tri.tag['groups']}"
%                          endif
%                          if [ tra for tra in tri.sm_transitions(sm) if tra.is_stereotype('default') ]:
                            class="oe_highlight"
%                          endif
                            />
%                    endfor 
%                  endfor
                       or
                       <button string="Cancel" class="oe_link" special="cancel"/>
                    </footer>
                </form>
            </field>
        </record>
    </data>
</openerp>
<!-- vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4
     -->
