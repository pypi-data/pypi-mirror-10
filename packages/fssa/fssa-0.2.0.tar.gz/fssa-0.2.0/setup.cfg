[metadata]
description = Scientific Python package for finite-size scaling analysis at phase transitions
author = Andreas Sorge
author_email = pyfssa@asorge.de
license = apache
url = http://andsor.github.io/pyfssa
# Comma separated list of data INSIDE your package to include.
# DO NOT prepend the package name when specifying files and folders.
package_data = 
# Comma separated list of data OUTSIDE your package to include.
# Equivalent to adding files to MANIFEST.in which is not needed.
data_files = *.rst, *.txt
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = Development Status :: 3 - Alpha,
              Intended Audience :: Science/Research,
              License :: OSI Approved :: Apache Software License,
              Programming Language :: Python,
              Programming Language :: Python :: 2.7,
              Programming Language :: Python :: 3.4,
              Topic :: Scientific/Engineering :: Mathematics,
              Topic :: Scientific/Engineering :: Physics

[console_scripts]
# Add here console scripts like:
# hello_world = pyscaffold.module:function
# putup = pyscaffold.runner:run

[data_files]
# Add here data to be included which lies OUTSIDE your package, e.g.
# path/to/destination = files/to/include, others/to/include
# This is the same as adding files to MANIFEST.in which is not needed anymore.
# The destination is relative to the root of your virtual environment.
# Use ** as wildcard if you want to recursively include a pattern, e.g.
# tests/**.py would include all py-files in all subfolders of tests.
share/fssa = *.rst, *.txt

[extras_require]
# Add here additional requirements for extra features, like:
# PDF = ReportLab>=1.2, RXP

[pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# flakes-ignore =
#    doc/conf.py ALL
#
#pep8-ignore =
#    doc/conf.py ALL

[aliases]
test = pytest
