This is pyscaffold.info, produced by makeinfo version 5.1 from
pyscaffold.texi.

     PyScaffold 0.9.post3, July 29, 2014

     Copyright © 2014, Blue Yonder

INFO-DIR-SECTION Python
START-INFO-DIR-ENTRY
* PyScaffold: (pyscaffold.info). The PyScaffold reference manual.
END-INFO-DIR-ENTRY


   Generated by Sphinx 1.2.


File: pyscaffold.info,  Node: Top,  Next: Contents,  Up: (dir)

PyScaffold
**********

     PyScaffold 0.9.post3, July 29, 2014

     Copyright © 2014, Blue Yonder

PyScaffold helps you to easily setup a new Python project, it is as easy
as:

     putup my_project

This will create a new subdirectory ‘my_project’ and serve you a project
setup with git repository, setup.py, document and test folder ready for
some serious coding.

Type ‘putup -h’ to learn about more configuration options.  PyScaffold
assumes that you have Git(1) installed and set up on your PC, meaning at
least your name and email configured.  The scaffold of ‘my_project’
provides you with following *note features: 8.

* Menu:

* Contents:: 
* Indices and tables:: 
* Python Module Index:: 
* Index:: 

 — The Detailed Node Listing —

Contents

* Features:: 
* Contributing:: 
* pyscaffold:: 

Features

* Packaging:: 
* Complete Git Integration:: 
* Sphinx Documentation:: 
* Unittest & Coverage:: 
* Requirements Management:: 
* Easy Updating:: 

Contributing

* Bug Reports:: 
* Code:: 

pyscaffold

* pyscaffold package:: 

pyscaffold package

* Submodules:: 
* pyscaffold.info module: pyscaffold info module. 
* pyscaffold.repo module: pyscaffold repo module. 
* pyscaffold.runner module: pyscaffold runner module. 
* pyscaffold.structure module: pyscaffold structure module. 
* pyscaffold.templates module: pyscaffold templates module. 
* pyscaffold.utils module: pyscaffold utils module. 
* Module contents:: 


   ---------- Footnotes ----------

   (1) http://git-scm.com/


File: pyscaffold.info,  Node: Contents,  Next: Indices and tables,  Prev: Top,  Up: Top

1 Contents
**********

* Menu:

* Features:: 
* Contributing:: 
* pyscaffold:: 


File: pyscaffold.info,  Node: Features,  Next: Contributing,  Up: Contents

1.1 Features
============

* Menu:

* Packaging:: 
* Complete Git Integration:: 
* Sphinx Documentation:: 
* Unittest & Coverage:: 
* Requirements Management:: 
* Easy Updating:: 


File: pyscaffold.info,  Node: Packaging,  Next: Complete Git Integration,  Up: Features

1.1.1 Packaging
---------------

Run ‘python setup.py sdist’, ‘python setup.py bdist’ or ‘python setup.py
bdist_wheel’ to build a source, binary or wheel distribution.


File: pyscaffold.info,  Node: Complete Git Integration,  Next: Sphinx Documentation,  Prev: Packaging,  Up: Features

1.1.2 Complete Git Integration
------------------------------

Your project is already an initialised Git repository and ‘setup.py’
uses the information of tags to infer the version of your project with
the help of versioneer(1).  To use this feature you need to tag with the
format ‘vMAJOR.MINOR[.REVISION]’ , e.g.  ‘v0.0.1’ or ‘v0.1’.  The prefix
‘v’ is needed!  Run ‘python setup.py version’ to retrieve the current
PEP440(2)-compliant version.  This version will be used when building a
package and is also accessible through ‘my_project.__version__’.  The
version will be ‘unknown’ until you have added a first tag.

   ---------- Footnotes ----------

   (1) https://github.com/warner/python-versioneer

   (2) http://www.python.org/dev/peps/pep-0440/


File: pyscaffold.info,  Node: Sphinx Documentation,  Next: Unittest & Coverage,  Prev: Complete Git Integration,  Up: Features

1.1.3 Sphinx Documentation
--------------------------

Build the documentation with ‘python setup.py docs’ and run doctests
with ‘python setup.py doctest’.  Start editing the file ‘docs/index.rst’
to extend the documentation.  The documentation also works with Read the
Docs(1).

   ---------- Footnotes ----------

   (1) https://readthedocs.org/


File: pyscaffold.info,  Node: Unittest & Coverage,  Next: Requirements Management,  Prev: Sphinx Documentation,  Up: Features

1.1.4 Unittest & Coverage
-------------------------

Run ‘python setup.py test’ to run all unittests defined in the subfolder
‘tests’ with the help of py.test(1).  The py.test plugin pytest-cov(2)
is used to automatically generate a coverage report.  For usage with a
continuous integration software JUnit and Coverage XML output can be
activated.  Checkout ‘putup -h’ for details.

   ---------- Footnotes ----------

   (1) http://pytest.org/

   (2) https://github.com/schlamar/pytest-cov


File: pyscaffold.info,  Node: Requirements Management,  Next: Easy Updating,  Prev: Unittest & Coverage,  Up: Features

1.1.5 Requirements Management
-----------------------------

Add the requirements of your project to the ‘requirements.txt’ file
which will be automatically used by ‘setup.py’.


File: pyscaffold.info,  Node: Easy Updating,  Prev: Requirements Management,  Up: Features

1.1.6 Easy Updating
-------------------

Keep your project’s scaffold up-to-date by applying ‘putput --update
my_project’ when a new version of PyScaffold was released.  It may also
be used to change the url, license and description setting.


File: pyscaffold.info,  Node: Contributing,  Next: pyscaffold,  Prev: Features,  Up: Contents

1.2 Contributing
================

PyScaffold is developed by Blue Yonder developers to help automating and
standardizing the process of project setups.  You are very welcome to
join in our effort if you would like to contribute.

* Menu:

* Bug Reports:: 
* Code:: 


File: pyscaffold.info,  Node: Bug Reports,  Next: Code,  Up: Contributing

1.2.1 Bug Reports
-----------------

If you experience bugs or in general issues with PyScaffold, please file
a bug report to our Bug Tracker(1).

   ---------- Footnotes ----------

   (1) http://github.com/blue-yonder/pyscaffold/issues


File: pyscaffold.info,  Node: Code,  Prev: Bug Reports,  Up: Contributing

1.2.2 Code
----------

If you would like to contribute to PyScaffold, fork the main
repository(1) on GitHub, then submit a “pull request” (PR):

  1. Create an account(2) on GitHub if you do not already have one.

  2. Fork the project repository: click on the `Fork' button near the
     top of the page.  This creates a copy of the code under your
     account on the GitHub server.

  3. Clone this copy to your local disk:

          git clone git@github.com:YourLogin/pyscaffold.git

  4. Create a branch to hold your changes:

          git checkout -b my-feature

     and start making changes.  Never work in the master branch!

  5. Work on this copy, on your computer, using Git(3) to do the version
     control.  When you’re done editing, do:

          git add modified_files
          git commit

     to record your changes in Git, then push them to GitHub with:

          git push -u origin my-feature

   ---------- Footnotes ----------

   (1) https://github.com/blue-yonder/pyscaffold/

   (2) https://github.com/signup/free

   (3) http://git-scm.com/


File: pyscaffold.info,  Node: pyscaffold,  Prev: Contributing,  Up: Contents

1.3 pyscaffold
==============

* Menu:

* pyscaffold package:: 


File: pyscaffold.info,  Node: pyscaffold package,  Up: pyscaffold

1.3.1 pyscaffold package
------------------------

* Menu:

* Submodules:: 
* pyscaffold.info module: pyscaffold info module. 
* pyscaffold.repo module: pyscaffold repo module. 
* pyscaffold.runner module: pyscaffold runner module. 
* pyscaffold.structure module: pyscaffold structure module. 
* pyscaffold.templates module: pyscaffold templates module. 
* pyscaffold.utils module: pyscaffold utils module. 
* Module contents:: 


File: pyscaffold.info,  Node: Submodules,  Next: pyscaffold info module,  Up: pyscaffold package

1.3.1.1 Submodules
..................


File: pyscaffold.info,  Node: pyscaffold info module,  Next: pyscaffold repo module,  Prev: Submodules,  Up: pyscaffold package

1.3.1.2 pyscaffold.info module
..............................

 -- Function: pyscaffold.info.email ()

 -- Function: pyscaffold.info.is_git_installed ()

 -- Function: pyscaffold.info.project (args)

 -- Function: pyscaffold.info.username ()


File: pyscaffold.info,  Node: pyscaffold repo module,  Next: pyscaffold runner module,  Prev: pyscaffold info module,  Up: pyscaffold package

1.3.1.3 pyscaffold.repo module
..............................

 -- Function: pyscaffold.repo.git_tree_add (struct, prefix='')

 -- Function: pyscaffold.repo.init_commit_repo (project, struct)

 -- Function: pyscaffold.repo.is_git_repo (folder)


File: pyscaffold.info,  Node: pyscaffold runner module,  Next: pyscaffold structure module,  Prev: pyscaffold repo module,  Up: pyscaffold package

1.3.1.4 pyscaffold.runner module
................................

 -- Function: pyscaffold.runner.main (args)

 -- Function: pyscaffold.runner.parse_args (args)

 -- Function: pyscaffold.runner.run (*args, **kwargs)

     Entry point for setup.py


File: pyscaffold.info,  Node: pyscaffold structure module,  Next: pyscaffold templates module,  Prev: pyscaffold runner module,  Up: pyscaffold package

1.3.1.5 pyscaffold.structure module
...................................

 -- Function: pyscaffold.structure.create_structure (struct,
          prefix=None, update=False)

 -- Function: pyscaffold.structure.make_structure (args)

 -- Function: pyscaffold.structure.set_default_args (args)


File: pyscaffold.info,  Node: pyscaffold templates module,  Next: pyscaffold utils module,  Prev: pyscaffold structure module,  Up: pyscaffold package

1.3.1.6 pyscaffold.templates module
...................................

 -- Function: pyscaffold.templates.authors (args)

 -- Function: pyscaffold.templates.copying (args)

 -- Function: pyscaffold.templates.coveragerc (args)

 -- Function: pyscaffold.templates.get_template (name)

 -- Function: pyscaffold.templates.gitignore (args)

 -- Function: pyscaffold.templates.gitignore_empty (args)

 -- Function: pyscaffold.templates.init (args)

 -- Function: pyscaffold.templates.manifest_in (args)

 -- Function: pyscaffold.templates.readme (args)

 -- Function: pyscaffold.templates.requirements (args)

 -- Function: pyscaffold.templates.setup (args)

 -- Function: pyscaffold.templates.sphinx_conf (args)

 -- Function: pyscaffold.templates.sphinx_index (args)

 -- Function: pyscaffold.templates.sphinx_makefile (args)

 -- Function: pyscaffold.templates.version (args)

 -- Function: pyscaffold.templates.versioneer (args)


File: pyscaffold.info,  Node: pyscaffold utils module,  Next: Module contents,  Prev: pyscaffold templates module,  Up: pyscaffold package

1.3.1.7 pyscaffold.utils module
...............................

 -- Class: pyscaffold.utils.ObjKeeper (name, bases, dct)

     Bases: ‘type’

      -- Attribute: instances = {}

 -- Function: pyscaffold.utils.capture_objs (cls)

 -- Function: pyscaffold.utils.chdir (*args, **kwds)

 -- Function: pyscaffold.utils.exceptions2exit (exception_list)

 -- Function: pyscaffold.utils.is_valid_identifier (string)

 -- Function: pyscaffold.utils.list2str (lst, indent=0)

 -- Function: pyscaffold.utils.make_valid_identifier (string)

 -- Function: pyscaffold.utils.safe_get (namespace, attr)

 -- Function: pyscaffold.utils.safe_set (namespace, attr, value)


File: pyscaffold.info,  Node: Module contents,  Prev: pyscaffold utils module,  Up: pyscaffold package

1.3.1.8 Module contents
.......................


File: pyscaffold.info,  Node: Indices and tables,  Next: Python Module Index,  Prev: Contents,  Up: Top

2 Indices and tables
********************

   * `genindex'

   * `modindex'

   * `search'


File: pyscaffold.info,  Node: Python Module Index,  Next: Index,  Prev: Indices and tables,  Up: Top

Python Module Index
*******************

* Menu:

* pyscaffold: 0. 
* pyscaffold.info: 1. 
* pyscaffold.repo: 2. 
* pyscaffold.runner: 3. 
* pyscaffold.structure: 4. 
* pyscaffold.templates: 5. 
* pyscaffold.utils: 6. 


File: pyscaffold.info,  Node: Index,  Prev: Python Module Index,  Up: Top

Index
*****

 [index ]
* Menu:

* authors() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line  6)
* capture_objs() (in module pyscaffold.utils): pyscaffold utils module.
                                                               (line 12)
* chdir() (in module pyscaffold.utils):  pyscaffold utils module.
                                                               (line 14)
* copying() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line  8)
* coveragerc() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 10)
* create_structure() (in module pyscaffold.structure): pyscaffold structure module.
                                                               (line  6)
* email() (in module pyscaffold.info):   pyscaffold info module.
                                                               (line  6)
* exceptions2exit() (in module pyscaffold.utils): pyscaffold utils module.
                                                               (line 16)
* get_template() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 12)
* gitignore() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 14)
* gitignore_empty() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 16)
* git_tree_add() (in module pyscaffold.repo): pyscaffold repo module.
                                                               (line  6)
* init() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 18)
* init_commit_repo() (in module pyscaffold.repo): pyscaffold repo module.
                                                               (line  8)
* instances (pyscaffold.utils.ObjKeeper attribute): pyscaffold utils module.
                                                               (line 10)
* is_git_installed() (in module pyscaffold.info): pyscaffold info module.
                                                               (line  8)
* is_git_repo() (in module pyscaffold.repo): pyscaffold repo module.
                                                               (line 10)
* is_valid_identifier() (in module pyscaffold.utils): pyscaffold utils module.
                                                               (line 18)
* list2str() (in module pyscaffold.utils): pyscaffold utils module.
                                                               (line 20)
* main() (in module pyscaffold.runner):  pyscaffold runner module.
                                                               (line  6)
* make_structure() (in module pyscaffold.structure): pyscaffold structure module.
                                                               (line  9)
* make_valid_identifier() (in module pyscaffold.utils): pyscaffold utils module.
                                                               (line 22)
* manifest_in() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 20)
* ObjKeeper (class in pyscaffold.utils): pyscaffold utils module.
                                                               (line  6)
* parse_args() (in module pyscaffold.runner): pyscaffold runner module.
                                                               (line  8)
* project() (in module pyscaffold.info): pyscaffold info module.
                                                               (line 10)
* pyscaffold (module):                   Module contents.      (line  5)
* pyscaffold.info (module):              pyscaffold info module.
                                                               (line  6)
* pyscaffold.repo (module):              pyscaffold repo module.
                                                               (line  6)
* pyscaffold.runner (module):            pyscaffold runner module.
                                                               (line  6)
* pyscaffold.structure (module):         pyscaffold structure module.
                                                               (line  6)
* pyscaffold.templates (module):         pyscaffold templates module.
                                                               (line  6)
* pyscaffold.utils (module):             pyscaffold utils module.
                                                               (line  6)
* readme() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 22)
* requirements() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 24)
* run() (in module pyscaffold.runner):   pyscaffold runner module.
                                                               (line 10)
* safe_get() (in module pyscaffold.utils): pyscaffold utils module.
                                                               (line 24)
* safe_set() (in module pyscaffold.utils): pyscaffold utils module.
                                                               (line 26)
* setup() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 26)
* set_default_args() (in module pyscaffold.structure): pyscaffold structure module.
                                                               (line 11)
* sphinx_conf() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 28)
* sphinx_index() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 30)
* sphinx_makefile() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 32)
* username() (in module pyscaffold.info): pyscaffold info module.
                                                               (line 12)
* version() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 34)
* versioneer() (in module pyscaffold.templates): pyscaffold templates module.
                                                               (line 36)



Tag Table:
Node: Top321
Ref: index doc489
Ref: 7489
Ref: Top-Footnote-11869
Node: Contents1897
Ref: index pyscaffold1988
Ref: 91988
Ref: index contents1988
Ref: a1988
Node: Features2069
Ref: features doc2147
Ref: b2147
Ref: features features2147
Ref: 82147
Ref: features id12147
Ref: c2147
Node: Packaging2328
Ref: features packaging2419
Ref: d2419
Node: Complete Git Integration2600
Ref: features complete-git-integration2720
Ref: e2720
Ref: Complete Git Integration-Footnote-13410
Ref: Complete Git Integration-Footnote-23462
Node: Sphinx Documentation3511
Ref: features sphinx-documentation3641
Ref: f3641
Ref: Sphinx Documentation-Footnote-13969
Node: Unittest & Coverage4002
Ref: features unittest-coverage4131
Ref: 104131
Ref: Unittest & Coverage-Footnote-14562
Ref: Unittest & Coverage-Footnote-24589
Node: Requirements Management4636
Ref: features requirements-management4758
Ref: 114758
Node: Easy Updating4944
Ref: features easy-updating5038
Ref: 125038
Node: Contributing5287
Ref: contrib contributing5384
Ref: 135384
Ref: contrib doc5384
Ref: 145384
Node: Bug Reports5652
Ref: contrib bug-reports5729
Ref: 155729
Ref: Bug Reports-Footnote-15912
Node: Code5968
Ref: contrib code6045
Ref: 166045
Ref: Code-Footnote-17007
Ref: Code-Footnote-27058
Ref: Code-Footnote-37097
Node: pyscaffold7125
Ref: _rst/modules pyscaffold7205
Ref: 177205
Ref: _rst/modules doc7205
Ref: 187205
Node: pyscaffold package7270
Ref: _rst/pyscaffold doc7339
Ref: 197339
Ref: _rst/pyscaffold pyscaffold-package7339
Ref: 1a7339
Node: Submodules7769
Ref: _rst/pyscaffold submodules7869
Ref: 1b7869
Node: pyscaffold info module7908
Ref: _rst/pyscaffold module-pyscaffold info8039
Ref: 18039
Ref: _rst/pyscaffold pyscaffold-info-module8039
Ref: 1c8039
Ref: _rst/pyscaffold pyscaffold info email8102
Ref: 1d8102
Ref: _rst/pyscaffold pyscaffold info is_git_installed8142
Ref: 1e8142
Ref: _rst/pyscaffold pyscaffold info project8193
Ref: 1f8193
Ref: _rst/pyscaffold pyscaffold info username8239
Ref: 208239
Node: pyscaffold repo module8282
Ref: _rst/pyscaffold module-pyscaffold repo8427
Ref: 28427
Ref: _rst/pyscaffold pyscaffold-repo-module8427
Ref: 218427
Ref: _rst/pyscaffold pyscaffold repo git_tree_add8490
Ref: 228490
Ref: _rst/pyscaffold pyscaffold repo init_commit_repo8554
Ref: 238554
Ref: _rst/pyscaffold pyscaffold repo is_git_repo8620
Ref: 248620
Node: pyscaffold runner module8672
Ref: _rst/pyscaffold module-pyscaffold runner8822
Ref: 38822
Ref: _rst/pyscaffold pyscaffold-runner-module8822
Ref: 258822
Ref: _rst/pyscaffold pyscaffold runner main8889
Ref: 268889
Ref: _rst/pyscaffold pyscaffold runner parse_args8934
Ref: 278934
Ref: _rst/pyscaffold pyscaffold runner run8985
Ref: 288985
Node: pyscaffold structure module9071
Ref: _rst/pyscaffold module-pyscaffold structure9226
Ref: 49226
Ref: _rst/pyscaffold pyscaffold-structure-module9226
Ref: 299226
Ref: _rst/pyscaffold pyscaffold structure create_structure9299
Ref: 2a9299
Ref: _rst/pyscaffold pyscaffold structure make_structure9398
Ref: 2b9398
Ref: _rst/pyscaffold pyscaffold structure set_default_args9456
Ref: 2c9456
Node: pyscaffold templates module9516
Ref: _rst/pyscaffold pyscaffold-templates-module9670
Ref: 2d9670
Ref: _rst/pyscaffold module-pyscaffold templates9670
Ref: 59670
Ref: _rst/pyscaffold pyscaffold templates authors9743
Ref: 2e9743
Ref: _rst/pyscaffold pyscaffold templates copying9794
Ref: 2f9794
Ref: _rst/pyscaffold pyscaffold templates coveragerc9845
Ref: 309845
Ref: _rst/pyscaffold pyscaffold templates get_template9899
Ref: 319899
Ref: _rst/pyscaffold pyscaffold templates gitignore9955
Ref: 329955
Ref: _rst/pyscaffold pyscaffold templates gitignore_empty10008
Ref: 3310008
Ref: _rst/pyscaffold pyscaffold templates init10067
Ref: 3410067
Ref: _rst/pyscaffold pyscaffold templates manifest_in10115
Ref: 3510115
Ref: _rst/pyscaffold pyscaffold templates readme10170
Ref: 3610170
Ref: _rst/pyscaffold pyscaffold templates requirements10220
Ref: 3710220
Ref: _rst/pyscaffold pyscaffold templates setup10276
Ref: 3810276
Ref: _rst/pyscaffold pyscaffold templates sphinx_conf10325
Ref: 3910325
Ref: _rst/pyscaffold pyscaffold templates sphinx_index10380
Ref: 3a10380
Ref: _rst/pyscaffold pyscaffold templates sphinx_makefile10436
Ref: 3b10436
Ref: _rst/pyscaffold pyscaffold templates version10495
Ref: 3c10495
Ref: _rst/pyscaffold pyscaffold templates versioneer10546
Ref: 3d10546
Node: pyscaffold utils module10600
Ref: _rst/pyscaffold pyscaffold-utils-module10742
Ref: 3e10742
Ref: _rst/pyscaffold module-pyscaffold utils10742
Ref: 610742
Ref: _rst/pyscaffold pyscaffold utils ObjKeeper10807
Ref: 3f10807
Ref: _rst/pyscaffold pyscaffold utils ObjKeeper instances10889
Ref: 4010889
Ref: _rst/pyscaffold pyscaffold utils capture_objs10925
Ref: 4110925
Ref: _rst/pyscaffold pyscaffold utils chdir10976
Ref: 4210976
Ref: _rst/pyscaffold pyscaffold utils exceptions2exit11030
Ref: 4311030
Ref: _rst/pyscaffold pyscaffold utils is_valid_identifier11095
Ref: 4411095
Ref: _rst/pyscaffold pyscaffold utils list2str11156
Ref: 4511156
Ref: _rst/pyscaffold pyscaffold utils make_valid_identifier11213
Ref: 4611213
Ref: _rst/pyscaffold pyscaffold utils safe_get11276
Ref: 4711276
Ref: _rst/pyscaffold pyscaffold utils safe_set11335
Ref: 4811335
Node: Module contents11401
Ref: _rst/pyscaffold module-contents11507
Ref: 4911507
Ref: _rst/pyscaffold module-pyscaffold11507
Ref: 011507
Node: Indices and tables11556
Ref: index indices-and-tables11663
Ref: 4a11663
Node: Python Module Index11755
Node: Index12079

End Tag Table


Local Variables:
coding: utf-8
End:
