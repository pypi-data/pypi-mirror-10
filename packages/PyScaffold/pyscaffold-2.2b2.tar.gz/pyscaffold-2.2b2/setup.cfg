[metadata]
description = Tool for easily putting up the scaffold of a Python project
author = Florian Wilhelm
author_email = Florian.Wilhelm@blue-yonder.com
license = new BSD
url = http://pyscaffold.readthedocs.org/
# Comma separated list of data INSIDE your package to include.
# DO NOT prepend the package name when specifying files and folders.
package_data = data/*
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = Development Status :: 5 - Production/Stable,
              Topic :: Utilities,
              Programming Language :: Python,
              Programming Language :: Python :: 2,
              Programming Language :: Python :: 2.7,
              Programming Language :: Python :: 3,
              Programming Language :: Python :: 3.3,
              Programming Language :: Python :: 3.4,
              Environment :: Console,
              Intended Audience :: Developers,
              License :: OSI Approved :: BSD License,
              Operating System :: POSIX :: Linux,
              Operating System :: Unix,
              Operating System :: MacOS,
              Operating System :: Microsoft :: Windows

[console_scripts]
# Add here console scripts like:
# hello_world = pyscaffold.module:function
putup = pyscaffold.runner:run

[data_files]
# Add here data to be included which lies OUTSIDE your package, e.g.
# path/to/destination = files/to/include, others/to/include
# This is the same as adding files to MANIFEST.in which is not needed anymore.
# The destination is relative to the root of your virtual environment.
# Use ** as wildcard if you want to recursively include a pattern, e.g.
# tests/**.py would include all py-files in all subfolders of tests.
share/pyscaffold = *.rst, *.txt

[extras_require]
# Add here additional requirements for extra features, like:
# PDF = ReportLab>=1.2, RXP
ALL = django, cookiecutter

[pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts = tests
    --cov pyscaffold --cov-report term-missing
    --verbose

[aliases]
test = pytest
