# rsl.__rsl_lextab.py. This file automatically created by PLY (version 3.4). Don't edit!
_tabversion   = '3.2'
_lextokens    = {'STAR': 1, 'ELIF': 1, 'UOP': 1, 'REALconstant': 1, 'ARROW': 1, 'INVOKE': 1, 'FORMAT': 1, 'EQEQ': 1, 'TEXT': 1, 'SPECIALWHERE': 1, 'IN': 1, 'NE': 1, 'PRINTTOK': 1, 'BAD': 1, 'PLUS': 1, 'PHRASE': 1, 'CLEARTOK': 1, 'MINUS': 1, 'COMMA': 1, 'COMMENT': 1, 'LE': 1, 'WORD': 1, 'SEMICOLON': 1, 'EQ': 1, 'CREATEOBJ': 1, 'NEWLINE': 1, 'GE': 1, 'DQUOTE': 1, 'SELECTANY': 1, 'PIPE': 1, 'LT': 1, 'COLON': 1, 'DOT': 1, 'ENDFOR': 1, 'RCBRAC': 1, 'BREAKWHILE': 1, 'ASSIGN': 1, 'FUNCTION': 1, 'GT': 1, 'EXITTOK': 1, 'FOR': 1, 'INTconstant': 1, 'DOLLAR': 1, 'RBRAC': 1, 'PARAM': 1, 'ELSE': 1, 'FROMINSTOF': 1, 'LITERAL': 1, 'LCBRAC': 1, 'AMPERSAND': 1, 'BREAKFOR': 1, 'ENDIF': 1, 'LPAREN': 1, 'RPAREN': 1, 'INCLUDE': 1, 'WHERE': 1, 'SELECTONE': 1, 'IF': 1, 'AND': 1, 'ENDWHILE': 1, 'LBRAC': 1, 'UMINUS': 1, 'ENDFUNCTION': 1, 'OF': 1, 'SLASH': 1, 'WHILE': 1, 'EMIT': 1, 'ALXLATE': 1, 'RELTRANS': 1, 'RELATEDBY': 1, 'TYPE': 1, 'OR': 1, 'SELECTMANY': 1}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'comment': 'exclusive', 'rt': 'exclusive', 'control': 'inclusive', 'INITIAL': 'inclusive', 'sv': 'inclusive', 'pc': 'inclusive', 'literal': 'exclusive', 'str': 'inclusive', 'psv': 'exclusive'}
_lexstatere   = {'comment': [('(?P<t_comment_NEWLINE>\\n)|(?P<t_comment_TEXT>[^ \\n]+)|(?P<t_comment_WHITESPACE>\\s)|(?P<t_comment_literal_DOLLAR>\\$)', [None, ('t_comment_NEWLINE', 'NEWLINE'), ('t_comment_TEXT', 'TEXT'), ('t_comment_WHITESPACE', 'WHITESPACE'), ('t_comment_literal_DOLLAR', 'DOLLAR')])], 'rt': [("(?P<t_rt_RELTRANS_1>R\\d+)|(?P<t_rt_DOT>\\.)|(?P<t_rt_RELTRANS_2>RI|IR)|(?P<t_rt_PHRASE>\\'[^\\']*\\')|(?P<t_rt_WORD>[a-zA-Z][0-9a-zA-Z_]*|[a-zA-Z][0-9a-zA-Z_]*[0-9a-zA-Z_]+)|(?P<t_rt_RBRAC>\\])", [None, ('t_rt_RELTRANS_1', 'RELTRANS_1'), ('t_rt_DOT', 'DOT'), ('t_rt_RELTRANS_2', 'RELTRANS_2'), ('t_rt_PHRASE', 'PHRASE'), ('t_rt_WORD', 'WORD'), ('t_rt_RBRAC', 'RBRAC')])], 'INITIAL': [('(?P<t_literal_INITIAL_pc_control_NEWLINE>\\n)|(?P<t_LITERAL>(?m)^[\\s]*(?=\\.\\.))|(?P<t_pc>(?m)^[\\s]*(?=[\\.]))|(?P<t_LITERAL_2>(?m)^[\\s]*(?=[^\\.\\n]))|(?P<t_WHITESPACE>\\s)|(?P<t_DOLLAR>\\$)|(?P<t_LBRAC>\\[)|(?P<t_ARROW>\\-\\>)|(?P<t_LE>\\<\\=)|(?P<t_GE>\\>\\=)|(?P<t_EQEQ>\\=\\=)|(?P<t_NE>!\\=)|(?P<t_DOT>\\.)|(?P<t_COMMA>,)|(?P<t_LPAREN>\\()|(?P<t_RPAREN>\\))|(?P<t_LCBRAC>\\{)|(?P<t_RCBRAC>\\})|(?P<t_STAR>\\*)|(?P<t_PLUS>\\+)|(?P<t_MINUS>\\-)|(?P<t_PIPE>\\|)|(?P<t_SLASH>/)|(?P<t_PROCENT>%)|(?P<t_AMPERSAND>\\&)|(?P<t_LT>\\<)|(?P<t_GT>\\>)|(?P<t_COLON>:)|(?P<t_SEMICOLON>;)|(?P<t_EQ>\\=)|(?P<t_UNDERLINE>_)', [None, ('t_literal_INITIAL_pc_control_NEWLINE', 'NEWLINE'), ('t_LITERAL', 'LITERAL'), ('t_pc', 'pc'), ('t_LITERAL_2', 'LITERAL_2'), ('t_WHITESPACE', 'WHITESPACE'), ('t_DOLLAR', 'DOLLAR'), ('t_LBRAC', 'LBRAC'), ('t_ARROW', 'ARROW'), ('t_LE', 'LE'), ('t_GE', 'GE'), ('t_EQEQ', 'EQEQ'), ('t_NE', 'NE'), ('t_DOT', 'DOT'), ('t_COMMA', 'COMMA'), ('t_LPAREN', 'LPAREN'), ('t_RPAREN', 'RPAREN'), ('t_LCBRAC', 'LCBRAC'), ('t_RCBRAC', 'RCBRAC'), ('t_STAR', 'STAR'), ('t_PLUS', 'PLUS'), ('t_MINUS', 'MINUS'), ('t_PIPE', 'PIPE'), ('t_SLASH', 'SLASH'), ('t_PROCENT', 'PROCENT'), ('t_AMPERSAND', 'AMPERSAND'), ('t_LT', 'LT'), ('t_GT', 'GT'), ('t_COLON', 'COLON'), ('t_SEMICOLON', 'SEMICOLON'), ('t_EQ', 'EQ'), ('t_UNDERLINE', 'UNDERLINE')])], 'sv': [('(?P<t_str_sv_WORD>[a-zA-Z][0-9a-zA-Z_\\ ]*[0-9a-zA-Z_]+|[a-zA-Z][0-9a-zA-Z_]*)|(?P<t_sv_RCBRAC>\\})', [None, ('t_str_sv_WORD', 'WORD'), ('t_sv_RCBRAC', 'RCBRAC')]), ('(?P<t_literal_INITIAL_pc_control_NEWLINE>\\n)|(?P<t_LITERAL>(?m)^[\\s]*(?=\\.\\.))|(?P<t_pc>(?m)^[\\s]*(?=[\\.]))|(?P<t_LITERAL_2>(?m)^[\\s]*(?=[^\\.\\n]))|(?P<t_WHITESPACE>\\s)|(?P<t_DOLLAR>\\$)|(?P<t_LBRAC>\\[)|(?P<t_ARROW>\\-\\>)|(?P<t_LE>\\<\\=)|(?P<t_GE>\\>\\=)|(?P<t_EQEQ>\\=\\=)|(?P<t_NE>!\\=)|(?P<t_DOT>\\.)|(?P<t_COMMA>,)|(?P<t_LPAREN>\\()|(?P<t_RPAREN>\\))|(?P<t_LCBRAC>\\{)|(?P<t_RCBRAC>\\})|(?P<t_STAR>\\*)|(?P<t_PLUS>\\+)|(?P<t_MINUS>\\-)|(?P<t_PIPE>\\|)|(?P<t_SLASH>/)|(?P<t_PROCENT>%)|(?P<t_AMPERSAND>\\&)|(?P<t_LT>\\<)|(?P<t_GT>\\>)|(?P<t_COLON>:)|(?P<t_SEMICOLON>;)|(?P<t_EQ>\\=)|(?P<t_UNDERLINE>_)', [None, ('t_literal_INITIAL_pc_control_NEWLINE', 'NEWLINE'), ('t_LITERAL', 'LITERAL'), ('t_pc', 'pc'), ('t_LITERAL_2', 'LITERAL_2'), ('t_WHITESPACE', 'WHITESPACE'), ('t_DOLLAR', 'DOLLAR'), ('t_LBRAC', 'LBRAC'), ('t_ARROW', 'ARROW'), ('t_LE', 'LE'), ('t_GE', 'GE'), ('t_EQEQ', 'EQEQ'), ('t_NE', 'NE'), ('t_DOT', 'DOT'), ('t_COMMA', 'COMMA'), ('t_LPAREN', 'LPAREN'), ('t_RPAREN', 'RPAREN'), ('t_LCBRAC', 'LCBRAC'), ('t_RCBRAC', 'RCBRAC'), ('t_STAR', 'STAR'), ('t_PLUS', 'PLUS'), ('t_MINUS', 'MINUS'), ('t_PIPE', 'PIPE'), ('t_SLASH', 'SLASH'), ('t_PROCENT', 'PROCENT'), ('t_AMPERSAND', 'AMPERSAND'), ('t_LT', 'LT'), ('t_GT', 'GT'), ('t_COLON', 'COLON'), ('t_SEMICOLON', 'SEMICOLON'), ('t_EQ', 'EQ'), ('t_UNDERLINE', 'UNDERLINE')])], 'pc': [('(?P<t_literal_INITIAL_pc_control_NEWLINE>\\n)|(?P<t_pc_control_COMMENT>\\.//|(?i)\\.comment)|(?P<t_pc_FUNCTION>(?i)\\.function)|(?P<t_pc_PARAM>(?i)\\.param)|(?P<t_pc_ENDFUNCTION>(?i)\\.end\\ function)|(?P<t_pc_INVOKE>(?i)\\.invoke)|(?P<t_pc_CLEARTOK>(?i)\\.clear)|(?P<t_pc_SELECTONE>(?i)\\.select\\ one)|(?P<t_pc_SELECTANY>(?i)\\.select\\ any)|(?P<t_pc_SELECTMANY>(?i)\\.select\\ many)|(?P<t_pc_IF>(?i)\\.if)|(?P<t_pc_ELIF>(?i)\\.elif)|(?P<t_pc_ELSE>(?i)\\.else)|(?P<t_pc_ENDIF>(?i)\\.end\\ if)|(?P<t_pc_FOR>(?i)\\.for\\ each)|(?P<t_pc_BREAKFOR>(?i)\\.break\\ for)|(?P<t_pc_ENDFOR>(?i)\\.end\\ for)|(?P<t_pc_WHILE>(?i)\\.while)|(?P<t_pc_BREAKWHILE>(?i)\\.break\\ while)|(?P<t_pc_ENDWHILE>(?i)\\.end\\ while)|(?P<t_pc_INCLUDE>(?i)\\.include)|(?P<t_pc_ASSIGN>(?i)\\.assign)|(?P<t_pc_PRINTTOK>(?i)\\.print)|(?P<t_pc_EXITTOK>(?i)\\.exit)|(?P<t_pc_EMIT>(?i)\\.emit\\ to\\ file)|(?P<t_pc_ALXLATE>(?i)\\.al_xlate)|(?P<t_pc_SPECIALWHERE>(?i)\\.special_where)|(?P<t_pc_CREATEOBJ>(?i)\\.create\\ object\\ instance)|(?P<t_pc_WORD>\\.([a-zA-Z][0-9a-zA-Z_]*|[a-zA-Z][0-9a-zA-Z_]*[0-9a-zA-Z_]+))', [None, ('t_literal_INITIAL_pc_control_NEWLINE', 'NEWLINE'), ('t_pc_control_COMMENT', 'COMMENT'), ('t_pc_FUNCTION', 'FUNCTION'), ('t_pc_PARAM', 'PARAM'), ('t_pc_ENDFUNCTION', 'ENDFUNCTION'), ('t_pc_INVOKE', 'INVOKE'), ('t_pc_CLEARTOK', 'CLEARTOK'), ('t_pc_SELECTONE', 'SELECTONE'), ('t_pc_SELECTANY', 'SELECTANY'), ('t_pc_SELECTMANY', 'SELECTMANY'), ('t_pc_IF', 'IF'), ('t_pc_ELIF', 'ELIF'), ('t_pc_ELSE', 'ELSE'), ('t_pc_ENDIF', 'ENDIF'), ('t_pc_FOR', 'FOR'), ('t_pc_BREAKFOR', 'BREAKFOR'), ('t_pc_ENDFOR', 'ENDFOR'), ('t_pc_WHILE', 'WHILE'), ('t_pc_BREAKWHILE', 'BREAKWHILE'), ('t_pc_ENDWHILE', 'ENDWHILE'), ('t_pc_INCLUDE', 'INCLUDE'), ('t_pc_ASSIGN', 'ASSIGN'), ('t_pc_PRINTTOK', 'PRINTTOK'), ('t_pc_EXITTOK', 'EXITTOK'), ('t_pc_EMIT', 'EMIT'), ('t_pc_ALXLATE', 'ALXLATE'), ('t_pc_SPECIALWHERE', 'SPECIALWHERE'), ('t_pc_CREATEOBJ', 'CREATEOBJ'), ('t_pc_WORD', 'WORD')]), ('(?P<t_literal_INITIAL_pc_control_NEWLINE>\\n)|(?P<t_LITERAL>(?m)^[\\s]*(?=\\.\\.))|(?P<t_pc>(?m)^[\\s]*(?=[\\.]))|(?P<t_LITERAL_2>(?m)^[\\s]*(?=[^\\.\\n]))|(?P<t_WHITESPACE>\\s)|(?P<t_DOLLAR>\\$)|(?P<t_LBRAC>\\[)|(?P<t_ARROW>\\-\\>)|(?P<t_LE>\\<\\=)|(?P<t_GE>\\>\\=)|(?P<t_EQEQ>\\=\\=)|(?P<t_NE>!\\=)|(?P<t_DOT>\\.)|(?P<t_COMMA>,)|(?P<t_LPAREN>\\()|(?P<t_RPAREN>\\))|(?P<t_LCBRAC>\\{)|(?P<t_RCBRAC>\\})|(?P<t_STAR>\\*)|(?P<t_PLUS>\\+)|(?P<t_MINUS>\\-)|(?P<t_PIPE>\\|)|(?P<t_SLASH>/)|(?P<t_PROCENT>%)|(?P<t_AMPERSAND>\\&)|(?P<t_LT>\\<)|(?P<t_GT>\\>)|(?P<t_COLON>:)|(?P<t_SEMICOLON>;)|(?P<t_EQ>\\=)|(?P<t_UNDERLINE>_)', [None, ('t_literal_INITIAL_pc_control_NEWLINE', 'NEWLINE'), ('t_LITERAL', 'LITERAL'), ('t_pc', 'pc'), ('t_LITERAL_2', 'LITERAL_2'), ('t_WHITESPACE', 'WHITESPACE'), ('t_DOLLAR', 'DOLLAR'), ('t_LBRAC', 'LBRAC'), ('t_ARROW', 'ARROW'), ('t_LE', 'LE'), ('t_GE', 'GE'), ('t_EQEQ', 'EQEQ'), ('t_NE', 'NE'), ('t_DOT', 'DOT'), ('t_COMMA', 'COMMA'), ('t_LPAREN', 'LPAREN'), ('t_RPAREN', 'RPAREN'), ('t_LCBRAC', 'LCBRAC'), ('t_RCBRAC', 'RCBRAC'), ('t_STAR', 'STAR'), ('t_PLUS', 'PLUS'), ('t_MINUS', 'MINUS'), ('t_PIPE', 'PIPE'), ('t_SLASH', 'SLASH'), ('t_PROCENT', 'PROCENT'), ('t_AMPERSAND', 'AMPERSAND'), ('t_LT', 'LT'), ('t_GT', 'GT'), ('t_COLON', 'COLON'), ('t_SEMICOLON', 'SEMICOLON'), ('t_EQ', 'EQ'), ('t_UNDERLINE', 'UNDERLINE')])], 'control': [('(?P<t_literal_INITIAL_pc_control_NEWLINE>\\n)|(?P<t_control_WHITESPACE>\\s)|(?P<t_pc_control_COMMENT>\\.//|(?i)\\.comment)|(?P<t_control_WHERE>(?i)where(?=\\s))|(?P<t_control_RELATEDBY>(?i)related\\ by(?=\\s))|(?P<t_control_FROMINSTOF>(?i)from\\ instances\\ of(?=\\s))|(?P<t_control_IN>(?i)in(?=\\s))|(?P<t_control_OF>(?i)of(?=\\s))|(?P<t_control_TYPE>(?i)(boolean|integer|real|string|inst_ref|inst_ref_set|frag_ref)(?=\\s))|(?P<t_control_AND>(?i)and(?=\\s))|(?P<t_control_OR>(?i)or(?=\\s))|(?P<t_control_UOP>(?i)(not_empty|not_first|not_last|not|empty|first|last|cardinality)(?=\\s))|(?P<t_control_REALconstant>(((\\d*\\.\\d+)|(\\d+\\.)([eE][-+]?\\d+)?)|(\\d+([eE][-+]?\\d+)))[FfLl]?)|(?P<t_control_INTconstant>\\d+)|(?P<t_control_WORD>[a-zA-Z][0-9a-zA-Z_]*|[a-zA-Z][0-9a-zA-Z_]*[0-9a-zA-Z_]+)|(?P<t_control_DQUOTE>\\")', [None, ('t_literal_INITIAL_pc_control_NEWLINE', 'NEWLINE'), ('t_control_WHITESPACE', 'WHITESPACE'), ('t_pc_control_COMMENT', 'COMMENT'), ('t_control_WHERE', 'WHERE'), ('t_control_RELATEDBY', 'RELATEDBY'), ('t_control_FROMINSTOF', 'FROMINSTOF'), ('t_control_IN', 'IN'), ('t_control_OF', 'OF'), ('t_control_TYPE', 'TYPE'), None, ('t_control_AND', 'AND'), ('t_control_OR', 'OR'), ('t_control_UOP', 'UOP'), None, ('t_control_REALconstant', 'REALconstant'), None, None, None, None, None, None, None, ('t_control_INTconstant', 'INTconstant'), ('t_control_WORD', 'WORD'), ('t_control_DQUOTE', 'DQUOTE')]), ('(?P<t_literal_INITIAL_pc_control_NEWLINE>\\n)|(?P<t_LITERAL>(?m)^[\\s]*(?=\\.\\.))|(?P<t_pc>(?m)^[\\s]*(?=[\\.]))|(?P<t_LITERAL_2>(?m)^[\\s]*(?=[^\\.\\n]))|(?P<t_WHITESPACE>\\s)|(?P<t_DOLLAR>\\$)|(?P<t_LBRAC>\\[)|(?P<t_ARROW>\\-\\>)|(?P<t_LE>\\<\\=)|(?P<t_GE>\\>\\=)|(?P<t_EQEQ>\\=\\=)|(?P<t_NE>!\\=)|(?P<t_DOT>\\.)|(?P<t_COMMA>,)|(?P<t_LPAREN>\\()|(?P<t_RPAREN>\\))|(?P<t_LCBRAC>\\{)|(?P<t_RCBRAC>\\})|(?P<t_STAR>\\*)|(?P<t_PLUS>\\+)|(?P<t_MINUS>\\-)|(?P<t_PIPE>\\|)|(?P<t_SLASH>/)|(?P<t_PROCENT>%)|(?P<t_AMPERSAND>\\&)|(?P<t_LT>\\<)|(?P<t_GT>\\>)|(?P<t_COLON>:)|(?P<t_SEMICOLON>;)|(?P<t_EQ>\\=)|(?P<t_UNDERLINE>_)', [None, ('t_literal_INITIAL_pc_control_NEWLINE', 'NEWLINE'), ('t_LITERAL', 'LITERAL'), ('t_pc', 'pc'), ('t_LITERAL_2', 'LITERAL_2'), ('t_WHITESPACE', 'WHITESPACE'), ('t_DOLLAR', 'DOLLAR'), ('t_LBRAC', 'LBRAC'), ('t_ARROW', 'ARROW'), ('t_LE', 'LE'), ('t_GE', 'GE'), ('t_EQEQ', 'EQEQ'), ('t_NE', 'NE'), ('t_DOT', 'DOT'), ('t_COMMA', 'COMMA'), ('t_LPAREN', 'LPAREN'), ('t_RPAREN', 'RPAREN'), ('t_LCBRAC', 'LCBRAC'), ('t_RCBRAC', 'RCBRAC'), ('t_STAR', 'STAR'), ('t_PLUS', 'PLUS'), ('t_MINUS', 'MINUS'), ('t_PIPE', 'PIPE'), ('t_SLASH', 'SLASH'), ('t_PROCENT', 'PROCENT'), ('t_AMPERSAND', 'AMPERSAND'), ('t_LT', 'LT'), ('t_GT', 'GT'), ('t_COLON', 'COLON'), ('t_SEMICOLON', 'SEMICOLON'), ('t_EQ', 'EQ'), ('t_UNDERLINE', 'UNDERLINE')])], 'str': [('(?P<t_str_sv_WORD>[a-zA-Z][0-9a-zA-Z_\\ ]*[0-9a-zA-Z_]+|[a-zA-Z][0-9a-zA-Z_]*)|(?P<t_str_TEXT>[^\\"\\$]+|(\\"\\")+|(\\$\\$))|(?P<t_str_DQUOTE>\\")', [None, ('t_str_sv_WORD', 'WORD'), ('t_str_TEXT', 'TEXT'), None, None, ('t_str_DQUOTE', 'DQUOTE')]), ('(?P<t_literal_INITIAL_pc_control_NEWLINE>\\n)|(?P<t_LITERAL>(?m)^[\\s]*(?=\\.\\.))|(?P<t_pc>(?m)^[\\s]*(?=[\\.]))|(?P<t_LITERAL_2>(?m)^[\\s]*(?=[^\\.\\n]))|(?P<t_WHITESPACE>\\s)|(?P<t_DOLLAR>\\$)|(?P<t_LBRAC>\\[)|(?P<t_ARROW>\\-\\>)|(?P<t_LE>\\<\\=)|(?P<t_GE>\\>\\=)|(?P<t_EQEQ>\\=\\=)|(?P<t_NE>!\\=)|(?P<t_DOT>\\.)|(?P<t_COMMA>,)|(?P<t_LPAREN>\\()|(?P<t_RPAREN>\\))|(?P<t_LCBRAC>\\{)|(?P<t_RCBRAC>\\})|(?P<t_STAR>\\*)|(?P<t_PLUS>\\+)|(?P<t_MINUS>\\-)|(?P<t_PIPE>\\|)|(?P<t_SLASH>/)|(?P<t_PROCENT>%)|(?P<t_AMPERSAND>\\&)|(?P<t_LT>\\<)|(?P<t_GT>\\>)|(?P<t_COLON>:)|(?P<t_SEMICOLON>;)|(?P<t_EQ>\\=)|(?P<t_UNDERLINE>_)', [None, ('t_literal_INITIAL_pc_control_NEWLINE', 'NEWLINE'), ('t_LITERAL', 'LITERAL'), ('t_pc', 'pc'), ('t_LITERAL_2', 'LITERAL_2'), ('t_WHITESPACE', 'WHITESPACE'), ('t_DOLLAR', 'DOLLAR'), ('t_LBRAC', 'LBRAC'), ('t_ARROW', 'ARROW'), ('t_LE', 'LE'), ('t_GE', 'GE'), ('t_EQEQ', 'EQEQ'), ('t_NE', 'NE'), ('t_DOT', 'DOT'), ('t_COMMA', 'COMMA'), ('t_LPAREN', 'LPAREN'), ('t_RPAREN', 'RPAREN'), ('t_LCBRAC', 'LCBRAC'), ('t_RCBRAC', 'RCBRAC'), ('t_STAR', 'STAR'), ('t_PLUS', 'PLUS'), ('t_MINUS', 'MINUS'), ('t_PIPE', 'PIPE'), ('t_SLASH', 'SLASH'), ('t_PROCENT', 'PROCENT'), ('t_AMPERSAND', 'AMPERSAND'), ('t_LT', 'LT'), ('t_GT', 'GT'), ('t_COLON', 'COLON'), ('t_SEMICOLON', 'SEMICOLON'), ('t_EQ', 'EQ'), ('t_UNDERLINE', 'UNDERLINE')])], 'literal': [('(?P<t_literal_INITIAL_pc_control_NEWLINE>\\n)|(?P<t_literal_LITERAL>[^\\$\\n]+|(\\$\\$)+)|(?P<t_comment_literal_DOLLAR>\\$)', [None, ('t_literal_INITIAL_pc_control_NEWLINE', 'NEWLINE'), ('t_literal_LITERAL', 'LITERAL'), None, ('t_comment_literal_DOLLAR', 'DOLLAR')])], 'psv': [('(?P<t_psv_FORMAT>[OoCcLlRrTtUu_])|(?P<t_psv_LCBRAC>\\{)', [None, ('t_psv_FORMAT', 'FORMAT'), ('t_psv_LCBRAC', 'LCBRAC')])]}
_lexstateignore = {'control': '', 'pc': '', 'INITIAL': '', 'sv': '', 'str': ''}
_lexstateerrorf = {'rt': 't_rt_error', 'comment': 't_comment_error', 'INITIAL': 't_error', 'sv': 't_error', 'pc': 't_error', 'control': 't_error', 'str': 't_error', 'literal': 't_literal_error', 'psv': 't_psv_error'}
